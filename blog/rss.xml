<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Chickensoft ‚Äî Open source tools for Godot and C# Blog</title>
        <link>https://chickensoft.games/blog</link>
        <description>Chickensoft ‚Äî Open source tools for Godot and C# Blog</description>
        <lastBuildDate>Tue, 18 Feb 2025 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Display Scaling in Godot 4]]></title>
            <link>https://chickensoft.games/blog/display-scaling</link>
            <guid>https://chickensoft.games/blog/display-scaling</guid>
            <pubDate>Tue, 18 Feb 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Everything you shouldn't have to know about display scaling, including
fixes, workarounds, tools, theme design, window sizes, and logical vs native resolutions.
]]></description>
            <content:encoded><![CDATA[<figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/header-207c77b57605a887208005f979586721.jpg"><img src="/assets/images/header-207c77b57605a887208005f979586721.jpg" alt="Article header image. Balloons with icons inside representing the new packages and updates." style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center"></figcaption></figure><p>Display scaling is extremely nuanced on modern, multi-monitor desktop environments. As it turns out, making your game or app scale consistently across various displays and operating system is non-trivial and can require additional information from the engine that Godot does not provide.</p><p>Godot 4 actually provides a number of <a href="https://docs.godotengine.org/en/stable/tutorials/rendering/multiple_resolutions.html" target="_blank" rel="noopener noreferrer">helpful scaling features</a> right out of the box which solve simple scaling issues and can be easily configured to work well for pixel art games. Unfortunately, if you want a high degree of customization over scaling in your project, you'll quickly run into some of Godot's limitations and known issues:</p><ul><li>‚ùå Inaccurate/unreliable display scale factor detection.</li><li>‚ùå <a href="https://github.com/godotengine/godot/issues/45203" target="_blank" rel="noopener noreferrer">Blurry rendering on a secondary monitor</a> in Windows if the secondary monitor has a higher scale factor than the primary monitor (can't be worked around, unfortunately ‚Äî just tell your players not to do this).</li><li>‚ùå Theme scale <a href="https://github.com/godotengine/godot/issues/83547" target="_blank" rel="noopener noreferrer">can't be configured at runtime</a>.</li></ul><p>A simple google search for <em>"godot 4 display scaling reddit"</em> returns pages and pages of posts by developers asking for help with various scaling issues. The Godot team is <em>very aware</em> of the open issues related to scaling, themes, and sizing. We've always been very optimistic about Godot's future and we expect that many of these issues will be fixed over the next year or two.</p><p><strong>In the meantime</strong>, we've built some tools that will help you workaround some of Godot's current limitations on macOS and Windows. This allows you to ship your project <em>today</em> without having to wait for the larger issues to be addressed. Here's what we'll be focusing on:</p><ul><li>‚úÖ Scaling UI so that it takes up the same amount of physical pixels, regardless of the user's display scale. This is generally desired for games, as you can always build a custom scale factor on top of that once you've corrected for the current display settings.</li></ul><p>Once you can do that, it's easy to offer different scaling behaviors that leverage the corrected display scale:</p><ul><li>‚úÖ Make it easy to <strong>scale the UI proportionally</strong> to the window (useful for games that only run fullscreen, have very precise UI layout requirements, or are only intended to support a single resolution).</li><li>‚úÖ Make it easy to <strong>keep the UI a fixed size</strong> while scaling the game itself when the window is resized (useful for games and apps which want to run well when windowed).</li></ul><p>Both of these behaviors work well when running fullscreen or windowed. Neither uses Godot's <code>Viewport</code> scaling, either: they both render the UI directly to the final, scaled size, allowing mipmaps to be respected and enabling a crisp, beautiful user interface.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_S0QG"><p>üëæ About <strong>pixel art games</strong>...</p><p>What follows is a little treatise on display scaling <strong>which generally applies to non-pixel-art games and applications</strong> made with Godot. If you're making a pixel art game, you may still find the tools and techniques outlined here useful, but you will likely want to disable fractional scaling.</p></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-ideal-resolution">The Ideal Resolution<a href="#the-ideal-resolution" class="hash-link" aria-label="Direct link to The Ideal Resolution" title="Direct link to The Ideal Resolution">‚Äã</a></h2><p>If you've seen any posts asking for help about display scaling with Godot, you've probably read answers posted by <a href="https://github.com/Calinou" target="_blank" rel="noopener noreferrer">Calinou</a>, a Godot contributor with extensive knowledge of how resolutions and scaling are handled. Calinou also wrote the <a href="https://docs.godotengine.org/en/stable/tutorials/rendering/multiple_resolutions.html" target="_blank" rel="noopener noreferrer">multiple resolutions</a> guide.</p><p>Calinou <a href="https://github.com/godotengine/godot/issues/83547#issuecomment-2576576580" target="_blank" rel="noopener noreferrer">generally recommends</a> defining a fairly high <strong>base resolution</strong> for your game, such as 4K, and then scaling it down for lower resolution screens. Developers should <a href="https://docs.godotengine.org/en/stable/tutorials/assets_pipeline/importing_images.html#mipmaps-generate" target="_blank" rel="noopener noreferrer">enable mipmaps</a> when importing high resolution UI art to avoid rendering artifacts and improve rendering efficiency on various screen sizes.</p><p>From now on, we'll assume that you're designing all of your UI art for such a maximum-supported resolution. You can refer to this as the <code>base resolution</code>, <code>theme design resolution</code>, or <code>ideal resolution</code> ‚Äî you get the idea.</p><p>When designing high resolution UI assets, make sure they appear large enough to be be understood and enjoyed by the player if the game were to run at your <code>base resolution</code>.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/display_resolution-44fa79e99d083efe79cc008bdd395a82.png"><img src="/assets/images/display_resolution-44fa79e99d083efe79cc008bdd395a82.png" alt="display resolution abstraction layers" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">"Resolution" means different things to different people. It's important to clarify which resolution they're actually referring to.</figcaption></figure><h2 class="anchor anchorWithStickyNavbar_LWe7" id="virtual-desktop-coordinates">Virtual Desktop Coordinates<a href="#virtual-desktop-coordinates" class="hash-link" aria-label="Direct link to Virtual Desktop Coordinates" title="Direct link to Virtual Desktop Coordinates">‚Äã</a></h2><p>When you call <code>DisplayServer.ScreenGetSize(GetWindow().CurrentScreen)</code> in Godot, you get Godot's understanding of the logical screen resolution, not necessarily the display's actual native resolution.</p><p>To understand what's happening, it's important to understand what virtual desktop coordinates are. <a href="https://learn.microsoft.com/en-us/windows/win32/gdi/the-virtual-screen" target="_blank" rel="noopener noreferrer">Microsoft's Win32 developer documentation</a> sums it up quite nicely:</p><blockquote><p>The bounding rectangle of all the monitors is the virtual screen. ‚Äî Microsoft</p></blockquote><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/virtual_desktop-924266afb9cd5e8d6b5e17b2e8d79021.png"><img src="/assets/images/virtual_desktop-924266afb9cd5e8d6b5e17b2e8d79021.png" alt="macOS Arrange Displays settings menu" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">Whenever you arrange your desktops virtually, you're positioning them in virtual desktop coordinates.</figcaption></figure><h3 class="anchor anchorWithStickyNavbar_LWe7" id="a-brief-history">A Brief History<a href="#a-brief-history" class="hash-link" aria-label="Direct link to A Brief History" title="Direct link to A Brief History">‚Äã</a></h3><p>Back when the iPhone came out, it wasn't uncommon to hardcode UI coordinates for its <a href="https://iosref.com/res" target="_blank" rel="noopener noreferrer"><code>320x480</code></a> screen. There was the one preordained screen size and we all accepted it.</p><p>Later, the iPhone 4 introduced a retina screen that had twice the amount of pixels in each dimension (<code>640x960</code>). Rather than break everyone's hardcoded app, they made iOS tell apps that the screen was still <code>320x480</code>. Under the hood, iOS doubled the display back-buffer size. Such a pseudo-resolution that differs from the actual native resolution is an example of "logical resolution." At the time, it was a mercy ‚Äî but now it might be considered criminal.</p><p>As phones kept coming out, developers soon realized that screen sizes would be changing constantly. Modern UI frameworks arose that were built around responsive design with horizontal and vertical container systems. Developers were told "not to worry" about actual native resolutions and just make their apps adaptable. Apps were (and still are) instructed to use multiple sizes of bitmap graphics to let the operating system pick the best one for the current screen size.</p><p>...and then, there's stuff made with game engines. Games and graphically intense applications are typically forced to work at a slightly lower level of abstraction than most apps for the sake of performance. Games also tend to be highly artistic and use a lot of raster graphics, making it harder to create adaptable user interfaces.</p><p>So, given all these factors, you can imagine how frustrating it is as a game developer to have an operating system that <em>lies to you</em> about the resolution of the screen, encourages you to make adaptable interfaces, and then won't give you the actual native screen resolution or scale factor. Chances are you don't have to imagine it if you're reading this.</p><p>Today, operating systems use virtual desktop coordinates to position windows across monitors and operate independently of display scale factors. And they all do it differently, too.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="scale-factors">Scale Factors<a href="#scale-factors" class="hash-link" aria-label="Direct link to Scale Factors" title="Direct link to Scale Factors">‚Äã</a></h2><p>Modern versions of macOS and Windows allow you to set a scale factor for each display. The scale factor determines how big UI elements appear on screen. On most systems and displays, this is typically between 100% and 300%. Before scale factors were well implemented in operating systems, we used to have to lower the screen resolution (the output signal from the operating system to the monitor) if we wanted to make everything bigger (which also made everything look blurry).</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="windows-scaling">Windows Scaling<a href="#windows-scaling" class="hash-link" aria-label="Direct link to Windows Scaling" title="Direct link to Windows Scaling">‚Äã</a></h3><p>Modern versions of Windows make scaling pretty simple. They give you a dropdown in under Display Settings that allow you to pick a percentage. It really is that simple.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/windows_scaling-fddad82324b81b3fbc50415c6ca24643.png"><img src="/assets/images/windows_scaling-fddad82324b81b3fbc50415c6ca24643.png" alt="Windows display scaling menu" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">Windows actually gets display scaling right.</figcaption></figure><h3 class="anchor anchorWithStickyNavbar_LWe7" id="macos-scaling">macOS Scaling<a href="#macos-scaling" class="hash-link" aria-label="Direct link to macOS Scaling" title="Direct link to macOS Scaling">‚Äã</a></h3><p>macOS, on the other hand, likes to burden users with knowledge of past resolutions. Instead of just giving you a percentage like a sane, ordinary operating system, they tell you what your choice would <em>resemble</em> if you were to still living in a world without modern screens packed full of pixels.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/macos_scaling-f562a1d0a9065443a369bff6e2b67506.png"><img src="/assets/images/macos_scaling-f562a1d0a9065443a369bff6e2b67506.png" alt="macOS display scaling menu" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">At least they give you little pictures to choose from.</figcaption></figure><p>Notice how it says using a scaled resolution can impact performance? That's only barely true: <a href="https://appleinsider.com/inside/macos/tips/what-is-display-scaling-on-mac-and-why-you-probably-shouldnt-worry-about-it" target="_blank" rel="noopener noreferrer">they've done tests</a> and it only affects performance by about 1-3%. So scale away!</p><p>You can see that I've selected the "More Space" option in the picture above, which indicates a resolution of <code>1800x1169</code>. But that's not actually the native resolution of the Macbook Pro I own. It's <code>3024x1964</code>. If you divide the native resolution by the scaled resolution, you get a scale factor of <code>1.68</code>, or 168%. This is the scale factor that macOS uses to determine how big to make UI elements on screen. Because it's not an integer, macOS is warning me that it might be a little more expensive to compute. But it's a non-issue on today's hardware.</p><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_S0QG"><p>What Apple gets wrong in the user interface, they manage to make up for with their hardware. The default option has a logical resolution of <code>1512x982</code>, which is exactly half the native resolution on my machine, yielding that sweet, sweet <code>x2</code> integer scale factor. Better yet, it results in a very pleasant experience with readable UI elements that are just the right size for everyday use.</p><p>That being said, Apple still calls their displays "retina", even though the days of having "twice as many pixels as other displays" have long past. Now, almost all computers which compete with Apple's offerings offer screens with just as many pixels, if not much more.</p></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="displaying-independent-of-scaling">Displaying Independent of Scaling<a href="#displaying-independent-of-scaling" class="hash-link" aria-label="Direct link to Displaying Independent of Scaling" title="Direct link to Displaying Independent of Scaling">‚Äã</a></h2><p>If you're making an app with Godot or want to make a game that offers a high degree of flexibility or control over presentation, you'll likely want to display your game window so that it takes up the same amount of physical pixels <em>regardless of what the player has set their display scale to</em>.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_S0QG"><p>Back in the day, changing the user's resolution was common when starting a game, but is now considered outdated (and annoying). Fortunately, that's almost never necessary anymore.</p></div></div><p>This isn't a silver bullet, but it's a good approach for most desktop games and will tend to work well on a wide variety of monitors, despite the fact that operating systems really don't want you to think about native resolutions. For applications with lots of UI elements made out of raster graphics (like most games), knowing the actual pixel resolution is extremely helpful because it allows the application to make better decisions about rendering the UI in a way that preserves its crispness.</p><p>Unfortunately, it's not possible to render independently of display scale factors without more information than what Godot is currently able to provide. To make those computations, you need the display's scale factor and native resolution.</p><p>Godot does provide the monitor's scale on macOS, but it is not the scale factor set by the user in the display preferences. Instead, it's the retina integer screen multiplier ‚Äî which is useful, but not quite enough information by itself.</p><p>On Windows, Godot allows you to get the DPI of a display ‚Äî but it's often wrong in multi-monitor environments due to Godot not implementing per-monitor DPI awareness yet. This results in getting the DPI for whatever display is the primary display, regardless of which display you asked for.</p><p>Likewise, whenever you ask Godot for the screen resolution on macOS or Windows, it returns the logical screen resolution in virtual desktop coordinates scaled by what it thinks the scale factor is, complicating matters further. On Windows, if you're on a secondary monitor with a different scale factor than the primary monitor, you end up a liminal coordinate space where none of the values make sense.</p><p>Despite these limitations, Godot provides several easy-to-use "knobs" for adjusting scaling in a game: <code>window.ContentScaleFactor</code>, <code>window.Size</code>, project viewport and window size overrides, along with the various aspect and scale mode settings. It's still a bit of a hassle to get everything configured correctly, though.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/desk-d67fdc947e5a4b9d639c3be73417a76b.jpg"><img src="/assets/images/desk-d67fdc947e5a4b9d639c3be73417a76b.jpg" alt="My desk with a bunch of monitors" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">The 4K, 3K, 2K, and HD monitor I've been using to develop display scaling utilities for macOS and Windows.</figcaption></figure><h3 class="anchor anchorWithStickyNavbar_LWe7" id="finding-the-native-resolution--scale-factor">Finding the Native Resolution &amp; Scale Factor<a href="#finding-the-native-resolution--scale-factor" class="hash-link" aria-label="Direct link to Finding the Native Resolution &amp; Scale Factor" title="Direct link to Finding the Native Resolution &amp; Scale Factor">‚Äã</a></h3><p>For the last few months, I've been hard at work developing new utilities to make it possible to get a display's native resolution and the operating system's scale factor for that display, as set by the user. And yes, it took <em>months</em> to figure all this out.</p><p>We can gather this accurate information on Windows 10+ and macOS by using Chickensoft's new Platform package. Platform is a set of native extensions for Godot which invoke Win32 API's on Windows and CoreGraphics on macOS to determine the actual scale factor and native resolution of the monitor that a <a href="https://docs.godotengine.org/en/stable/classes/class_window.html" target="_blank" rel="noopener noreferrer">Godot Window</a> is on.</p><section style="margin-bottom:var(--ifm-leading)"><a href="https://github.com/chickensoft-games/Platform" class="ghCard_SADR"><header class="header_EL4w"><div class="ghLogo_Dvj7"><svg width="24" height="24" viewBox="0 0 19 19" version="1.1" id="svg3" xmlns="http://www.w3.org/2000/svg"><path fill="currentColor" id="path2" d="m 9.46,0.502 c -4.93,0 -8.928,3.997 -8.928,8.929 0,3.944 2.558,7.291 6.106,8.472 0.447,0.081 0.609,-0.194 0.609,-0.431 C 7.247,17.26 7.24,16.699 7.235,15.954 4.752,16.493 4.228,14.757 4.228,14.757 3.822,13.725 3.236,13.451 3.236,13.451 c -0.81,-0.554 0.062,-0.543 0.062,-0.543 0.896,0.063 1.367,0.92 1.367,0.92 0.797,1.365 2.09,0.971 2.599,0.742 C 7.345,13.993 7.576,13.599 7.831,13.376 5.848,13.151 3.764,12.385 3.764,8.964 3.764,7.989 4.112,7.192 4.683,6.568 4.591,6.342 4.284,5.434 4.77,4.205 c 0,0 0.75,-0.24 2.455,0.915 0.712,-0.198 1.477,-0.297 2.236,-0.3 0.758,0.003 1.522,0.102 2.235,0.3 1.704,-1.155 2.453,-0.915 2.453,-0.915 0.487,1.229 0.181,2.137 0.089,2.363 0.572,0.624 0.918,1.421 0.918,2.396 0,3.43 -2.088,4.184 -4.077,4.405 0.32,0.276 0.606,0.821 0.606,1.654 0,1.194 -0.011,2.157 -0.011,2.449 0,0.239 0.161,0.517 0.614,0.43 3.545,-1.183 6.101,-4.528 6.101,-8.471 0,-4.932 -3.998,-8.929 -8.929,-8.929 z"></path></svg></div><div class="headerTitle__RVn"><h2>chickensoft-games<!-- -->/</h2><h1>Platform</h1></div><div class="headerLogo_j3df"><img width="auto" height="auto"></div></header><summary class="description_nH2g">Platform-specific native extensions for Godot, written in C# and compiled ahead ahead-of-time (AOT).</summary><footer class="footer_DLm1"><div class="footerItem_ahyA"><svg width="21" height="24" role="img" version="1.1" viewBox="0 0 14 16"><path fill="currentColor" fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">7</span><span class="label_phh9">Stars</span></div></div><div class="footerItem_ahyA"><svg width="15" height="24" role="img" version="1.1" viewBox="0 0 10 16"><path fill="currentColor" fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">2</span><span class="label_phh9">Forks</span></div></div><div class="footerItemLanguages_BkNk"><span class="langColor_kTSd" style="background-color:#178600"></span><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">C#</span></div></div></footer></a></section><div class="theme-admonition theme-admonition-caution alert alert--warning admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</div><div class="admonitionContent_S0QG"><p>Not-so-fun fact: Platform actually uses an API that's only available on Windows 10+ to determine the monitor's <em>actual</em> scale factor. It essentially allows us to temporarily turn-on "per-monitor DPI awareness" on our thread so we can get the real information we need.</p><p>Unfortunately, this means we can really only solve display scaling on Windows versions <code>&gt;=10</code> (which shouldn't be too much of an issue these days for new games being released). The macOS implementation just uses math and a few CoreGraphics API's which have been around for a long time, so it doesn't share this limitation.</p></div></div><p>But, you probably won't ever need to use Platform directly. It's used by the new, higher level GameTools package which will invoke it for you, help you collect the scaling information, and apply it to your game window.</p><section style="margin-bottom:var(--ifm-leading)"><a href="https://github.com/chickensoft-games/GameTools" class="ghCard_SADR"><header class="header_EL4w"><div class="ghLogo_Dvj7"><svg width="24" height="24" viewBox="0 0 19 19" version="1.1" id="svg3" xmlns="http://www.w3.org/2000/svg"><path fill="currentColor" id="path2" d="m 9.46,0.502 c -4.93,0 -8.928,3.997 -8.928,8.929 0,3.944 2.558,7.291 6.106,8.472 0.447,0.081 0.609,-0.194 0.609,-0.431 C 7.247,17.26 7.24,16.699 7.235,15.954 4.752,16.493 4.228,14.757 4.228,14.757 3.822,13.725 3.236,13.451 3.236,13.451 c -0.81,-0.554 0.062,-0.543 0.062,-0.543 0.896,0.063 1.367,0.92 1.367,0.92 0.797,1.365 2.09,0.971 2.599,0.742 C 7.345,13.993 7.576,13.599 7.831,13.376 5.848,13.151 3.764,12.385 3.764,8.964 3.764,7.989 4.112,7.192 4.683,6.568 4.591,6.342 4.284,5.434 4.77,4.205 c 0,0 0.75,-0.24 2.455,0.915 0.712,-0.198 1.477,-0.297 2.236,-0.3 0.758,0.003 1.522,0.102 2.235,0.3 1.704,-1.155 2.453,-0.915 2.453,-0.915 0.487,1.229 0.181,2.137 0.089,2.363 0.572,0.624 0.918,1.421 0.918,2.396 0,3.43 -2.088,4.184 -4.077,4.405 0.32,0.276 0.606,0.821 0.606,1.654 0,1.194 -0.011,2.157 -0.011,2.449 0,0.239 0.161,0.517 0.614,0.43 3.545,-1.183 6.101,-4.528 6.101,-8.471 0,-4.932 -3.998,-8.929 -8.929,-8.929 z"></path></svg></div><div class="headerTitle__RVn"><h2>chickensoft-games<!-- -->/</h2><h1>GameTools</h1></div><div class="headerLogo_j3df"><img width="auto" height="auto"></div></header><summary class="description_nH2g">A collection of tools for accelerating Godot + C# game development, including loading, feature tags, and high-DPI utilities.</summary><footer class="footer_DLm1"><div class="footerItem_ahyA"><svg width="21" height="24" role="img" version="1.1" viewBox="0 0 14 16"><path fill="currentColor" fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">25</span><span class="label_phh9">Stars</span></div></div><div class="footerItem_ahyA"><svg width="15" height="24" role="img" version="1.1" viewBox="0 0 10 16"><path fill="currentColor" fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">1</span><span class="label_phh9">Forks</span></div></div><div class="footerItemLanguages_BkNk"><span class="langColor_kTSd" style="background-color:#178600"></span><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">C#</span></div></div></footer></a></section><p>Interestingly enough, neither operating system makes it very easy to determine the native resolution and scale factor, resulting in <a href="https://github.com/chickensoft-games/Platform/blob/main/Chickensoft.PlatformExt/src/macOS/Displays.cs" target="_blank" rel="noopener noreferrer">quite</a> <a href="https://github.com/chickensoft-games/Platform/blob/main/Chickensoft.PlatformExt/src/windows/Monitors.cs" target="_blank" rel="noopener noreferrer">a lot</a> <a href="https://github.com/chickensoft-games/GameTools/blob/a070df52b70699c3aa68484591bd1eb3e44a24b9/Chickensoft.GameTools/src/displays/Display.cs" target="_blank" rel="noopener noreferrer">of code</a>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="setting-up-a-godot-project">Setting Up a Godot Project<a href="#setting-up-a-godot-project" class="hash-link" aria-label="Direct link to Setting Up a Godot Project" title="Direct link to Setting Up a Godot Project">‚Äã</a></h3><p>To take advantage of the new tools, we'll need to configure a few properties in our Godot project. Once you've decided on a base resolution for your game (hint: it should probably be 4K), you'll need to update the theme base scale in your Godot project settings.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/project_settings-b16e173e109b07798343a7f19f106c71.png"><img src="/assets/images/project_settings-b16e173e109b07798343a7f19f106c71.png" alt="Godot project theme settings" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center"></figcaption></figure><p>Setting the "Default Theme Scale" isn't an exact science and will depend on the font used in your theme and other art assets. The general rule of thumb is to think in multiples of Full HD (<code>1920x1080</code>). Working from FHD results in a value of <code>baseResolution.Y / 1080</code>, where <code>baseResolution</code> is the highest maximum resolution your assets can support without being upscaled (i.e., that design resolution we discussed above).</p><p>If your base resolution is <code>3840x2160</code>, the default theme scale should be <code>2160 / 1080</code>, or just <code>2</code>.</p><div class="theme-admonition theme-admonition-caution alert alert--warning admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</div><div class="admonitionContent_S0QG"><p>The theme scale must be set in the project settings. Changing it at runtime currently does not work and is a <a href="https://github.com/godotengine/godot/issues/83547" target="_blank" rel="noopener noreferrer">known issue</a>.</p></div></div><p>Godot generates the theme at this scale when your program is executed.</p><p>To ensure crisp font rendering, be sure to check the options for "Default Font Multichannel Signed Distance Field" and "Default Font Generate Mipmaps" located near the "Default Theme Scale" setting.</p><p>You'll also want to set the viewport size and window width and height overrides. Once again, set the window size based on how large you would want it to show up if it was on a full HD <code>1920x1080</code> FHD monitor. The Chickensoft scaling tools will take this into account and resize your game so that it appears proportionally sized on other monitors with different resolutions.</p><p>For everything to work, you also need to leave "Allow hiDPI" checked in the project settings (<code>display/window/dpi/allow_hidpi</code>). It's checked by default.</p><p>Godot has a setting for which screen the game should start on. I like to set it to the screen with mouse focus, as it makes it easy to test on multiple monitors.</p><p>When you're done, your <code>project.godot</code> file should have these settings set with whatever values you chose.</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token punctuation" style="color:#6c6783">[</span><span class="token plain">display</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">window/size/viewport_width=</span><span class="token number" style="color:#e09142">720</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">window/size/viewport_height=</span><span class="token number" style="color:#e09142">720</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">window/size/initial_position_type=</span><span class="token number" style="color:#e09142">3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">window/size/window_width_override=</span><span class="token number" style="color:#e09142">1280</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">window/size/window_height_override=</span><span class="token number" style="color:#e09142">720</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">[</span><span class="token plain">gui</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">theme/default_theme_scale=</span><span class="token number" style="color:#e09142">2.0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">theme/default_font_multichannel_signed_distance_field=</span><span class="token boolean" style="color:#ffcc99">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">theme/default_font_generate_mipmaps=</span><span class="token boolean" style="color:#ffcc99">true</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If all this sounds like too much trouble, you can just spin up a new project with the Chickensoft GodotGame template. It's already got all this configured for you out-of-the-box!</p><section style="margin-bottom:var(--ifm-leading)"><a href="https://github.com/chickensoft-games/GodotGame" class="ghCard_SADR"><header class="header_EL4w"><div class="ghLogo_Dvj7"><svg width="24" height="24" viewBox="0 0 19 19" version="1.1" id="svg3" xmlns="http://www.w3.org/2000/svg"><path fill="currentColor" id="path2" d="m 9.46,0.502 c -4.93,0 -8.928,3.997 -8.928,8.929 0,3.944 2.558,7.291 6.106,8.472 0.447,0.081 0.609,-0.194 0.609,-0.431 C 7.247,17.26 7.24,16.699 7.235,15.954 4.752,16.493 4.228,14.757 4.228,14.757 3.822,13.725 3.236,13.451 3.236,13.451 c -0.81,-0.554 0.062,-0.543 0.062,-0.543 0.896,0.063 1.367,0.92 1.367,0.92 0.797,1.365 2.09,0.971 2.599,0.742 C 7.345,13.993 7.576,13.599 7.831,13.376 5.848,13.151 3.764,12.385 3.764,8.964 3.764,7.989 4.112,7.192 4.683,6.568 4.591,6.342 4.284,5.434 4.77,4.205 c 0,0 0.75,-0.24 2.455,0.915 0.712,-0.198 1.477,-0.297 2.236,-0.3 0.758,0.003 1.522,0.102 2.235,0.3 1.704,-1.155 2.453,-0.915 2.453,-0.915 0.487,1.229 0.181,2.137 0.089,2.363 0.572,0.624 0.918,1.421 0.918,2.396 0,3.43 -2.088,4.184 -4.077,4.405 0.32,0.276 0.606,0.821 0.606,1.654 0,1.194 -0.011,2.157 -0.011,2.449 0,0.239 0.161,0.517 0.614,0.43 3.545,-1.183 6.101,-4.528 6.101,-8.471 0,-4.932 -3.998,-8.929 -8.929,-8.929 z"></path></svg></div><div class="headerTitle__RVn"><h2>chickensoft-games<!-- -->/</h2><h1>GodotGame</h1></div><div class="headerLogo_j3df"><img width="auto" height="auto"></div></header><summary class="description_nH2g">C# game template for Godot 4 with debug launch configurations, testing (locally and on CI/CD), code coverage, dependency update checks, and spell check working out-of-the-box!</summary><footer class="footer_DLm1"><div class="footerItem_ahyA"><svg width="21" height="24" role="img" version="1.1" viewBox="0 0 14 16"><path fill="currentColor" fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">265</span><span class="label_phh9">Stars</span></div></div><div class="footerItem_ahyA"><svg width="15" height="24" role="img" version="1.1" viewBox="0 0 10 16"><path fill="currentColor" fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">19</span><span class="label_phh9">Forks</span></div></div><div class="footerItemLanguages_BkNk"><span class="langColor_kTSd" style="background-color:#178600"></span><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">C#</span></div></div></footer></a></section><h3 class="anchor anchorWithStickyNavbar_LWe7" id="high-level-scaling-behaviors">High-Level Scaling Behaviors<a href="#high-level-scaling-behaviors" class="hash-link" aria-label="Direct link to High-Level Scaling Behaviors" title="Direct link to High-Level Scaling Behaviors">‚Äã</a></h3><p>Now that your project is set up, you can use Chickensoft's high-level scaling behaviors API from <a href="https://github.com/chickensoft-games/GameTools" target="_blank" rel="noopener noreferrer">GameTools</a>. It's just a single line of code that allows you to determine how your app or game should be presented and scaled.</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">override</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">void</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">_Ready</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token function" style="color:#9a86fd">GetWindow</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">LookGood</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    WindowScaleBehavior</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">UIFixed</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token comment" style="color:#6c6783">// or UIProportional</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    Display</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">UHD4k </span><span class="token comment" style="color:#6c6783">// your theme design resolution (such as 4K)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_S0QG"><p>A <strong><a href="https://github.com/chickensoft-games/GameTools/tree/main/Chickensoft.GameTools.Demo" target="_blank" rel="noopener noreferrer">demo Godot project is included with GameTools</a></strong> that allows you to preview and experiment with the different high-level scaling behaviors.</p></div></div><p>Better yet, when you're ready to enter full-screen, just call it again:</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token function" style="color:#9a86fd">GetWindow</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">LookGood</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    WindowScaleBehavior</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">UIFixed</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    Display</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">UHD4k</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token named-parameter punctuation" style="color:#6c6783">isFullscreen</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ffcc99">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="fixed-ui-scaling">Fixed UI Scaling<a href="#fixed-ui-scaling" class="hash-link" aria-label="Direct link to Fixed UI Scaling" title="Direct link to Fixed UI Scaling">‚Äã</a></h4><p>The Fixed UI scaling leaves your UI scale alone. Whether or not you scale the game behind it is up to you (you'll need to setup a <a href="https://docs.godotengine.org/en/stable/classes/class_subviewport.html" target="_blank" rel="noopener noreferrer">SubViewport</a> if you want to scale the game independently of the UI).</p><p>UI is rendered at the proper physical pixel resolution in the framebuffer by using Godot's <code>Disabled</code> content scaling mode. This ensures crisp, clean UI at all sizes. (Except on Windows if <em>and only if</em> the primary monitor has a lower scale factor than the monitor you're on ‚Äî but there's nothing we can do about that.)</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="https://github.com/chickensoft-games/GameTools/blob/main/docs/fixed_ui.gif?raw=true"><img src="https://github.com/chickensoft-games/GameTools/blob/main/docs/fixed_ui.gif?raw=true" alt="fixed ui scaling animation" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">Fixed UI scaling ‚Äî&nbsp;note how the game contents shrink and grow with the window, while the UI remains the same size.</figcaption></figure><p>Fixed UI scaling determines the size the UI should be at full screen and then just leaves it that size. You can configure the minimum window size as a ratio of the screen to keep your window from getting too small.</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token comment" style="color:#6c6783">// Don't allow the window to be less than 50% of either screen dimension,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token comment" style="color:#6c6783">// and try to make sure the resulting size uses the aspect ratio of the</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token comment" style="color:#6c6783">// window size set in the project settings.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token function" style="color:#9a86fd">GetWindow</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">LookGood</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  WindowScaleBehavior</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">UIFixed</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  BaseResolution</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token named-parameter punctuation" style="color:#6c6783">isFullscreen</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> _isFullscreen</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token named-parameter punctuation" style="color:#6c6783">minWindowedSize</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token number" style="color:#e09142">0.5f</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token named-parameter punctuation" style="color:#6c6783">useProjectAspectRatio</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ffcc99">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Note that you can always take the resulting content scale factor applied by <code>LookGood</code> and multiply it by your own UI scaling factor to offer custom scaling which is only applied <em>after</em> correcting for the display the window is on. Pretty nifty! This can allow you to offer a custom scale factor slider in your game so that users can further tune the UI size.</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token class-name keyword" style="color:#ffcc99">var</span><span class="token plain"> myScaleFactor </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token number" style="color:#e09142">1.25f</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token function" style="color:#9a86fd">GetWindow</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">ContentScaleFactor </span><span class="token operator" style="color:#e09142">*=</span><span class="token plain"> myScaleFactor</span><span class="token punctuation" style="color:#6c6783">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="proportional-ui-scaling">Proportional UI Scaling<a href="#proportional-ui-scaling" class="hash-link" aria-label="Direct link to Proportional UI Scaling" title="Direct link to Proportional UI Scaling">‚Äã</a></h4><p>The Proportional UI scaling behavior mode scales your UI in proportion to the window.</p><p>Proportional UI scaling first determines the size the UI should be at full screen by calculating the scale of the display that the window is on and scaling correctly based on your design resolution and the native resolution of the screen. It does this using a bunch of math that resembles what you do when you're first learning fractions.</p><p>UI is rendered either with Godot's <code>Disabled</code> or <code>CanvasItems</code> scaling mode, depending on whether or not you're in full screen. This preserves UI crispness at all sizes, too.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="https://github.com/chickensoft-games/GameTools/blob/main/docs/proportional_ui.gif?raw=true"><img src="https://github.com/chickensoft-games/GameTools/blob/main/docs/proportional_ui.gif?raw=true" alt="proportional ui scaling animation" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">Proportional UI scaling ‚Äî&nbsp;note how the UI shrinks and grows with the window and retains the same size relative to the game's contents.</figcaption></figure><h2 class="anchor anchorWithStickyNavbar_LWe7" id="sizing-things-up">Sizing Things Up<a href="#sizing-things-up" class="hash-link" aria-label="Direct link to Sizing Things Up" title="Direct link to Sizing Things Up">‚Äã</a></h2><p>There's probably a whole lot more that can be said about display scaling, but this will have to do for now. It's already taken up months of free time.</p><p>Display scaling is something you tend to think about twice: once at the start of your project, and once at the end when it's time to polish and ship.</p><p>Now that this is pretty well buttoned up, we plan on filing a proposal for Godot regarding access to the actual native resolution and scale factor to eliminate the need for packages like <a href="https://github.com/chickensoft-games/Platform" target="_blank" rel="noopener noreferrer">Platform</a>. We hope that the native code in Platform can even serve as a helpful example for how it might be done. It will likely take some time to get all that done in the engine itself, though, since Godot has other display scaling issues that may need to be addressed first or as part of that effort. In the meantime, this gets you shipping your project <em>today</em>.</p><p>We believe that providing opinionated solutions to difficult, complex technical issues like display scaling can really help AA game studios and indies get their games polished and ready to go in a lot less time. And we do that because we want to live in a world where those games are made in Godot.</p><div class="theme-admonition theme-admonition-important alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p>üá∫üá¶üáµüá∏üè≥Ô∏è‚Äçüåà Speaking of living in a better world: if you like what Chickensoft is doing, we ask that you instead support a cause that will improve the world. <strong>In a world where everyone looks and sounds the same, there would be no Chickensoft tools or helpful guides like this.</strong></p><p>As a US citizen, it's becoming increasingly clear that the world is on its own.</p><p>When governments fail to act in the interest of people, people must act in the interest of others. <em>Anyone</em> can do <em>something</em> ‚Äî <em>everyone</em> can do <em>anything</em>.</p><p>In the absence of effective government, it is up to us to effect change amongst our friends and the world at large. If you're reading this, you likely have access to more resources than most people.</p><p>Please help support Ukraine as it defends against russian aggression and atrocities, support survivors and victims of the ongoing genocide in Gaza, and donate to communities which protect the rights of others.</p><ul><li><p><strong><a href="https://u24.gov.ua/" target="_blank" rel="noopener noreferrer">United 24</a></strong> ‚Äî&nbsp;The official, government-sanctioned fundraising platform for the defense and reconstruction of Ukraine. You can choose to donate towards defense, mine removal, medical aid, reconstruction, or education and science.</p></li><li><p><strong><a href="https://www.healpalestine.org/" target="_blank" rel="noopener noreferrer">HEAL Palestine</a></strong> ‚Äî Urgent humanitarian relief for Gaza.</p></li><li><p><strong><a href="https://www.doctorswithoutborders.org/" target="_blank" rel="noopener noreferrer">Doctors Without Borders</a></strong> ‚Äî they recently reached northern Gaza, <em><a href="https://www.doctorswithoutborders.org/latest/north-gaza-health-system-has-been-reduced-ashes" target="_blank" rel="noopener noreferrer">only to find that there's nothing left</a></em>. The situation is extremely dire and demands the world's attention. People are starving. When you donate, your funds are distributed to the most urgent places in the world where it can do the most good.</p></li></ul><p>Chickensoft has made a $200 USD donation to Doctors Without Borders. <strong>We would highly encourage any studios or successful indie developers who appreciate Chickensoft to match or exceed that donation to one of these organizations</strong>. When you donate, post in our <a href="https://discord.gg/MjA6HUzzAE" target="_blank" rel="noopener noreferrer">Discord</a> and let us know ‚Äî we'll give you a supporter role!</p></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Serialization for C# Games]]></title>
            <link>https://chickensoft.games/blog/serialization-for-csharp-games</link>
            <guid>https://chickensoft.games/blog/serialization-for-csharp-games</guid>
            <pubDate>Tue, 11 Jun 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Build complex state preservation systems for implementing game save systems or custom netcode with Chickensoft's new serialization tools.
]]></description>
            <content:encoded><![CDATA[<figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/header-ab109445239ec9bf6f92e83e301a61b9.jpg"><img src="/assets/images/header-ab109445239ec9bf6f92e83e301a61b9.jpg" alt="Article header image. Balloons with icons inside representing the new packages and updates." style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center"></figcaption></figure><p>Serialization is incredibly important to games, and often painfully difficult to implement well. Unless you just like building serializers, you may find yourself putting off developing a save/load system, especially if you need more than just a simple "what level am I on?" mechanism.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-the-serialization-trap">ü™§ The Serialization Trap<a href="#-the-serialization-trap" class="hash-link" aria-label="Direct link to ü™§ The Serialization Trap" title="Direct link to ü™§ The Serialization Trap">‚Äã</a></h2><p>Like compilers, game engines, video games, and operating systems, serialization is a bit of a siren's call for programming enthusiasts. It seems easy at first:&nbsp;just write some data to a file ‚Äî done!</p><p>But...what do you do with the data once you read it back from the file? What if the save file is outdated and your models have changed? How do you reconstruct a hierarchical state machine? What about translating saved data into polymorphic models that describe your game? And if you manage to solve that, how do you pass them through the scene tree to rehydrate your game's save state?</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="Ô∏è-serialization-for-everyone">üßë‚Äç‚öïÔ∏è Serialization for Everyone<a href="#Ô∏è-serialization-for-everyone" class="hash-link" aria-label="Direct link to üßë‚Äç‚öïÔ∏è Serialization for Everyone" title="Direct link to üßë‚Äç‚öïÔ∏è Serialization for Everyone">‚Äã</a></h2><p>For the last 6 months, I've been exploring answers to the questions above. I am releasing 3 major updates to existing packages, as well as 4 completely new packages that I'm really excited to share with you.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/summer_2024-8ce9bdfb83142897515cc43bbcfec074.jpg"><img src="/assets/images/summer_2024-8ce9bdfb83142897515cc43bbcfec074.jpg" alt="Balloons with package icons and the text 'Summer 2024 Update: Serialization for C# Games" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center"></figcaption></figure><p>There's a better way to make games now ‚Äî&nbsp;with a fully open source stack. If this sounds interesting to you, strap in ‚Äî&nbsp;it's going to be a long ride.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-what-makes-a-good-save-system">üíæ What Makes a Good Save System?<a href="#-what-makes-a-good-save-system" class="hash-link" aria-label="Direct link to üíæ What Makes a Good Save System?" title="Direct link to üíæ What Makes a Good Save System?">‚Äã</a></h2><p>A good save system, in my opinion, should meet the following criteria:</p><ul><li><p>üîÆ Works when compiled ahead-of-time. A general purpose serialization toolchain needs to work on the lowest common denominator of platforms ‚Äî iOS.</p><p>AOT is a steep requirement for serialization, as it essentially condemns you to generating metadata about types at build time.</p></li><li><p>üîò Opt-in by default. Sometimes you want to extend a non-serializable class that you don't control and make it serializable.</p></li><li><p>‚§µÔ∏è Polymorphic deserialization. It needs to be easy to deserialize explicit implementations of an abstract type.</p></li><li><p>üîÑ Collections. Even if you don't intend to support generic types, properly implementing collections is non-trivial.</p></li><li><p>üì¶ Versioning. Models change as a game evolves, and you don't want to break existing save files.</p></li><li><p>ü™ù Serialization Hooks ‚Äî for types with custom serialization logic or types outside the assembly whose metadata can't be generated.</p></li></ul><p>Now that we know what a good serialization system looks like, let's talk about how its done.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="Ô∏è-why-make-a-serializer-">üôã‚Äç‚ôÄÔ∏è Why Make a Serializer? <sup id="fnref-1-82b6b8"><a href="#fn-1-82b6b8" class="footnote-ref">1</a></sup><a href="#Ô∏è-why-make-a-serializer-" class="hash-link" aria-label="Direct link to Ô∏è-why-make-a-serializer-" title="Direct link to Ô∏è-why-make-a-serializer-">‚Äã</a></h2><p>The .NET ecosystem has slowly begun to embrace an AOT-friendly world, and System.Text.Json can now generate metadata about types at build time.</p><p>The new serialization system we've introduced is built on top of System.Text.Json. Because of this shared foundation, it can interop seamlessly with existing generated JSON contexts and converters.</p><p>Why build a new serializer on top of System.Text.Json if it can already do AOT serialization just fine? Unfortunately, System.Text.Json has a few pain points:</p><ul><li><p>Doesn't help with versioning.</p></li><li><p>Derived types are painful ‚Äî&nbsp;you have to manually register them on the base type.</p><p>Essentially, you have to keep a registry of all derived types in a place unrelated to the type itself. Manually tracking types is incredibly error-prone and hostile to refactoring type hierarchies ‚Äî a common activity if you're using hierarchial state machines.</p></li><li><p>Doesn't support serialization hooks. You have to make a custom converter for every type that needs custom serialization logic.</p></li></ul><p>Since we are designing for a specific use case ‚Äî saving and loading game files ‚Äî we can make a solution that's tailored to exactly that. Plus, we can still leverage the amazing foundation that System.Text.Json provides.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-generating-metadata-at-build-time">üîÆ Generating Metadata at Build Time<a href="#-generating-metadata-at-build-time" class="hash-link" aria-label="Direct link to üîÆ Generating Metadata at Build Time" title="Direct link to üîÆ Generating Metadata at Build Time">‚Äã</a></h3><p>If we're going to make an AOT-friendly serialization system, we're going to need metadata about types. We've already established that the metadata generated by System.Text.Json requires us to write rather unfriendly code that is going to be a pain to refactor, so we can't rely on the System.Text.Json source generator.</p><p>We're going to have to make our own.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-introducing-the-introspection-generator">üîÆ Introducing the Introspection Generator<a href="#-introducing-the-introspection-generator" class="hash-link" aria-label="Direct link to üîÆ Introducing the Introspection Generator" title="Direct link to üîÆ Introducing the Introspection Generator">‚Äã</a></h2><p>The new <a href="https://github.com/chickensoft-games/Introspection" target="_blank" rel="noopener noreferrer">Introspection</a> generator is now the backbone of all the major Chickensoft libraries that need metaprogramming capabilities. It automatically generates a registry of every type that is visible from the global scope, including nested types.</p><section style="margin-bottom:var(--ifm-leading)"><a href="https://github.com/chickensoft-games/Introspection" class="ghCard_SADR"><header class="header_EL4w"><div class="ghLogo_Dvj7"><svg width="24" height="24" viewBox="0 0 19 19" version="1.1" id="svg3" xmlns="http://www.w3.org/2000/svg"><path fill="currentColor" id="path2" d="m 9.46,0.502 c -4.93,0 -8.928,3.997 -8.928,8.929 0,3.944 2.558,7.291 6.106,8.472 0.447,0.081 0.609,-0.194 0.609,-0.431 C 7.247,17.26 7.24,16.699 7.235,15.954 4.752,16.493 4.228,14.757 4.228,14.757 3.822,13.725 3.236,13.451 3.236,13.451 c -0.81,-0.554 0.062,-0.543 0.062,-0.543 0.896,0.063 1.367,0.92 1.367,0.92 0.797,1.365 2.09,0.971 2.599,0.742 C 7.345,13.993 7.576,13.599 7.831,13.376 5.848,13.151 3.764,12.385 3.764,8.964 3.764,7.989 4.112,7.192 4.683,6.568 4.591,6.342 4.284,5.434 4.77,4.205 c 0,0 0.75,-0.24 2.455,0.915 0.712,-0.198 1.477,-0.297 2.236,-0.3 0.758,0.003 1.522,0.102 2.235,0.3 1.704,-1.155 2.453,-0.915 2.453,-0.915 0.487,1.229 0.181,2.137 0.089,2.363 0.572,0.624 0.918,1.421 0.918,2.396 0,3.43 -2.088,4.184 -4.077,4.405 0.32,0.276 0.606,0.821 0.606,1.654 0,1.194 -0.011,2.157 -0.011,2.449 0,0.239 0.161,0.517 0.614,0.43 3.545,-1.183 6.101,-4.528 6.101,-8.471 0,-4.932 -3.998,-8.929 -8.929,-8.929 z"></path></svg></div><div class="headerTitle__RVn"><h2>chickensoft-games<!-- -->/</h2><h1>Introspection</h1></div><div class="headerLogo_j3df"><img src="/img/chickensoft/introspection.png" width="auto" height="auto"></div></header><summary class="description_nH2g">Create mixins and generate metadata about types at build time to enable reflection in ahead-of-time (AOT) environments.</summary><footer class="footer_DLm1"><div class="footerItem_ahyA"><svg width="21" height="24" role="img" version="1.1" viewBox="0 0 14 16"><path fill="currentColor" fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">35</span><span class="label_phh9">Stars</span></div></div><div class="footerItem_ahyA"><svg width="15" height="24" role="img" version="1.1" viewBox="0 0 10 16"><path fill="currentColor" fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">2</span><span class="label_phh9">Forks</span></div></div><div class="footerItemLanguages_BkNk"><span class="langColor_kTSd" style="background-color:#178600"></span><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">C#</span></div></div></footer></a></section><details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary><code>TypeRegistry.g.cs</code> Example</summary><div><div class="collapsibleContent_i85q"><p>An abbreviated version of the entries in a generated type registry. Not particularly interesting unless you just like writing serializers.</p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p>The generic form of <code>Activator.CreateInstance&lt;T&gt;</code> works well (and is performant) in both AOT and JIT scenarios. I verified this by emailing Michal Strehovsk√Ω, the .NET compiler engineer <a href="https://x.com/MStrehovsky/status/1231673490551582721" target="_blank" rel="noopener noreferrer">who overhauled it</a>.</p></div></div><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token punctuation" style="color:#6c6783">[</span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name">PartialModel</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">IdentifiableTypeMetadata</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token string" style="color:#ffcc99">"PartialModel"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">r</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> r</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Receive</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">PartialModel</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> System</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Activator</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">CreateInstance</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">PartialModel</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">PartialModel</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">MetatypeMetadata</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"multiple_partial_definitions"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token number" style="color:#e09142">1</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">[</span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name">PropertyModel</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">AbstractIntrospectiveTypeMetadata</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token string" style="color:#ffcc99">"PropertyModel"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">r</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> r</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Receive</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">PropertyModel</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">PropertyModel</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">MetatypeMetadata</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">[</span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name">SomeType</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">IntrospectiveTypeMetadata</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token string" style="color:#ffcc99">"SomeType"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">r</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> r</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Receive</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">SomeType</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> System</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Activator</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">CreateInstance</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">SomeType</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">SomeType</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">MetatypeMetadata</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token number" style="color:#e09142">1</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">[</span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name">StaticPropertyIsSkipped</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">IntrospectiveTypeMetadata</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token string" style="color:#ffcc99">"StaticPropertyIsSkipped"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">r</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> r</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Receive</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">StaticPropertyIsSkipped</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> System</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Activator</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">CreateInstance</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">StaticPropertyIsSkipped</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">StaticPropertyIsSkipped</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">MetatypeMetadata</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token number" style="color:#e09142">1</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">[</span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name">TraditionalNamespace</span><span class="token type-expression class-name punctuation" style="color:#6c6783">.</span><span class="token type-expression class-name">A</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">ConcreteTypeMetadata</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token string" style="color:#ffcc99">"A"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">r</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> r</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Receive</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">TraditionalNamespace</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">A</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> System</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Activator</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">CreateInstance</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">TraditionalNamespace</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">A</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">[</span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name">TraditionalNamespace</span><span class="token type-expression class-name punctuation" style="color:#6c6783">.</span><span class="token type-expression class-name">A</span><span class="token type-expression class-name punctuation" style="color:#6c6783">.</span><span class="token type-expression class-name">AA</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">ConcreteTypeMetadata</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token string" style="color:#ffcc99">"AA"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">r</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> r</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Receive</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">TraditionalNamespace</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">A</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">AA</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> System</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Activator</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">CreateInstance</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">TraditionalNamespace</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">A</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">AA</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></details><p>Better yet, the new Introspection generator is designed for performance: it generates all of its data without using any analyzer symbol data ‚Äî&nbsp;just the syntax tree ‚Äî making it pretty dang fast. It also deprecates our previous generator, <a href="https://github.com/chickensoft-games/SuperNodes" target="_blank" rel="noopener noreferrer">SuperNodes</a>, that was not as capable or performant.</p><p>You can read all about it on the <a href="https://github.com/chickensoft-games/Introspection" target="_blank" rel="noopener noreferrer">Introspection</a> repository. The general idea is that it allows you to tag types that are introspective with the <code>[Meta]</code> attribute. Introspective types have additional metadata generated about them, including their attribute information, their properties, and the attributes on their properties, among other things.</p><details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary><code>IntrospectiveType.g.cs</code> Example</summary><div><div class="collapsibleContent_i85q"><p>An abbreviated version of the generated metadata for an introspective type.</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">ExcludeFromCodeCoverage</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name">MixinBlackboard</span><span class="token plain"> MixinState </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">get</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">ExcludeFromCodeCoverage</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name">IMetatype</span><span class="token plain"> Metatype </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">IIntrospectiveTypeMetadata</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain">Types</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Graph</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">GetMetadata</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name">IntrospectiveType</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Metatype</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">class</span><span class="token plain"> </span><span class="token class-name">MetatypeMetadata</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token type-list class-name">IMetatype</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">ExcludeFromCodeCoverage</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name">System</span><span class="token return-type class-name punctuation" style="color:#6c6783">.</span><span class="token return-type class-name">Type</span><span class="token plain"> Type </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name">IntrospectiveType</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">ExcludeFromCodeCoverage</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">bool</span><span class="token plain"> HasInitProperties </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">get</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ffcc99">true</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">ExcludeFromCodeCoverage</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name">IReadOnlyList</span><span class="token return-type class-name punctuation" style="color:#6c6783">&lt;</span><span class="token return-type class-name">PropertyMetadata</span><span class="token return-type class-name punctuation" style="color:#6c6783">&gt;</span><span class="token plain"> Properties </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">get</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">List</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&lt;</span><span class="token constructor-invocation class-name">PropertyMetadata</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">PropertyMetadata</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">Name</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"Address"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">IsInit</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ffcc99">false</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">IsRequired</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ffcc99">false</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">Getter</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token class-name keyword" style="color:#ffcc99">object</span><span class="token plain"> obj</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">IntrospectiveType</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain">obj</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Address</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">Setter</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token class-name keyword" style="color:#ffcc99">object</span><span class="token plain"> obj</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#ffcc99">object</span><span class="token class-name punctuation" style="color:#6c6783">?</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">value</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">IntrospectiveType</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain">obj</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Address </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token keyword" style="color:#ffcc99">string</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token keyword" style="color:#ffcc99">value</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">GenericType</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">GenericType</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token named-parameter punctuation" style="color:#6c6783">OpenType</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name keyword" style="color:#ffcc99">string</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token named-parameter punctuation" style="color:#6c6783">ClosedType</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name keyword" style="color:#ffcc99">string</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token named-parameter punctuation" style="color:#6c6783">Arguments</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> System</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Array</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Empty</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">GenericType</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token named-parameter punctuation" style="color:#6c6783">GenericTypeGetter</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> receiver </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> receiver</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Receive</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name keyword" style="color:#ffcc99">string</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token named-parameter punctuation" style="color:#6c6783">GenericTypeGetter2</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">default</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">Attributes</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">Dictionary</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&lt;</span><span class="token constructor-invocation class-name">System</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">Type</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">,</span><span class="token constructor-invocation class-name"> System</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">Attribute</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">[</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">]</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name">TagAttribute</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">System</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">Attribute</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">[</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">            </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">TagAttribute</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token string" style="color:#ffcc99">"address"</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">PropertyMetadata</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">Name</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"Age"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">IsInit</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ffcc99">true</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">IsRequired</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ffcc99">true</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">Getter</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token class-name keyword" style="color:#ffcc99">object</span><span class="token plain"> obj</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">IntrospectiveType</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain">obj</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Age</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">Setter</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">null</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">GenericType</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">GenericType</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token named-parameter punctuation" style="color:#6c6783">OpenType</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name keyword" style="color:#ffcc99">int</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token named-parameter punctuation" style="color:#6c6783">ClosedType</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name keyword" style="color:#ffcc99">int</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token named-parameter punctuation" style="color:#6c6783">Arguments</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> System</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Array</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Empty</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">GenericType</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token named-parameter punctuation" style="color:#6c6783">GenericTypeGetter</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> receiver </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> receiver</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Receive</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name keyword" style="color:#ffcc99">int</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token named-parameter punctuation" style="color:#6c6783">GenericTypeGetter2</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">default</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">Attributes</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">Dictionary</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&lt;</span><span class="token constructor-invocation class-name">System</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">Type</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">,</span><span class="token constructor-invocation class-name"> System</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">Attribute</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">[</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">]</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name">TagAttribute</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">System</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">Attribute</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">[</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">            </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">TagAttribute</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token string" style="color:#ffcc99">"age"</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">PropertyMetadata</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">Name</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"Description"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">IsInit</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ffcc99">true</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">IsRequired</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ffcc99">false</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">Getter</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token class-name keyword" style="color:#ffcc99">object</span><span class="token plain"> obj</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">IntrospectiveType</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain">obj</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Description</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">Setter</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">null</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">GenericType</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">GenericType</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token named-parameter punctuation" style="color:#6c6783">OpenType</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name keyword" style="color:#ffcc99">string</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token named-parameter punctuation" style="color:#6c6783">ClosedType</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name keyword" style="color:#ffcc99">string</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token named-parameter punctuation" style="color:#6c6783">Arguments</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> System</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Array</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Empty</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">GenericType</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token named-parameter punctuation" style="color:#6c6783">GenericTypeGetter</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> receiver </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> receiver</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Receive</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name keyword" style="color:#ffcc99">string</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token named-parameter punctuation" style="color:#6c6783">GenericTypeGetter2</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">default</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">Attributes</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">Dictionary</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&lt;</span><span class="token constructor-invocation class-name">System</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">Type</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">,</span><span class="token constructor-invocation class-name"> System</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">Attribute</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">[</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">]</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name">TagAttribute</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">System</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">Attribute</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">[</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">            </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">TagAttribute</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token string" style="color:#ffcc99">"description"</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">PropertyMetadata</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">Name</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"Name"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">IsInit</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ffcc99">true</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">IsRequired</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ffcc99">true</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">Getter</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token class-name keyword" style="color:#ffcc99">object</span><span class="token plain"> obj</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">IntrospectiveType</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain">obj</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Name</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">Setter</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">null</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">GenericType</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">GenericType</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token named-parameter punctuation" style="color:#6c6783">OpenType</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name keyword" style="color:#ffcc99">string</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token named-parameter punctuation" style="color:#6c6783">ClosedType</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name keyword" style="color:#ffcc99">string</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token named-parameter punctuation" style="color:#6c6783">Arguments</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> System</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Array</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Empty</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">GenericType</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token named-parameter punctuation" style="color:#6c6783">GenericTypeGetter</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> receiver </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> receiver</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Receive</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name keyword" style="color:#ffcc99">string</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token named-parameter punctuation" style="color:#6c6783">GenericTypeGetter2</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">default</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token named-parameter punctuation" style="color:#6c6783">Attributes</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">Dictionary</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&lt;</span><span class="token constructor-invocation class-name">System</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">Type</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">,</span><span class="token constructor-invocation class-name"> System</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">Attribute</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">[</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">]</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name">TagAttribute</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">System</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">Attribute</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">[</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">            </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">TagAttribute</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token string" style="color:#ffcc99">"name"</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">ExcludeFromCodeCoverage</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name">IReadOnlyDictionary</span><span class="token return-type class-name punctuation" style="color:#6c6783">&lt;</span><span class="token return-type class-name">System</span><span class="token return-type class-name punctuation" style="color:#6c6783">.</span><span class="token return-type class-name">Type</span><span class="token return-type class-name punctuation" style="color:#6c6783">,</span><span class="token return-type class-name"> System</span><span class="token return-type class-name punctuation" style="color:#6c6783">.</span><span class="token return-type class-name">Attribute</span><span class="token return-type class-name punctuation" style="color:#6c6783">[</span><span class="token return-type class-name punctuation" style="color:#6c6783">]</span><span class="token return-type class-name punctuation" style="color:#6c6783">&gt;</span><span class="token plain"> Attributes </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">get</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">Dictionary</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&lt;</span><span class="token constructor-invocation class-name">System</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">Type</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">,</span><span class="token constructor-invocation class-name"> System</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">Attribute</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">[</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">]</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name">IdAttribute</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">System</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">Attribute</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">[</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">IdAttribute</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token string" style="color:#ffcc99">"init_args_model"</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name">MetaAttribute</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">System</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">Attribute</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">[</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">MetaAttribute</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">ExcludeFromCodeCoverage</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name">IReadOnlyList</span><span class="token return-type class-name punctuation" style="color:#6c6783">&lt;</span><span class="token return-type class-name">System</span><span class="token return-type class-name punctuation" style="color:#6c6783">.</span><span class="token return-type class-name">Type</span><span class="token return-type class-name punctuation" style="color:#6c6783">&gt;</span><span class="token plain"> Mixins </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">get</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">List</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&lt;</span><span class="token constructor-invocation class-name">System</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">Type</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">ExcludeFromCodeCoverage</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name">IReadOnlyDictionary</span><span class="token return-type class-name punctuation" style="color:#6c6783">&lt;</span><span class="token return-type class-name">System</span><span class="token return-type class-name punctuation" style="color:#6c6783">.</span><span class="token return-type class-name">Type</span><span class="token return-type class-name punctuation" style="color:#6c6783">,</span><span class="token return-type class-name"> System</span><span class="token return-type class-name punctuation" style="color:#6c6783">.</span><span class="token return-type class-name">Action</span><span class="token return-type class-name punctuation" style="color:#6c6783">&lt;</span><span class="token return-type class-name keyword" style="color:#ffcc99">object</span><span class="token return-type class-name punctuation" style="color:#6c6783">&gt;</span><span class="token return-type class-name punctuation" style="color:#6c6783">&gt;</span><span class="token plain"> MixinHandlers </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">get</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">Dictionary</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&lt;</span><span class="token constructor-invocation class-name">System</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">Type</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">,</span><span class="token constructor-invocation class-name"> System</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">Action</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&lt;</span><span class="token constructor-invocation class-name keyword" style="color:#ffcc99">object</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&gt;</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">ExcludeFromCodeCoverage</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">object</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">Construct</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token class-name">IReadOnlyDictionary</span><span class="token class-name punctuation" style="color:#6c6783">&lt;</span><span class="token class-name keyword" style="color:#ffcc99">string</span><span class="token class-name punctuation" style="color:#6c6783">,</span><span class="token class-name"> </span><span class="token class-name keyword" style="color:#ffcc99">object</span><span class="token class-name punctuation" style="color:#6c6783">?</span><span class="token class-name punctuation" style="color:#6c6783">&gt;</span><span class="token class-name punctuation" style="color:#6c6783">?</span><span class="token plain"> args </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">null</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      args </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> args </span><span class="token operator" style="color:#e09142">??</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">System</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">ArgumentNullException</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token keyword" style="color:#ffcc99">nameof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">args</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"Constructing IntrospectiveType requires init args."</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token keyword" style="color:#ffcc99">return</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">IntrospectiveType</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        Address </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> args</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">ContainsKey</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token string" style="color:#ffcc99">"Address"</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">?</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token keyword" style="color:#ffcc99">string</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain">args</span><span class="token punctuation" style="color:#6c6783">[</span><span class="token string" style="color:#ffcc99">"Address"</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">default</span><span class="token operator" style="color:#e09142">!</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        Age </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> args</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">ContainsKey</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token string" style="color:#ffcc99">"Age"</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">?</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token keyword" style="color:#ffcc99">int</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain">args</span><span class="token punctuation" style="color:#6c6783">[</span><span class="token string" style="color:#ffcc99">"Age"</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">default</span><span class="token operator" style="color:#e09142">!</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        Description </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> args</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">ContainsKey</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token string" style="color:#ffcc99">"Description"</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">?</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token keyword" style="color:#ffcc99">string</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain">args</span><span class="token punctuation" style="color:#6c6783">[</span><span class="token string" style="color:#ffcc99">"Description"</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">default</span><span class="token operator" style="color:#e09142">!</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        Name </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> args</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">ContainsKey</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token string" style="color:#ffcc99">"Name"</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">?</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token keyword" style="color:#ffcc99">string</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain">args</span><span class="token punctuation" style="color:#6c6783">[</span><span class="token string" style="color:#ffcc99">"Name"</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">default</span><span class="token operator" style="color:#e09142">!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">ExcludeFromCodeCoverage</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">override</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">bool</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">Equals</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token class-name keyword" style="color:#ffcc99">object</span><span class="token plain"> obj</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token boolean" style="color:#ffcc99">true</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">ExcludeFromCodeCoverage</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">override</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">int</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">GetHashCode</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">base</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">GetHashCode</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></details><p>You don't have to fully understand the generated introspection data to appreciate it. Basically, it makes all the stuff you'd ever need to write a decently polymorphic serialization system.</p><p>‚úÖ Now any serializer we build on top of this will work when compiled ahead of time ‚Äî&nbsp;done! Not so bad, right?</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-introducing-the-serialization-system">üì¶ Introducing the Serialization System<a href="#-introducing-the-serialization-system" class="hash-link" aria-label="Direct link to üì¶ Introducing the Serialization System" title="Direct link to üì¶ Introducing the Serialization System">‚Äã</a></h2><p>The new <a href="https://github.com/chickensoft-games/Serialization" target="_blank" rel="noopener noreferrer">Serialization</a> system builds off the Introspection generator, allowing you to define serializable types with relative ease.</p><section style="margin-bottom:var(--ifm-leading)"><a href="https://github.com/chickensoft-games/Serialization" class="ghCard_SADR"><header class="header_EL4w"><div class="ghLogo_Dvj7"><svg width="24" height="24" viewBox="0 0 19 19" version="1.1" id="svg3" xmlns="http://www.w3.org/2000/svg"><path fill="currentColor" id="path2" d="m 9.46,0.502 c -4.93,0 -8.928,3.997 -8.928,8.929 0,3.944 2.558,7.291 6.106,8.472 0.447,0.081 0.609,-0.194 0.609,-0.431 C 7.247,17.26 7.24,16.699 7.235,15.954 4.752,16.493 4.228,14.757 4.228,14.757 3.822,13.725 3.236,13.451 3.236,13.451 c -0.81,-0.554 0.062,-0.543 0.062,-0.543 0.896,0.063 1.367,0.92 1.367,0.92 0.797,1.365 2.09,0.971 2.599,0.742 C 7.345,13.993 7.576,13.599 7.831,13.376 5.848,13.151 3.764,12.385 3.764,8.964 3.764,7.989 4.112,7.192 4.683,6.568 4.591,6.342 4.284,5.434 4.77,4.205 c 0,0 0.75,-0.24 2.455,0.915 0.712,-0.198 1.477,-0.297 2.236,-0.3 0.758,0.003 1.522,0.102 2.235,0.3 1.704,-1.155 2.453,-0.915 2.453,-0.915 0.487,1.229 0.181,2.137 0.089,2.363 0.572,0.624 0.918,1.421 0.918,2.396 0,3.43 -2.088,4.184 -4.077,4.405 0.32,0.276 0.606,0.821 0.606,1.654 0,1.194 -0.011,2.157 -0.011,2.449 0,0.239 0.161,0.517 0.614,0.43 3.545,-1.183 6.101,-4.528 6.101,-8.471 0,-4.932 -3.998,-8.929 -8.929,-8.929 z"></path></svg></div><div class="headerTitle__RVn"><h2>chickensoft-games<!-- -->/</h2><h1>Serialization</h1></div><div class="headerLogo_j3df"><img src="/img/chickensoft/serialization.png" width="auto" height="auto"></div></header><summary class="description_nH2g">Easy to use serializable models with AOT compilation support and System.Text.Json compatibility.</summary><footer class="footer_DLm1"><div class="footerItem_ahyA"><svg width="21" height="24" role="img" version="1.1" viewBox="0 0 14 16"><path fill="currentColor" fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">51</span><span class="label_phh9">Stars</span></div></div><div class="footerItem_ahyA"><svg width="15" height="24" role="img" version="1.1" viewBox="0 0 10 16"><path fill="currentColor" fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">4</span><span class="label_phh9">Forks</span></div></div><div class="footerItemLanguages_BkNk"><span class="langColor_kTSd" style="background-color:#178600"></span><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">C#</span></div></div></footer></a></section><p>It isn't as powerful as the System.Text.Json generators, but it's tailored for writing simple, refactor-friendly code.</p><p>Here's what a serializable game model looks like.</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token keyword" style="color:#ffcc99">using</span><span class="token plain"> </span><span class="token namespace" style="opacity:0.7">Chickensoft</span><span class="token namespace punctuation" style="opacity:0.7;color:#6c6783">.</span><span class="token namespace" style="opacity:0.7">Introspection</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token keyword" style="color:#ffcc99">using</span><span class="token plain"> </span><span class="token namespace" style="opacity:0.7">Chickensoft</span><span class="token namespace punctuation" style="opacity:0.7;color:#6c6783">.</span><span class="token namespace" style="opacity:0.7">Serialization</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token keyword" style="color:#ffcc99">using</span><span class="token plain"> </span><span class="token namespace" style="opacity:0.7">Godot</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Meta</span><span class="token attribute punctuation" style="color:#6c6783">,</span><span class="token attribute"> </span><span class="token attribute class-name">Id</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments string" style="color:#ffcc99">"player_data"</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">partial</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">record</span><span class="token plain"> </span><span class="token class-name">PlayerData</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Save</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments string" style="color:#ffcc99">"global_transform"</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> required </span><span class="token return-type class-name">Transform3D</span><span class="token plain"> GlobalTransform </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">get</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">init</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Save</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments string" style="color:#ffcc99">"state_machine"</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> required </span><span class="token return-type class-name">PlayerLogic</span><span class="token plain"> StateMachine </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">get</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">init</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Save</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments string" style="color:#ffcc99">"velocity"</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> required </span><span class="token return-type class-name">Vector3</span><span class="token plain"> Velocity </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">get</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">init</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_S0QG"><p>The <code>[Id]</code> attribute tells the Introspection generator to generate additional metadata on top of the additional introspection data specific to "identifiable" types. The Serialization system and Introspection generator were designed in tandem, so they work together seamlessly, even though the Introspection generator has no knowledge of serialization. It just generates metadata.</p></div></div><p>‚úÖ Note how the serialization system is opt-in: just add the <code>[Save]</code> attribute and specify a json key name for the properties you wish to persist!</p><p>‚úÖ It also works with collections. It provides support for the only 3 collections you should ever need when working with JSON: <code>HashSet&lt;T&gt;</code>, <code>List&lt;T&gt;</code>, <code>Dictionary&lt;TKey, TValue&gt;</code>. If you need something else, you're doing it wrong. (Or you can just use the System.Text.Json generator and make a serialization context, if you must get fancy).</p><p>‚úÖ Oh, and it works with inheritance and abstract types, too. Check the <a href="https://github.com/chickensoft-games/Serialization" target="_blank" rel="noopener noreferrer">Serialization</a> readme for more usage details.</p><p>‚úÖ Oh, and of course ‚Äî versioning! Here's what a versioned model looks like.</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Meta</span><span class="token attribute punctuation" style="color:#6c6783">,</span><span class="token attribute"> </span><span class="token attribute class-name">Id</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments string" style="color:#ffcc99">"log_entry"</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">abstract</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">partial</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">class</span><span class="token plain"> </span><span class="token class-name">LogEntry</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token type-list class-name">SystemLogEntry</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Meta</span><span class="token attribute punctuation" style="color:#6c6783">,</span><span class="token attribute"> </span><span class="token attribute class-name">Version</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments number" style="color:#e09142">1</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">partial</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">class</span><span class="token plain"> </span><span class="token class-name">LogEntry1</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token type-list class-name">LogEntry</span><span class="token type-list punctuation" style="color:#6c6783">,</span><span class="token type-list"> </span><span class="token type-list class-name">IOutdated</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Save</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments string" style="color:#ffcc99">"text"</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> required </span><span class="token return-type class-name keyword" style="color:#ffcc99">string</span><span class="token plain"> Text </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">get</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">init</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Save</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments string" style="color:#ffcc99">"type"</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> required </span><span class="token return-type class-name keyword" style="color:#ffcc99">string</span><span class="token plain"> Type </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">get</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">init</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">object</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">Upgrade</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token class-name">IReadOnlyBlackboard</span><span class="token plain"> deps</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">LogEntry2</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    Text </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> Text</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    Type </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> Type </span><span class="token keyword" style="color:#ffcc99">switch</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token string" style="color:#ffcc99">"info"</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> LogType</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Info</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token string" style="color:#ffcc99">"warning"</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> LogType</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Warning</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token string" style="color:#ffcc99">"error"</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">or</span><span class="token plain"> _ </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> LogType</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Error</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">enum</span><span class="token plain"> </span><span class="token class-name">LogType</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  Info</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  Warning</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  Error</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Meta</span><span class="token attribute punctuation" style="color:#6c6783">,</span><span class="token attribute"> </span><span class="token attribute class-name">Version</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments number" style="color:#e09142">2</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">partial</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">class</span><span class="token plain"> </span><span class="token class-name">LogEntry2</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token type-list class-name">LogEntry</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Save</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments string" style="color:#ffcc99">"text"</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> required </span><span class="token return-type class-name keyword" style="color:#ffcc99">string</span><span class="token plain"> Text </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">get</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">init</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Save</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments string" style="color:#ffcc99">"type"</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> required </span><span class="token return-type class-name">LogType</span><span class="token plain"> Type </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">get</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">init</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The serialization system can even upgrade your out of date models while they're being deserialized, ensuring you never see an out-of-date type in your game logic.</p><p>‚úÖ Finally, you can also implement custom serialization hooks on types that wish to customize how they are serialized. They have access to their JSON node, and can even return an entirely different object if they wish (as long as it is a derived type of the type being deserialized).</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Meta</span><span class="token attribute punctuation" style="color:#6c6783">,</span><span class="token attribute"> </span><span class="token attribute class-name">Id</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments string" style="color:#ffcc99">"custom_serializable"</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">partial</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">class</span><span class="token plain"> </span><span class="token class-name">CustomSerializable</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token type-list class-name">ICustomSerializable</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">int</span><span class="token plain"> Value </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">get</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">set</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">object</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">OnDeserialized</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token class-name">IdentifiableTypeMetadata</span><span class="token plain"> metadata</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token class-name">JsonObject</span><span class="token plain"> json</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token class-name">JsonSerializerOptions</span><span class="token plain"> options</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      Value </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> json</span><span class="token punctuation" style="color:#6c6783">[</span><span class="token string" style="color:#ffcc99">"value"</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token punctuation" style="color:#6c6783">?.</span><span class="token generic-method function" style="color:#9a86fd">GetValue</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name keyword" style="color:#ffcc99">int</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">??</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">-</span><span class="token number" style="color:#e09142">1</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token keyword" style="color:#ffcc99">return</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">this</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">void</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">OnSerialized</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token class-name">IdentifiableTypeMetadata</span><span class="token plain"> metadata</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token class-name">JsonObject</span><span class="token plain"> json</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token class-name">JsonSerializerOptions</span><span class="token plain"> options</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token comment" style="color:#6c6783">// Even though our property doesn't have the [Save] attribute, we</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token comment" style="color:#6c6783">// can save it manually.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      json</span><span class="token punctuation" style="color:#6c6783">[</span><span class="token string" style="color:#ffcc99">"value"</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> Value</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ü•≥ Now we've met all of our serialization requirements.</p><p>‚ú® But wait, there's more! A LOT more.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-godot-specific-serialization">ü§ñ Godot-Specific Serialization<a href="#-godot-specific-serialization" class="hash-link" aria-label="Direct link to ü§ñ Godot-Specific Serialization" title="Direct link to ü§ñ Godot-Specific Serialization">‚Äã</a></h2><p>We also need to be able to serialize Godot-specific types, like transforms, vectors, etc. Fortunately, there's a new package containing a few System.Text.Json converters that can convert Godot types to JSON and back.</p><section style="margin-bottom:var(--ifm-leading)"><a href="https://github.com/chickensoft-games/Serialization.Godot" class="ghCard_SADR"><header class="header_EL4w"><div class="ghLogo_Dvj7"><svg width="24" height="24" viewBox="0 0 19 19" version="1.1" id="svg3" xmlns="http://www.w3.org/2000/svg"><path fill="currentColor" id="path2" d="m 9.46,0.502 c -4.93,0 -8.928,3.997 -8.928,8.929 0,3.944 2.558,7.291 6.106,8.472 0.447,0.081 0.609,-0.194 0.609,-0.431 C 7.247,17.26 7.24,16.699 7.235,15.954 4.752,16.493 4.228,14.757 4.228,14.757 3.822,13.725 3.236,13.451 3.236,13.451 c -0.81,-0.554 0.062,-0.543 0.062,-0.543 0.896,0.063 1.367,0.92 1.367,0.92 0.797,1.365 2.09,0.971 2.599,0.742 C 7.345,13.993 7.576,13.599 7.831,13.376 5.848,13.151 3.764,12.385 3.764,8.964 3.764,7.989 4.112,7.192 4.683,6.568 4.591,6.342 4.284,5.434 4.77,4.205 c 0,0 0.75,-0.24 2.455,0.915 0.712,-0.198 1.477,-0.297 2.236,-0.3 0.758,0.003 1.522,0.102 2.235,0.3 1.704,-1.155 2.453,-0.915 2.453,-0.915 0.487,1.229 0.181,2.137 0.089,2.363 0.572,0.624 0.918,1.421 0.918,2.396 0,3.43 -2.088,4.184 -4.077,4.405 0.32,0.276 0.606,0.821 0.606,1.654 0,1.194 -0.011,2.157 -0.011,2.449 0,0.239 0.161,0.517 0.614,0.43 3.545,-1.183 6.101,-4.528 6.101,-8.471 0,-4.932 -3.998,-8.929 -8.929,-8.929 z"></path></svg></div><div class="headerTitle__RVn"><h2>chickensoft-games<!-- -->/</h2><h1>Serialization.Godot</h1></div><div class="headerLogo_j3df"><img src="/img/chickensoft/package.png" width="auto" height="auto"></div></header><summary class="description_nH2g">Godot-specific JSON converters for Chickensoft.Serialization.</summary><footer class="footer_DLm1"><div class="footerItem_ahyA"><svg width="21" height="24" role="img" version="1.1" viewBox="0 0 14 16"><path fill="currentColor" fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">11</span><span class="label_phh9">Stars</span></div></div><div class="footerItem_ahyA"><svg width="15" height="24" role="img" version="1.1" viewBox="0 0 10 16"><path fill="currentColor" fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">5</span><span class="label_phh9">Forks</span></div></div><div class="footerItemLanguages_BkNk"><span class="langColor_kTSd" style="background-color:#178600"></span><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">C#</span></div></div></footer></a></section><p>It only supports a handful of types right now, so please ‚Äî PLEASE ‚Äî contribute to it if you can!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-introducing-savefilebuilder">üëΩ Introducing SaveFileBuilder<a href="#-introducing-savefilebuilder" class="hash-link" aria-label="Direct link to üëΩ Introducing SaveFileBuilder" title="Direct link to üëΩ Introducing SaveFileBuilder">‚Äã</a></h2><p>Now that we can define beautiful, serializable models, how do we extract data from disparate nodes across the scene tree, and how do we return it to the relevant nodes (or create them) when we load the game?</p><section style="margin-bottom:var(--ifm-leading)"><a href="https://github.com/chickensoft-games/SaveFileBuilder" class="ghCard_SADR"><header class="header_EL4w"><div class="ghLogo_Dvj7"><svg width="24" height="24" viewBox="0 0 19 19" version="1.1" id="svg3" xmlns="http://www.w3.org/2000/svg"><path fill="currentColor" id="path2" d="m 9.46,0.502 c -4.93,0 -8.928,3.997 -8.928,8.929 0,3.944 2.558,7.291 6.106,8.472 0.447,0.081 0.609,-0.194 0.609,-0.431 C 7.247,17.26 7.24,16.699 7.235,15.954 4.752,16.493 4.228,14.757 4.228,14.757 3.822,13.725 3.236,13.451 3.236,13.451 c -0.81,-0.554 0.062,-0.543 0.062,-0.543 0.896,0.063 1.367,0.92 1.367,0.92 0.797,1.365 2.09,0.971 2.599,0.742 C 7.345,13.993 7.576,13.599 7.831,13.376 5.848,13.151 3.764,12.385 3.764,8.964 3.764,7.989 4.112,7.192 4.683,6.568 4.591,6.342 4.284,5.434 4.77,4.205 c 0,0 0.75,-0.24 2.455,0.915 0.712,-0.198 1.477,-0.297 2.236,-0.3 0.758,0.003 1.522,0.102 2.235,0.3 1.704,-1.155 2.453,-0.915 2.453,-0.915 0.487,1.229 0.181,2.137 0.089,2.363 0.572,0.624 0.918,1.421 0.918,2.396 0,3.43 -2.088,4.184 -4.077,4.405 0.32,0.276 0.606,0.821 0.606,1.654 0,1.194 -0.011,2.157 -0.011,2.449 0,0.239 0.161,0.517 0.614,0.43 3.545,-1.183 6.101,-4.528 6.101,-8.471 0,-4.932 -3.998,-8.929 -8.929,-8.929 z"></path></svg></div><div class="headerTitle__RVn"><h2>chickensoft-games<!-- -->/</h2><h1>SaveFileBuilder</h1></div><div class="headerLogo_j3df"><img src="/img/chickensoft/save_file_builder.png" width="auto" height="auto"></div></header><summary class="description_nH2g">Compose chunks of save data into a single data type by creating loosely coupled save chunks at various points in the scene tree.</summary><footer class="footer_DLm1"><div class="footerItem_ahyA"><svg width="21" height="24" role="img" version="1.1" viewBox="0 0 14 16"><path fill="currentColor" fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">11</span><span class="label_phh9">Stars</span></div></div><div class="footerItem_ahyA"><svg width="15" height="24" role="img" version="1.1" viewBox="0 0 10 16"><path fill="currentColor" fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">2</span><span class="label_phh9">Forks</span></div></div><div class="footerItemLanguages_BkNk"><span class="langColor_kTSd" style="background-color:#178600"></span><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">C#</span></div></div></footer></a></section><p>Meet SaveFileBuilder. It allows you to define a <code>SaveFile</code> as a tree of <code>SaveChunks</code>. Each <code>SaveChunk</code> may have its own children chunks. You can access each child chunk by its type to recursively construct the save file (or load it).</p><p><a href="https://github.com/chickensoft-games/AutoInject" target="_blank" rel="noopener noreferrer">AutoInject</a> should be used to find the nearest parent save chunk in the scene tree so that the child chunk can add itself to the parent.</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token plain">SaveFile </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">SaveFile</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&lt;</span><span class="token constructor-invocation class-name">GameData</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token named-parameter punctuation" style="color:#6c6783">root</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">SaveChunk</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&lt;</span><span class="token constructor-invocation class-name">GameData</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token named-parameter punctuation" style="color:#6c6783">onSave</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">chunk</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token comment" style="color:#6c6783">// Use root chunk to get child chunks that were added to us</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token comment" style="color:#6c6783">// lower in the scene tree.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token class-name keyword" style="color:#ffcc99">var</span><span class="token plain"> gameData </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">GameData</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        MapData </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> chunk</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">GetChunkSaveData</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">MapData</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        PlayerData </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> chunk</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">GetChunkSaveData</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">PlayerData</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        PlayerCameraData </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> chunk</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">GetChunkSaveData</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">PlayerCameraData</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token keyword" style="color:#ffcc99">return</span><span class="token plain"> gameData</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token named-parameter punctuation" style="color:#6c6783">onLoad</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">chunk</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token comment" style="color:#6c6783">// Break up the game data and send it to the child chunks so that</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token comment" style="color:#6c6783">// they can load the data into the nodes they belong to.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      chunk</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">LoadChunkSaveData</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">data</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">MapData</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      chunk</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">LoadChunkSaveData</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">data</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">PlayerData</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      chunk</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">LoadChunkSaveData</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">data</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">PlayerCameraData</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token named-parameter punctuation" style="color:#6c6783">onSave</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token class-name">GameData</span><span class="token plain"> data</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token comment" style="color:#6c6783">// Save the game data to disk.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token class-name keyword" style="color:#ffcc99">var</span><span class="token plain"> json </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> JsonSerializer</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Serialize</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">data</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> JsonOptions</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">await</span><span class="token plain"> FileSystem</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">File</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">WriteAllTextAsync</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">SaveFilePath</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> json</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token named-parameter punctuation" style="color:#6c6783">onLoad</span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token comment" style="color:#6c6783">// Load the game data from disk.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token operator" style="color:#e09142">!</span><span class="token plain">FileSystem</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">File</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Exists</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">SaveFilePath</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      GD</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Print</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token string" style="color:#ffcc99">"No save file to load :'("</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token keyword" style="color:#ffcc99">return</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">null</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token class-name keyword" style="color:#ffcc99">var</span><span class="token plain"> json </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">await</span><span class="token plain"> FileSystem</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">File</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">ReadAllTextAsync</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">SaveFilePath</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">return</span><span class="token plain"> JsonSerializer</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Deserialize</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">GameData</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">json</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> JsonOptions</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In the future, this can be expanded on by creating an async variety. Asynchronicity would allow you to define save chunks that can split loading and saving into multiple operations, streamlining the most complex save scenarios imaginable.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-serializing-hierarchical-state-machines">üí° Serializing Hierarchical State Machines<a href="#-serializing-hierarchical-state-machines" class="hash-link" aria-label="Direct link to üí° Serializing Hierarchical State Machines" title="Direct link to üí° Serializing Hierarchical State Machines">‚Äã</a></h2><p><a href="https://github.com/chickensoft-games/LogicBlocks" target="_blank" rel="noopener noreferrer">LogicBlocks</a>, our hierarchical state machine implementation, is now fully serializable, thanks to the version 5 update that was just released. It integrates seamlessly with the new Introspection generator and Serialization system.</p><section style="margin-bottom:var(--ifm-leading)"><a href="https://github.com/chickensoft-games/LogicBlocks" class="ghCard_SADR"><header class="header_EL4w"><div class="ghLogo_Dvj7"><svg width="24" height="24" viewBox="0 0 19 19" version="1.1" id="svg3" xmlns="http://www.w3.org/2000/svg"><path fill="currentColor" id="path2" d="m 9.46,0.502 c -4.93,0 -8.928,3.997 -8.928,8.929 0,3.944 2.558,7.291 6.106,8.472 0.447,0.081 0.609,-0.194 0.609,-0.431 C 7.247,17.26 7.24,16.699 7.235,15.954 4.752,16.493 4.228,14.757 4.228,14.757 3.822,13.725 3.236,13.451 3.236,13.451 c -0.81,-0.554 0.062,-0.543 0.062,-0.543 0.896,0.063 1.367,0.92 1.367,0.92 0.797,1.365 2.09,0.971 2.599,0.742 C 7.345,13.993 7.576,13.599 7.831,13.376 5.848,13.151 3.764,12.385 3.764,8.964 3.764,7.989 4.112,7.192 4.683,6.568 4.591,6.342 4.284,5.434 4.77,4.205 c 0,0 0.75,-0.24 2.455,0.915 0.712,-0.198 1.477,-0.297 2.236,-0.3 0.758,0.003 1.522,0.102 2.235,0.3 1.704,-1.155 2.453,-0.915 2.453,-0.915 0.487,1.229 0.181,2.137 0.089,2.363 0.572,0.624 0.918,1.421 0.918,2.396 0,3.43 -2.088,4.184 -4.077,4.405 0.32,0.276 0.606,0.821 0.606,1.654 0,1.194 -0.011,2.157 -0.011,2.449 0,0.239 0.161,0.517 0.614,0.43 3.545,-1.183 6.101,-4.528 6.101,-8.471 0,-4.932 -3.998,-8.929 -8.929,-8.929 z"></path></svg></div><div class="headerTitle__RVn"><h2>chickensoft-games<!-- -->/</h2><h1>LogicBlocks</h1></div><div class="headerLogo_j3df"><img src="/img/chickensoft/logic_blocks.png" width="auto" height="auto"></div></header><summary class="description_nH2g">Human-friendly, hierarchical and serializable state machines for games and apps in C#.</summary><footer class="footer_DLm1"><div class="footerItem_ahyA"><svg width="21" height="24" role="img" version="1.1" viewBox="0 0 14 16"><path fill="currentColor" fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">204</span><span class="label_phh9">Stars</span></div></div><div class="footerItem_ahyA"><svg width="15" height="24" role="img" version="1.1" viewBox="0 0 10 16"><path fill="currentColor" fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">8</span><span class="label_phh9">Forks</span></div></div><div class="footerItemLanguages_BkNk"><span class="langColor_kTSd" style="background-color:#178600"></span><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">C#</span></div></div></footer></a></section><p>LogicBlocks 5 will now automatically preallocate states when constructed, thanks to the generated metadata that allows it to see every possible state ahead of time.</p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p>Unrelated, but the new performance updates LogicBlocks 5 receives also eliminates runtime memory allocations, except in scenarios where the number of inputs or input types exceeds the input buffer size.</p></div></div><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Meta</span><span class="token attribute punctuation" style="color:#6c6783">,</span><span class="token attribute"> </span><span class="token attribute class-name">Id</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments string" style="color:#ffcc99">"serializable_logic"</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">LogicBlock</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments keyword" style="color:#ffcc99">typeof</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments type-expression class-name">State</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">,</span><span class="token attribute attribute-arguments"> Diagram </span><span class="token attribute attribute-arguments operator" style="color:#e09142">=</span><span class="token attribute attribute-arguments"> </span><span class="token attribute attribute-arguments boolean" style="color:#ffcc99">true</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">partial</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">class</span><span class="token plain"> </span><span class="token class-name">MyLogicBlock</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token type-list class-name">LogicBlock</span><span class="token type-list class-name punctuation" style="color:#6c6783">&lt;</span><span class="token type-list class-name">MyLogicBlock</span><span class="token type-list class-name punctuation" style="color:#6c6783">.</span><span class="token type-list class-name">State</span><span class="token type-list class-name punctuation" style="color:#6c6783">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">override</span><span class="token plain"> </span><span class="token return-type class-name">Transition</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">GetInitialState</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token generic-method function" style="color:#9a86fd">To</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">State</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">PoweredOff</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Meta</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">abstract</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">partial</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">record</span><span class="token plain"> </span><span class="token class-name">State</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token type-list class-name">StateLogic</span><span class="token type-list class-name punctuation" style="color:#6c6783">&lt;</span><span class="token type-list class-name">State</span><span class="token type-list class-name punctuation" style="color:#6c6783">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Meta</span><span class="token attribute punctuation" style="color:#6c6783">,</span><span class="token attribute"> </span><span class="token attribute class-name">Id</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments string" style="color:#ffcc99">"serializable_logic_state_off"</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">partial</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">record</span><span class="token plain"> </span><span class="token class-name">PoweredOff</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token type-list class-name">State</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Meta</span><span class="token attribute punctuation" style="color:#6c6783">,</span><span class="token attribute"> </span><span class="token attribute class-name">Id</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments string" style="color:#ffcc99">"serializable_logic_state_on"</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">partial</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">record</span><span class="token plain"> </span><span class="token class-name">PoweredOn</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token type-list class-name">State</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Meta</span><span class="token attribute punctuation" style="color:#6c6783">,</span><span class="token attribute"> </span><span class="token attribute class-name">Id</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments string" style="color:#ffcc99">"serializable_logic_versioned_state"</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">abstract</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">partial</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">record</span><span class="token plain"> </span><span class="token class-name">VersionedState</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token type-list class-name">State</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Meta</span><span class="token attribute punctuation" style="color:#6c6783">,</span><span class="token attribute"> </span><span class="token attribute class-name">Version</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments number" style="color:#e09142">1</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">partial</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">record</span><span class="token plain"> </span><span class="token class-name">Version1</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token type-list class-name">VersionedState</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Meta</span><span class="token attribute punctuation" style="color:#6c6783">,</span><span class="token attribute"> </span><span class="token attribute class-name">Version</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments number" style="color:#e09142">2</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">partial</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">record</span><span class="token plain"> </span><span class="token class-name">Version2</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token type-list class-name">VersionedState</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Oh ‚Äî&nbsp;and LogicBlocks now has an <a href="/docs/logic_blocks/">all new documentation site</a>! There's never been a better time to embrace the magic and rigor of statecharts.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-a-better-autoinject">üíâ A Better AutoInject<a href="#-a-better-autoinject" class="hash-link" aria-label="Direct link to üíâ A Better AutoInject" title="Direct link to üíâ A Better AutoInject">‚Äã</a></h2><p><a href="https://github.com/chickensoft-games/AutoInject" target="_blank" rel="noopener noreferrer">AutoInject</a> is our node-based dependency injection system. It allows you to find dependencies by searching ancestor nodes for the first node that has the dependency you're looking for. It's as simple as it sounds, at least in theory (the devil is in the implementation details).</p><section style="margin-bottom:var(--ifm-leading)"><a href="https://github.com/chickensoft-games/AutoInject" class="ghCard_SADR"><header class="header_EL4w"><div class="ghLogo_Dvj7"><svg width="24" height="24" viewBox="0 0 19 19" version="1.1" id="svg3" xmlns="http://www.w3.org/2000/svg"><path fill="currentColor" id="path2" d="m 9.46,0.502 c -4.93,0 -8.928,3.997 -8.928,8.929 0,3.944 2.558,7.291 6.106,8.472 0.447,0.081 0.609,-0.194 0.609,-0.431 C 7.247,17.26 7.24,16.699 7.235,15.954 4.752,16.493 4.228,14.757 4.228,14.757 3.822,13.725 3.236,13.451 3.236,13.451 c -0.81,-0.554 0.062,-0.543 0.062,-0.543 0.896,0.063 1.367,0.92 1.367,0.92 0.797,1.365 2.09,0.971 2.599,0.742 C 7.345,13.993 7.576,13.599 7.831,13.376 5.848,13.151 3.764,12.385 3.764,8.964 3.764,7.989 4.112,7.192 4.683,6.568 4.591,6.342 4.284,5.434 4.77,4.205 c 0,0 0.75,-0.24 2.455,0.915 0.712,-0.198 1.477,-0.297 2.236,-0.3 0.758,0.003 1.522,0.102 2.235,0.3 1.704,-1.155 2.453,-0.915 2.453,-0.915 0.487,1.229 0.181,2.137 0.089,2.363 0.572,0.624 0.918,1.421 0.918,2.396 0,3.43 -2.088,4.184 -4.077,4.405 0.32,0.276 0.606,0.821 0.606,1.654 0,1.194 -0.011,2.157 -0.011,2.449 0,0.239 0.161,0.517 0.614,0.43 3.545,-1.183 6.101,-4.528 6.101,-8.471 0,-4.932 -3.998,-8.929 -8.929,-8.929 z"></path></svg></div><div class="headerTitle__RVn"><h2>chickensoft-games<!-- -->/</h2><h1>AutoInject</h1></div><div class="headerLogo_j3df"><img src="/img/chickensoft/auto_inject.png" width="auto" height="auto"></div></header><summary class="description_nH2g">Node-based dependency injection for C# Godot scripts at build-time, including utilities for automatic node-binding, additional lifecycle hooks, and .net-inspired notification callbacks.</summary><footer class="footer_DLm1"><div class="footerItem_ahyA"><svg width="21" height="24" role="img" version="1.1" viewBox="0 0 14 16"><path fill="currentColor" fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">123</span><span class="label_phh9">Stars</span></div></div><div class="footerItem_ahyA"><svg width="15" height="24" role="img" version="1.1" viewBox="0 0 10 16"><path fill="currentColor" fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">7</span><span class="label_phh9">Forks</span></div></div><div class="footerItemLanguages_BkNk"><span class="langColor_kTSd" style="background-color:#178600"></span><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">C#</span></div></div></footer></a></section><p>Previously, AutoInject was built on top of <a href="https://github.com/chickensoft-games/SuperNodes" target="_blank" rel="noopener noreferrer">SuperNodes</a>. Now that <a href="https://github.com/chickensoft-games/SuperNodes" target="_blank" rel="noopener noreferrer">SuperNodes</a> has been deprecated and replaced with the new <a href="https://github.com/chickensoft-games/Introspection" target="_blank" rel="noopener noreferrer">Introspection</a> generator, the <a href="https://github.com/chickensoft-games/PowerUps" target="_blank" rel="noopener noreferrer">PowerUps</a> package (a set of mixins designed to work with AutoInject and SuperNodes) has also been deprecated. Fortunately, all of its functionality now lives inside AutoInject.</p><p>Like before, you can use the new <a href="https://github.com/chickensoft-games/Introspection" target="_blank" rel="noopener noreferrer">Introspection</a> generator to apply mixins. But, it's even simpler now ‚Äî <em>all</em> of the mixins available in AutoInject can be applied at once:</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token comment" style="color:#6c6783">// Apply all of the AutoInject mixins at once:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">[</span><span class="token function" style="color:#9a86fd">Meta</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token keyword" style="color:#ffcc99">typeof</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token type-expression class-name">IAutoNode</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">partial</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">class</span><span class="token plain"> </span><span class="token class-name">MyNode</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token type-list class-name">Node</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>That one little line above allows you to automatically bind nodes to properties, inject dependencies, provide dependencies, and use .NET-style notification callbacks and get additional lifecycle notifications that help with unit testing nodes, if that's your jam. Be sure to checkout the AutoInject repository for more details.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="Ô∏è-saving--loading-in-the-game-demo">üïπÔ∏è Saving &amp; Loading in the Game Demo<a href="#Ô∏è-saving--loading-in-the-game-demo" class="hash-link" aria-label="Direct link to üïπÔ∏è Saving &amp; Loading in the Game Demo" title="Direct link to üïπÔ∏è Saving &amp; Loading in the Game Demo">‚Äã</a></h2><p>Of course, no long-winded blog announcing a bunch of new packages would be complete without a demo. The Chickensoft Game Demo has been updated to version 3, and now includes full state persistence and restoration, thanks to all these new tools.</p><section style="margin-bottom:var(--ifm-leading)"><a href="https://github.com/chickensoft-games/GameDemo" class="ghCard_SADR"><header class="header_EL4w"><div class="ghLogo_Dvj7"><svg width="24" height="24" viewBox="0 0 19 19" version="1.1" id="svg3" xmlns="http://www.w3.org/2000/svg"><path fill="currentColor" id="path2" d="m 9.46,0.502 c -4.93,0 -8.928,3.997 -8.928,8.929 0,3.944 2.558,7.291 6.106,8.472 0.447,0.081 0.609,-0.194 0.609,-0.431 C 7.247,17.26 7.24,16.699 7.235,15.954 4.752,16.493 4.228,14.757 4.228,14.757 3.822,13.725 3.236,13.451 3.236,13.451 c -0.81,-0.554 0.062,-0.543 0.062,-0.543 0.896,0.063 1.367,0.92 1.367,0.92 0.797,1.365 2.09,0.971 2.599,0.742 C 7.345,13.993 7.576,13.599 7.831,13.376 5.848,13.151 3.764,12.385 3.764,8.964 3.764,7.989 4.112,7.192 4.683,6.568 4.591,6.342 4.284,5.434 4.77,4.205 c 0,0 0.75,-0.24 2.455,0.915 0.712,-0.198 1.477,-0.297 2.236,-0.3 0.758,0.003 1.522,0.102 2.235,0.3 1.704,-1.155 2.453,-0.915 2.453,-0.915 0.487,1.229 0.181,2.137 0.089,2.363 0.572,0.624 0.918,1.421 0.918,2.396 0,3.43 -2.088,4.184 -4.077,4.405 0.32,0.276 0.606,0.821 0.606,1.654 0,1.194 -0.011,2.157 -0.011,2.449 0,0.239 0.161,0.517 0.614,0.43 3.545,-1.183 6.101,-4.528 6.101,-8.471 0,-4.932 -3.998,-8.929 -8.929,-8.929 z"></path></svg></div><div class="headerTitle__RVn"><h2>chickensoft-games<!-- -->/</h2><h1>GameDemo</h1></div><div class="headerLogo_j3df"><img src="/img/chickensoft/game_demo.png" width="auto" height="auto"></div></header><summary class="description_nH2g">The Chickensoft Game Demo ‚Äî a fully tested, third-person 3D game built with Godot and C#. Now with saving and loading!</summary><footer class="footer_DLm1"><div class="footerItem_ahyA"><svg width="21" height="24" role="img" version="1.1" viewBox="0 0 14 16"><path fill="currentColor" fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">396</span><span class="label_phh9">Stars</span></div></div><div class="footerItem_ahyA"><svg width="15" height="24" role="img" version="1.1" viewBox="0 0 10 16"><path fill="currentColor" fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">30</span><span class="label_phh9">Forks</span></div></div><div class="footerItemLanguages_BkNk"><span class="langColor_kTSd" style="background-color:#178600"></span><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">C#</span></div></div></footer></a></section><p>If you're still fuzzy on the details, go check out the code and take a closer look. There's also nearly 300 unit tests that can help show you how any particularly part of the code works, too.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">‚Äã</a></h2><p>We'll close by celebrating the fact that Chickensoft has now reached a new layer of the gamedev hierarchy of needs: serialization. Now we can start solving the real problems.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/pyramid-cdd04d816a39737a17702602585d3071.jpg"><img src="/assets/images/pyramid-cdd04d816a39737a17702602585d3071.jpg" alt="Maslow's hierarchy of game development" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center"></figcaption></figure><p>If you made it this far, thanks for reading ‚Äî and happy serializing!</p><div class="inviteContainer_H3cR"><div class="discordServer_Be5H"><h3 class="discordInviteText_xFKC">You have been invited to join a server</h3><div class="discordInviteBody_jtVf"><div><img src="/img/chickensoft/chickensoft_logo.svg" class="serverImage_snrK"></div><div class="discordInviteDetails_UNwE"><h3 class="discordInviteName_OuUx">Chickensoft</h3><div class="discordInviteCounts_wTwU"><i class="discordInviteStatusIcon_ySkV discordInviteOnlineIcon_e0ks"></i><strong class="discordInviteCount_qEVM"><span id="discordNumOnline">#</span> <!-- -->Online</strong><i class="discordInviteStatusIcon_ySkV discordInviteOfflineIcon_R82S"></i><strong class="discordInviteCount_qEVM"><span id="discordNumMembers">#</span> <!-- -->Members</strong></div></div></div><div class="discordButtonContainer_oTIm"><a class="button button--primary button--lg discordInviteJoinButton_VJ9M" href="https://discord.gg/MjA6HUzzAE">Join</a></div></div></div><div class="footnotes"><hr><ol><li id="fn-1-82b6b8">It's actually too late. I've already made one.<a href="#fnref-1-82b6b8" class="footnote-backref">‚Ü©</a></li></ol></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Using Godot with C# in 2024]]></title>
            <link>https://chickensoft.games/blog/godot-csharp-2024</link>
            <guid>https://chickensoft.games/blog/godot-csharp-2024</guid>
            <pubDate>Mon, 01 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[C# support in Godot has come a long way since its inception. Now that it's 2024, let's dive in and see what it's like.
]]></description>
            <content:encoded><![CDATA[<figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/header-1fd12a440fbc9c33438695064e2f65a9.jpg"><img src="/assets/images/header-1fd12a440fbc9c33438695064e2f65a9.jpg" alt="2024 written with balloon letters against a backdrop of fireworks and confetti, with the title 'Using Godot with C# in 2024'." style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center"></figcaption></figure><p>About a year and a half ago, starting a project with Godot and C# was a brave choice. There's always been a C# channel in the main Godot Discord server, but information and tutorials (let alone demos) were all but non-existent.</p><p>Now that it's 2024, let's take a look and see how far we've come.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-a-lot-has-happened">ü•≥ A LOT has happened<a href="#-a-lot-has-happened" class="hash-link" aria-label="Direct link to ü•≥ A LOT has happened" title="Direct link to ü•≥ A LOT has happened">‚Äã</a></h2><p>Throughout 2023, a lot of things happened in the game development world. Some of these changes were big news for game developers using C#, too:</p><ul><li><a href="https://godotengine.org/article/godot-4-0-sets-sail/" target="_blank" rel="noopener noreferrer">Godot 4</a> was released!</li><li><a href="/blog/godot-delivers/">Unity did things</a> that game developers didn't like.</li><li>Godot's <a href="https://godotengine.org/article/whats-new-in-csharp-for-godot-4-0/" target="_blank" rel="noopener noreferrer">C# integration was completely overhauled</a> and ported over from Mono to the .NET SDK.</li><li><a href="https://godotengine.org/article/godot-4-2-arrives-in-style/#c--net" target="_blank" rel="noopener noreferrer">Experimental iOS and Android mobile platform support for C# Godot games</a> shipped in Godot 4.2.</li><li>The <a href="https://godotengine.org/article/introducing-new-forum/" target="_blank" rel="noopener noreferrer">Godot Forums</a> came back in style.</li><li>W4 Games, the company created by some of the Godot founders, <a href="https://w4games.com/2023/12/07/w4-games-raises-15m-to-drive-video-game-development-inflection-with-godot-engine/" target="_blank" rel="noopener noreferrer">raised another $15 million</a>.</li><li>The Godot Fund is now bringing in <a href="https://fund.godotengine.org/" target="_blank" rel="noopener noreferrer">over $60,000/month</a>!</li></ul><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_S0QG"><p>Not sure you want to use C#? Check out our blog about <a href="/blog/gdscript-vs-csharp/">GDScript vs C# in Godot 4</a>.</p></div></div><p>Besides Godot's increased financial support and broader endorsements from established organizations, the Godot C# community itself continues to thrive. We've even observed a new baseline level of user activity on the Chickensoft website, beginning right about the time that Unity was introducing an installation fee.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-a-complete-game-demo">üéÆ A Complete Game Demo<a href="#-a-complete-game-demo" class="hash-link" aria-label="Direct link to üéÆ A Complete Game Demo" title="Direct link to üéÆ A Complete Game Demo">‚Äã</a></h2><p>Late in 2023, we released an open source, fully-tested 3D platformer game demo built with Godot and C# using the awesome <a href="https://www.gdquest.com/" target="_blank" rel="noopener noreferrer">GDQuest</a> assets. We'll be maintaining the demo over the next year, too, keeping it up-to-date and cleaning it up as we learn new things.</p><section style="margin-bottom:var(--ifm-leading)"><a href="https://github.com/chickensoft-games/GameDemo" class="ghCard_SADR"><header class="header_EL4w"><div class="ghLogo_Dvj7"><svg width="24" height="24" viewBox="0 0 19 19" version="1.1" id="svg3" xmlns="http://www.w3.org/2000/svg"><path fill="currentColor" id="path2" d="m 9.46,0.502 c -4.93,0 -8.928,3.997 -8.928,8.929 0,3.944 2.558,7.291 6.106,8.472 0.447,0.081 0.609,-0.194 0.609,-0.431 C 7.247,17.26 7.24,16.699 7.235,15.954 4.752,16.493 4.228,14.757 4.228,14.757 3.822,13.725 3.236,13.451 3.236,13.451 c -0.81,-0.554 0.062,-0.543 0.062,-0.543 0.896,0.063 1.367,0.92 1.367,0.92 0.797,1.365 2.09,0.971 2.599,0.742 C 7.345,13.993 7.576,13.599 7.831,13.376 5.848,13.151 3.764,12.385 3.764,8.964 3.764,7.989 4.112,7.192 4.683,6.568 4.591,6.342 4.284,5.434 4.77,4.205 c 0,0 0.75,-0.24 2.455,0.915 0.712,-0.198 1.477,-0.297 2.236,-0.3 0.758,0.003 1.522,0.102 2.235,0.3 1.704,-1.155 2.453,-0.915 2.453,-0.915 0.487,1.229 0.181,2.137 0.089,2.363 0.572,0.624 0.918,1.421 0.918,2.396 0,3.43 -2.088,4.184 -4.077,4.405 0.32,0.276 0.606,0.821 0.606,1.654 0,1.194 -0.011,2.157 -0.011,2.449 0,0.239 0.161,0.517 0.614,0.43 3.545,-1.183 6.101,-4.528 6.101,-8.471 0,-4.932 -3.998,-8.929 -8.929,-8.929 z"></path></svg></div><div class="headerTitle__RVn"><h2>chickensoft-games<!-- -->/</h2><h1>GameDemo</h1></div><div class="headerLogo_j3df"><img src="/img/chickensoft/game_demo.png" width="auto" height="auto"></div></header><summary class="description_nH2g">The Chickensoft Game Demo ‚Äî a fully tested, third-person 3D game built with Godot and C#. Now with saving and loading!</summary><footer class="footer_DLm1"><div class="footerItem_ahyA"><svg width="21" height="24" role="img" version="1.1" viewBox="0 0 14 16"><path fill="currentColor" fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">396</span><span class="label_phh9">Stars</span></div></div><div class="footerItem_ahyA"><svg width="15" height="24" role="img" version="1.1" viewBox="0 0 10 16"><path fill="currentColor" fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">30</span><span class="label_phh9">Forks</span></div></div><div class="footerItemLanguages_BkNk"><span class="langColor_kTSd" style="background-color:#178600"></span><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">C#</span></div></div></footer></a></section><p><a href="https://www.youtube.com/watch?v=rQyEu1pkcTk" target="_blank" rel="noopener noreferrer">Gamefromscratch</a> covered our game demo, too ‚Äî&nbsp;check it out below!</p><section style="margin-bottom:var(--ifm-leading)"><div class="youtubeOuterContainer_mhb6"><div class="youtubeContainer_nPLO"><iframe src="https://www.youtube.com/embed/rQyEu1pkcTk?si=YaJ7fRPHgHyZnUe3" title="YouTube video player" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="" class="youtubeIFrame_MaaU"></iframe></div></div></section><p>If you want to know more about it, feel free to read our recent <a href="/blog/game-architecture">treatise on game architecture</a> ‚Äî it breaks the demo down and goes into painstaking detail about the technical decisions that went into it. But, bring your reading glasses ‚Äî it's a <em>long</em> read.</p><p>Speaking of Godot game architecture with C#, there's now also the <a href="https://github.com/abmarnie/godot-architecture-organization-advice" target="_blank" rel="noopener noreferrer">Godot Architecture Organization Advice</a> repository ‚Äî go check it out and give it a star, too!</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/separating_game_logic-d773fc638f7b0437dc5277667fcd1a41.png"><img src="/assets/images/separating_game_logic-d773fc638f7b0437dc5277667fcd1a41.png" alt="Separating game logic from visualization." style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">This, and many other diagrams await you in our <a href="http://chickensoft.games/blog/game-architecture" target="_blank" rel="noopener noreferrer">long-winded blog about game architecture.</a></figcaption></figure><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-the-power-to-make-games">üõ† The Power to Make Games<a href="#-the-power-to-make-games" class="hash-link" aria-label="Direct link to üõ† The Power to Make Games" title="Direct link to üõ† The Power to Make Games">‚Äã</a></h2><p>Chickensoft is now home to 14 open source packages designed to solve common problems you might run into if you're using Godot with C#:</p><ul><li><a href="https://github.com/chickensoft-games/GodotEnv" target="_blank" rel="noopener noreferrer">GodotEnv</a>: Automate and standardize Godot installation, version switching, and addon management on macOS, Linux, and Windows.</li><li><a href="https://github.com/chickensoft-games/GoDotTest" target="_blank" rel="noopener noreferrer">GoDotTest</a>: Run and debug automated tests locally or from the command-line for CI/CD purposes.</li><li><a href="https://github.com/chickensoft-games/setup-godot" target="_blank" rel="noopener noreferrer">setup-godot</a>: Install and run Godot on macOS, Linux, and Windows GitHub runners with support for Godot export templates.</li><li><a href="https://github.com/chickensoft-games/LogicBlocks" target="_blank" rel="noopener noreferrer">LogicBlocks</a>: Easy-to-use, hierarchical state machines for games. It even generate state diagrams of your code for you, too.</li><li><a href="https://github.com/chickensoft-games/AutoInject" target="_blank" rel="noopener noreferrer">AutoInject</a>: Tree-based dependency injection that lets you easily scope dependencies to specific Godot scene subtrees.</li><li><a href="https://github.com/chickensoft-games/GodotGame" target="_blank" rel="noopener noreferrer">GodotGame</a>: Template for quickly spinning up a C# game with the Chickensoft best practices already applied.</li><li>...and more, all easily reachable from our <a href="https://chickensoft.games" target="_blank" rel="noopener noreferrer">homepage</a>.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-fun-highlights-from-2023">üèÜ Fun Highlights from 2023<a href="#-fun-highlights-from-2023" class="hash-link" aria-label="Direct link to üèÜ Fun Highlights from 2023" title="Direct link to üèÜ Fun Highlights from 2023">‚Äã</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-terrabrush">üé® TerraBrush<a href="#-terrabrush" class="hash-link" aria-label="Direct link to üé® TerraBrush" title="Direct link to üé® TerraBrush">‚Äã</a></h3><p><a href="https://github.com/spimort/TerraBrush" target="_blank" rel="noopener noreferrer">TerraBrush</a> is a Godot map editor addon written in C# by <a href="https://twitter.com/spimortdev" target="_blank" rel="noopener noreferrer">spimort</a>, and it features a number of incredible map-editing capabilities. Be sure to give it a star and try it out in your next 3D project!</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="https://github.com/spimort/TerraBrush/raw/main/preview.gif?raw=true"><img src="https://github.com/spimort/TerraBrush/raw/main/preview.gif?raw=true" alt="The TerraBrush map editor being used inside the Godot game engine." style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center"><a href="hhttps://github.com/spimort/TerraBrush" target="_blank" rel="noopener noreferrer">TerraBrush</a> is a recently released map editor addon for Godot built in C#.</figcaption></figure><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-layer-generator">üç∞ Layer Generator<a href="#-layer-generator" class="hash-link" aria-label="Direct link to üç∞ Layer Generator" title="Direct link to üç∞ Layer Generator">‚Äã</a></h3><p><a href="https://anton.bergaker.com/" target="_blank" rel="noopener noreferrer">Anton</a> released <a href="https://github.com/AntonBergaker/GodotLayersSourceGenerator" target="_blank" rel="noopener noreferrer">GodotLayersSourceGenerator</a>, a generator that will produce mappings of your collision layer names. He also updated <a href="https://github.com/AntonBergaker/BinaryBundle" target="_blank" rel="noopener noreferrer">BinaryBundle</a>, a C# serialization generator for use with netcode.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_S0QG"><p>If you are looking for more C# generators, take a look at the <a href="https://github.com/Cat-Lips/GodotSharp.SourceGenerators" target="_blank" rel="noopener noreferrer">GodotSharp.SourceGenerators</a> project: it has generators for the scene tree, input mappings, and a ton of other stuff.</p></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-arbitrary-color-reduction-and-palette-ordered-dithering">üì∫ Arbitrary Color Reduction and Palette Ordered Dithering<a href="#-arbitrary-color-reduction-and-palette-ordered-dithering" class="hash-link" aria-label="Direct link to üì∫ Arbitrary Color Reduction and Palette Ordered Dithering" title="Direct link to üì∫ Arbitrary Color Reduction and Palette Ordered Dithering">‚Äã</a></h3><p>If you're looking to make your game a little more retro, check out Mark's <a href="https://godotshaders.com/shader/arbitrary-color-reduction-ordered-dithering/" target="_blank" rel="noopener noreferrer">Arbitrary Color Reduction and Palette Ordered Dithering</a> shader that was released recently. Here's a video of it applied to a pseudo-isometric 3D scene:</p><div style="width:100%;height:360px"></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-unidot-importer">üåâ Unidot Importer<a href="#-unidot-importer" class="hash-link" aria-label="Direct link to üåâ Unidot Importer" title="Direct link to üåâ Unidot Importer">‚Äã</a></h3><p>Looking to bring assets over from Unity? You can now do that easily with the <a href="https://github.com/V-Sekai/unidot_importer" target="_blank" rel="noopener noreferrer">Unidot Importer</a> ‚Äî it will automatically convert your <code>.unitypackage</code> assets into Godot <code>.tscn</code> scene files!</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="https://github.com/V-Sekai/unidot_importer/raw/main/unidot_example.jpg"><img src="https://github.com/V-Sekai/unidot_importer/raw/main/unidot_example.jpg" alt="Unidot importing a Unity asset package into Godot." style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center"></figcaption></figure><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-an-open-source-community">üê§ An Open Source Community<a href="#-an-open-source-community" class="hash-link" aria-label="Direct link to üê§ An Open Source Community" title="Direct link to üê§ An Open Source Community">‚Äã</a></h2><p>If you're using Godot with C#, or interested in doing so, you are no longer alone! Many of us are actively working on creating a better game development future with Godot and C# by sharing tools, documentation, and games we create. We'd love to see you, too!</p><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_S0QG"><p>Chickensoft is a grassroots community and open source organization dedicated to furthering the use of Godot with C#. We're excited to have a community of&nbsp;over a 1,000 members now, and folks have graciously contributed a number of bugfixes and features to our open source packages over the last year. Come say hi!</p></div></div><section style="margin-bottom:var(--ifm-leading)"><div class="inviteContainer_H3cR"><div class="discordServer_Be5H"><h3 class="discordInviteText_xFKC">You have been invited to join a server</h3><div class="discordInviteBody_jtVf"><div><img src="/img/chickensoft/chickensoft_logo.svg" class="serverImage_snrK"></div><div class="discordInviteDetails_UNwE"><h3 class="discordInviteName_OuUx">Chickensoft</h3><div class="discordInviteCounts_wTwU"><i class="discordInviteStatusIcon_ySkV discordInviteOnlineIcon_e0ks"></i><strong class="discordInviteCount_qEVM"><span id="discordNumOnline">#</span> <!-- -->Online</strong><i class="discordInviteStatusIcon_ySkV discordInviteOfflineIcon_R82S"></i><strong class="discordInviteCount_qEVM"><span id="discordNumMembers">#</span> <!-- -->Members</strong></div></div></div><div class="discordButtonContainer_oTIm"><a class="button button--primary button--lg discordInviteJoinButton_VJ9M" href="https://discord.gg/MjA6HUzzAE">Join</a></div></div></div></section>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Enjoyable Game Architecture]]></title>
            <link>https://chickensoft.games/blog/game-architecture</link>
            <guid>https://chickensoft.games/blog/game-architecture</guid>
            <pubDate>Fri, 01 Dec 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[If we can make building games easier, we can focus on the hard part: designing them.
]]></description>
            <content:encoded><![CDATA[<figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/header-ea6f7d4f5f558f0c32f8a911c6e971bc.jpg"><img src="/assets/images/header-ea6f7d4f5f558f0c32f8a911c6e971bc.jpg" alt="Game architecture header image." style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center"></figcaption></figure><p>Game architecture, like all software architecture, tends to be neglected or forgotten as a project goes on. Scalable, enjoyable, production codebases are so rare they're almost mythical.</p><p>It doesn't have to be this way: just because video game development is difficult doesn't mean it has to be painful. You can still achieve a robust software architecture that scales with your game ‚Äî&nbsp;even as you rework core systems and make sweeping refactors. Since architecture is based on expert opinions and developer experiences, we'll borrow from the wisdom of other software architectures to create a game architecture that prioritizes an enjoyable developer experience.</p><p>Over the last few years, I've been making and maintaining over a dozen open source packages for Godot and C#. While leveraging these packages and the opinionated architecture described in this article, I was able to build a 3D platformer demo in just a month or two of spare time. If you're willing to stick around, I'd love to share the methodology, the rationale, and even the demo itself with you.</p><section style="margin-bottom:var(--ifm-leading)"><div class="youtubeOuterContainer_mhb6"><div class="youtubeContainer_nPLO"><iframe src="https://www.youtube.com/embed/LEethjxNnrw?si=LPGQLn3C2x9hgmPm" title="YouTube video player" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="" class="youtubeIFrame_MaaU"></iframe></div></div></section><p>In the demo, your goal is to collect all the coins hidden in the 3D world. Go ahead and take a quick look at the demo's code on GitHub: if you like the way the code is written, you'll like this article. If you don't, you should write a rebuttal. Either way, I look forward to hearing from you.</p><section style="margin-bottom:var(--ifm-leading)"><a href="https://github.com/chickensoft-games/GameDemo" class="ghCard_SADR"><header class="header_EL4w"><div class="ghLogo_Dvj7"><svg width="24" height="24" viewBox="0 0 19 19" version="1.1" id="svg3" xmlns="http://www.w3.org/2000/svg"><path fill="currentColor" id="path2" d="m 9.46,0.502 c -4.93,0 -8.928,3.997 -8.928,8.929 0,3.944 2.558,7.291 6.106,8.472 0.447,0.081 0.609,-0.194 0.609,-0.431 C 7.247,17.26 7.24,16.699 7.235,15.954 4.752,16.493 4.228,14.757 4.228,14.757 3.822,13.725 3.236,13.451 3.236,13.451 c -0.81,-0.554 0.062,-0.543 0.062,-0.543 0.896,0.063 1.367,0.92 1.367,0.92 0.797,1.365 2.09,0.971 2.599,0.742 C 7.345,13.993 7.576,13.599 7.831,13.376 5.848,13.151 3.764,12.385 3.764,8.964 3.764,7.989 4.112,7.192 4.683,6.568 4.591,6.342 4.284,5.434 4.77,4.205 c 0,0 0.75,-0.24 2.455,0.915 0.712,-0.198 1.477,-0.297 2.236,-0.3 0.758,0.003 1.522,0.102 2.235,0.3 1.704,-1.155 2.453,-0.915 2.453,-0.915 0.487,1.229 0.181,2.137 0.089,2.363 0.572,0.624 0.918,1.421 0.918,2.396 0,3.43 -2.088,4.184 -4.077,4.405 0.32,0.276 0.606,0.821 0.606,1.654 0,1.194 -0.011,2.157 -0.011,2.449 0,0.239 0.161,0.517 0.614,0.43 3.545,-1.183 6.101,-4.528 6.101,-8.471 0,-4.932 -3.998,-8.929 -8.929,-8.929 z"></path></svg></div><div class="headerTitle__RVn"><h2>chickensoft-games<!-- -->/</h2><h1>GameDemo</h1></div><div class="headerLogo_j3df"><img src="/img/chickensoft/game_demo.png" width="auto" height="auto"></div></header><summary class="description_nH2g">The Chickensoft Game Demo ‚Äî a fully tested, third-person 3D game built with Godot and C#. Now with saving and loading!</summary><footer class="footer_DLm1"><div class="footerItem_ahyA"><svg width="21" height="24" role="img" version="1.1" viewBox="0 0 14 16"><path fill="currentColor" fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">396</span><span class="label_phh9">Stars</span></div></div><div class="footerItem_ahyA"><svg width="15" height="24" role="img" version="1.1" viewBox="0 0 10 16"><path fill="currentColor" fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">30</span><span class="label_phh9">Forks</span></div></div><div class="footerItemLanguages_BkNk"><span class="langColor_kTSd" style="background-color:#178600"></span><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">C#</span></div></div></footer></a></section><blockquote><p>Most of the assets used in the demo are free assets created by <a href="https://www.gdquest.com/" target="_blank" rel="noopener noreferrer">GDQuest</a> ‚Äî please check them out and support their efforts!</p></blockquote><p>Why am I tackling something as subjective and nebulous as architecture? Because, deep down inside, I believe most of us don't want to bother with architecture. We just want to make our game and have a good time doing it. Unfortunately, if you just start writing code without a second thought, you'll often find that the further you get, the harder it gets.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/white_whale-5a772e414e51ef8cad4267dbb811e8d0.png"><img src="/assets/images/white_whale-5a772e414e51ef8cad4267dbb811e8d0.png" alt="Architecture: software engineering's white whale." style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">A spoof of the charts in Martin Fowler's article <a href="https://martinfowler.com/articles/is-quality-worth-cost.html" target="_blank" rel="noopener noreferrer">"Is High Quality Software Worth the Cost?"</a>.</figcaption></figure><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-what-is-software-architecture">üí° What Is Software Architecture?<a href="#-what-is-software-architecture" class="hash-link" aria-label="Direct link to üí° What Is Software Architecture?" title="Direct link to üí° What Is Software Architecture?">‚Äã</a></h2><p>You already know, but we'll define it anyways for the sake of completeness.</p><p><em>A software architecture is a set of rules and practices designed around the developers' goals for their team's code.</em></p><p>Whether or not those practices actually accomplish those goals is another matter entirely.</p><p>I believe a good architecture is <strong>opinionated</strong>, <strong>based on learnings from past projects</strong> which met the same (or similar) goals, and <strong>plays nicely with the development tools</strong> for your particular stack: i.e., <em>a good architecture should provide structure, be based on experience, and be practical to implement</em>.</p><p>If there's two equally good ways to do something, a good architecture will pick one as the recommended approach. Good architectures embrace collectivism, not individualism. Each feature or component should be implemented similarly to the other features and components. Increasing code-similarity allows developers to ramp up quickly, switch between features with relative ease, and reduces the number of complex details they have to remember.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/architecture_sanity-b15bf35a04b9a6bcad219cad75611dc8.png"><img src="/assets/images/architecture_sanity-b15bf35a04b9a6bcad219cad75611dc8.png" alt="Architecture sanity test." style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">When loose coupling is eliminated, a good architecture should probably be a directed, acyclic graph.</figcaption></figure><p>Below, I've listed some common, high-level goals that a good architecture might be designed around. These goals range from overall organizational practices to annoying details about where files should be placed and how code should be formatted and linted.</p><ol><li><strong>Organization</strong>: Where do I put code and related assets when adding a new feature?</li><li><strong>Development</strong>: How do I know what code to write to accomplish a feature?</li><li><strong>Testing</strong>: How do I write tests for my feature?</li><li><strong>Structure</strong>: How do I get the dependencies my features need?</li><li><strong>Consistency</strong>: How do I keep my code formatted? (Yes, this is important. If you don't have automatic style enforcement, you can run into problems where your IDE's language server is trying to apply auto-fixes that make your life hard with the style of coding you've chosen.)</li><li><strong>Flexibility</strong>: What happens when I need to refactor something? An optimal architecture would allow us to overhaul a feature without breaking the other features, enabling us to iterate faster and keep our code flexible.</li></ol><p>While the architecture can't hold your hand and give you line-by-line coding instructions (that's the job of the senior developers on your team), it should, at least, give you a good idea of where to start when you first grab that ticket off the backlog.</p><p>A good architecture should help prevent writer's, er, coder's block when you first start on a new feature. It should take the guesswork out of what should be mundane procedures (like scaffolding out a new view, its state management, and its tests) and turn it into something you can do in your sleep (or automate with some snippets).</p><p>To achieve the lofty goals above, we'll create specific, concrete requirements for our architecture that serves our noble goals. Our ideal architecture should‚Ä¶</p><ol><li>Define <strong>abstraction layers</strong> to organize code modules.</li><li>Provide an <strong>organization system</strong> for the files and assets in the codebase.</li><li>Allow each "unit" of code to be <strong>tested in isolation</strong>.</li></ol><p>To meet these goals, we'll draw inspiration from a number of existing patterns and architectures, casually incorporating whatever we like.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-abstraction-layers">üç∞ Abstraction Layers<a href="#-abstraction-layers" class="hash-link" aria-label="Direct link to üç∞ Abstraction Layers" title="Direct link to üç∞ Abstraction Layers">‚Äã</a></h2><p>Our ideal architecture should provide an opinion about the overall structure of our game. In a typical visual application, you might have the view layer, business logic / domain layer, and the data layer.</p><p>For games, we can make our own, similar layers. Each layer will correspond to a type of object in our codebase.</p><ul><li><strong>Visual Layer</strong> ‚Äî Scripted game engine components. A Unity <code>MonoBehavior</code> attached to a game object, a Godot <code>Node</code> script class, etc.</li><li><strong>GameLogic Layer</strong> ‚Äî the meat and potatoes of your game, itself broken into two "sublayers":<ul><li><strong>Visual Game Logic Layer</strong> ‚Äî state machines, behavior trees, or other stateful mechanisms that drive a single game engine component's state.</li><li><strong>Pure Game Logic Layer</strong> ‚Äî repository classes that perform game logic that's not specific to any single visual component.</li></ul></li><li><strong>Data Layer</strong> ‚Äî Various client classes for "lower level" interactions, such as networking and persistent storage.</li></ul><p>Together, these 3 abstraction layers allow us to look at our game critically. Most pieces of code should fall into one of those layers nicely.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/game_architecture-867fa678f6d73270240dfe3c2729d661.png"><img src="/assets/images/game_architecture-867fa678f6d73270240dfe3c2729d661.png" alt="Game Architecture Layers of Abstraction" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">The big 3 abstraction layers: visuals, game logic, and data.</figcaption></figure><blockquote><p>Differentiating game logic into visual game logic and pure game logic is an idea reminiscent of the way <a href="https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html" target="_blank" rel="noopener noreferrer">clean architecture</a> distinguishes between "enterprise-wide business rules" and "application specific business rules."</p></blockquote><p>We'll also introduce an additional stipulation into our architecture: objects in one layer can only be strongly coupled with objects in the layer directly below them. You might recognize this rule from the strict form of <a href="https://cs.uwaterloo.ca/~m2nagapp/courses/CS446/1195/Arch_Design_Activity/Layered.pdf" target="_blank" rel="noopener noreferrer">layered architecture</a>.</p><p>Restricting objects to only interacting with objects in the layer directly beneath them prevents sibling dependencies in the same layer (strong coupling), as well as "skipping" layers, which would indicate a design oversight.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-visual-layer">üé≠ Visual Layer<a href="#-visual-layer" class="hash-link" aria-label="Direct link to üé≠ Visual Layer" title="Direct link to üé≠ Visual Layer">‚Äã</a></h3><p>Visual components drive the things we see in the game engine. They come in many flavors, but tend to be pretty similar across game engines. In Unity, you'll find <code>MonoBehavior</code> components that are applied to GameObjects. In Godot, we subclass a Godot <code>Node</code> and attach the script to a scene node. Both of these systems allow us to represent visual components within the engine.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/visual_component-455386920e6cd1664d664d4e801c1cc9.png"><img src="/assets/images/visual_component-455386920e6cd1664d664d4e801c1cc9.png" alt="Game Engine Visual Components" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">You know, the part you can actually see.</figcaption></figure><p>Most game developers will reiterate the importance of separating your visual logic from your game logic, citing the <a href="https://en.wikipedia.org/wiki/Single-responsibility_principle" target="_blank" rel="noopener noreferrer">single responsibility principle</a> ‚Äî so, how do you do that exactly?</p><p>Mechanisms like <strong>state machines</strong> and <strong>behavior trees</strong> are commonly used to separate the "state" of something from the code that visualizes it. For example, a visual script can create a state machine and provide a reference to itself to the state machine, allowing the state machine to "drive" the visual object as it changes between states. The visual script can likewise hang onto a reference to its state machine, forwarding relevant input events to it, giving the state machine a chance to drive it whenever something happens.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/game_engine-974d2810a76193ccddf93020fdc2bdd5.png"><img src="/assets/images/game_engine-974d2810a76193ccddf93020fdc2bdd5.png" alt="Level being edited in the Godot game engine." style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">Editing a level in the Godot game engine.</figcaption></figure><p>An optimal architecture would probably eliminate conditional branching from visual game component scripts altogether, performing all logic in the component's state machine or other state mechanism.</p><p>Real life isn't always so pretty, though: for performance reasons, it's often advantageous to have a few checks in the visual component itself to decide if it's even worth passing an event to the state machine. If you don't, garbage collected languages like C# can generate a lot of unnecessary memory pressure, depending on how carefully you handle input queuing and memory allocation.</p><p>Below is a minimum example of a visual node script. For the sake of example, it is completely stateless. The only event that can happen ‚Äî the main menu button being pressed ‚Äî is forwarded via the use of a signal, allowing a stateful ancestor to manipulate this node.</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Meta</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments keyword" style="color:#ffcc99">typeof</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments type-expression class-name">IAutoNode</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">partial</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">class</span><span class="token plain"> </span><span class="token class-name">WinMenu</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token type-list class-name">Control</span><span class="token type-list punctuation" style="color:#6c6783">,</span><span class="token type-list"> </span><span class="token type-list class-name">IWinMenu</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">override</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">void</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">_Notification</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token class-name keyword" style="color:#ffcc99">int</span><span class="token plain"> what</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">this</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Notify</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">what</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token preprocessor property" style="color:#9a86fd">#</span><span class="token preprocessor property directive keyword" style="color:#ffcc99">region</span><span class="token preprocessor property" style="color:#9a86fd"> Nodes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token plain">Node</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name">IButton</span><span class="token plain"> MainMenuButton </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">get</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">set</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">default</span><span class="token operator" style="color:#e09142">!</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token preprocessor property" style="color:#9a86fd">#</span><span class="token preprocessor property directive keyword" style="color:#ffcc99">endregion</span><span class="token preprocessor property" style="color:#9a86fd"> Nodes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token preprocessor property" style="color:#9a86fd">#</span><span class="token preprocessor property directive keyword" style="color:#ffcc99">region</span><span class="token preprocessor property" style="color:#9a86fd"> Signals</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token plain">Signal</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">delegate</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">void</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">MainMenuEventHandler</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token preprocessor property" style="color:#9a86fd">#</span><span class="token preprocessor property directive keyword" style="color:#ffcc99">endregion</span><span class="token preprocessor property" style="color:#9a86fd"> Signals</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">void</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">OnReady</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> MainMenuButton</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Pressed </span><span class="token operator" style="color:#e09142">+=</span><span class="token plain"> OnMainMenuPressed</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">void</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">OnExitTree</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> MainMenuButton</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Pressed </span><span class="token operator" style="color:#e09142">-=</span><span class="token plain"> OnMainMenuPressed</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">void</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">OnMainMenuPressed</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">EmitSignal</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">SignalName</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">MainMenu</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>You'll often find that many nodes can be stateless, simply signaling when something happens. Stripping as much logic out of the visual layer is beneficial because it allows stateful, parent nodes to manipulate the simpler, stateless nodes. For comparison, Google's cross platform app framework <a href="https://flutter.dev/" target="_blank" rel="noopener noreferrer">Flutter</a> specifically forces you to distinguish between a <a href="https://api.flutter.dev/flutter/widgets/StatefulWidget-class.html" target="_blank" rel="noopener noreferrer">StatefulWidget</a> and a <a href="https://api.flutter.dev/flutter/widgets/StatelessWidget-class.html" target="_blank" rel="noopener noreferrer">StatelessWidget</a>. This same distinction applies to Godot, since they both share a visual, tree-based composition structure.</p></blockquote><p>We'll be making extensive use of the <a href="https://github.com/chickensoft-games/Introspection" target="_blank" rel="noopener noreferrer">Introspection</a> source generator, which lets us inject code into our node classes via <a href="https://en.wikipedia.org/wiki/Mixin" target="_blank" rel="noopener noreferrer">mixins</a>.</p><p>In the example above, the <code>IAutoNode</code> mixin enables the <code>WinMenu</code> class to connect the <code>MainMenuButton</code> property to its corresponding node with the same unique identifier, <code>%MainMenuButton</code> in the scene. Little tricks like that help save us a ton of error-prone typing.</p><p>The <code>IAutoNode</code> mixin comes from <a href="https://github.com/chickensoft-games/AutoInject" target="_blank" rel="noopener noreferrer">AutoInject</a>, which provides a number of utilities in addition to dependency injection.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-gamelogic-layer">ü§ñ GameLogic Layer<a href="#-gamelogic-layer" class="hash-link" aria-label="Direct link to ü§ñ GameLogic Layer" title="Direct link to ü§ñ GameLogic Layer">‚Äã</a></h3><p>Game logic simply refers to code that manipulates the game and its mechanics, without having to directly worry about other concerns like how the game is visualized, networked, or persisted.</p><p>In our architecture, we differentiate between two kinds of game logic. Let's look at each one.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="-visual-game-logic-layer">üñº Visual Game Logic Layer<a href="#-visual-game-logic-layer" class="hash-link" aria-label="Direct link to üñº Visual Game Logic Layer" title="Direct link to üñº Visual Game Logic Layer">‚Äã</a></h4><p>As mentioned, visual game logic is just code that's specific to a single visual component (state machines, behavior trees, or other stateful mechanisms that belong to a specific visual component).</p><p>For visuals that do anything more than just appearing in game, they should probably have a reference to a <a href="https://en.wikipedia.org/wiki/Behavior_tree_(artificial_intelligence,_robotics_and_control)" target="_blank" rel="noopener noreferrer">behavior tree</a>, <a href="https://en.wikipedia.org/wiki/Finite-state_machine" target="_blank" rel="noopener noreferrer">state machine</a>, <a href="https://statecharts.dev/" target="_blank" rel="noopener noreferrer">statechart</a>, or other such stateful mechanism that represents their state-of-being.</p><p>Stateful mechanisms can be loosely coupled to their owning components via an interface, enabling them to "drive" their visual components by calling methods on them or producing outputs that the visual game component binds to.</p><p><em>The visual component's job is to shut up and look pretty</em>. The dumber it is, the better. An ideal visual component will just forward all inputs to its underlying state machine (or whatever it's using).</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/visual_game_logic-58ace245755dd76920efc883b3017c33.png"><img src="/assets/images/visual_game_logic-58ace245755dd76920efc883b3017c33.png" alt="Game Engine Visual Components" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">You know, the part you can actually see.</figcaption></figure><h5 class="anchor anchorWithStickyNavbar_LWe7" id="state-management-in-practice">State Management In Practice<a href="#state-management-in-practice" class="hash-link" aria-label="Direct link to State Management In Practice" title="Direct link to State Management In Practice">‚Äã</a></h5><p>For some of the more complex visual components in your game, a simple state machine would get out of hand quickly. Most likely, you'll end up using a <a href="https://statecharts.dev/" target="_blank" rel="noopener noreferrer">statechart</a>, a type of hierarchical state machine that can help avoid the pitfalls of ordinary state machines.</p><p>Fortunately, I've already created an ergonomic, hierarchical state machine implementation called <a href="https://github.com/chickensoft-games/LogicBlocks" target="_blank" rel="noopener noreferrer">LogicBlocks</a> that allows you to write your states the way you write ordinary C# <del>classes</del> records. In the game demo, LogicBlocks easily handled the menu transition logic, overall pause mode, player state machine, and every other stateful component.</p><p>I'd recommend at least considering using LogicBlocks, for the following reasons:</p><ul><li>Includes a picture generator that reads your code and helps you visualize it as a UML state diagram.</li><li>Easily testable (abstracts inputs and outputs).</li><li>No need to define transition tables. It operates more like a <a href="https://en.wikipedia.org/wiki/Moore_machine" target="_blank" rel="noopener noreferrer">Moore machine</a>, which is a lot more ergonomic than the typical transition-based approach.</li><li>Correctly implements state entrance and exit callbacks for nested states.</li><li>Correctly queues and processes inputs.</li><li>Provides states with a blackboard ‚Äî a shared data store.</li><li>Includes an ergonomic binding system that allows you to easily synchronize the visual component with its state.</li><li>LogicBlocks can add input to themselves, allowing them to initiate subsequent state changes.</li></ul><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/player-07a393d7baeac69a0a584374cbb3cf32.png"><img src="/assets/images/player-07a393d7baeac69a0a584374cbb3cf32.png" alt="Player state diagram generated by LogicBlocks." style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">State diagram generated by LogicBlocks for the player in the 3D platformer demo.</figcaption></figure><p>Below, here's the <code>InGameUILogic</code> state machine from the game demo. It's an incredibly simple state machine ‚Äî it only has one state that subscribes to the <code>AppRepository</code> (see next section for details) and produces outputs whenever the number of coins changes.</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">partial</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">class</span><span class="token plain"> </span><span class="token class-name">InGameUILogic</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">record</span><span class="token plain"> </span><span class="token class-name">State</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token type-list class-name">StateLogic</span><span class="token type-list punctuation" style="color:#6c6783">,</span><span class="token type-list"> </span><span class="token type-list class-name">IState</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">State</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token class-name">IContext</span><span class="token plain"> context</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">base</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">context</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token class-name keyword" style="color:#ffcc99">var</span><span class="token plain"> appRepo </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> context</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Get</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">IAppRepo</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token generic-method function" style="color:#9a86fd">OnEnter</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">State</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">previous</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        appRepo</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">NumCoinsCollected</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Sync </span><span class="token operator" style="color:#e09142">+=</span><span class="token plain"> OnNumCoinsCollected</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        appRepo</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">NumCoinsAtStart</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Sync </span><span class="token operator" style="color:#e09142">+=</span><span class="token plain"> OnNumCoinsAtStart</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token generic-method function" style="color:#9a86fd">OnExit</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">State</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">next</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        appRepo</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">NumCoinsCollected</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Sync </span><span class="token operator" style="color:#e09142">-=</span><span class="token plain"> OnNumCoinsCollected</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        appRepo</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">NumCoinsAtStart</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Sync </span><span class="token operator" style="color:#e09142">-=</span><span class="token plain"> OnNumCoinsAtStart</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">void</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">OnNumCoinsCollected</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token class-name keyword" style="color:#ffcc99">int</span><span class="token plain"> numCoinsCollected</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      Context</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Output</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">Output</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">NumCoinsChanged</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">numCoinsCollected</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token generic-method function" style="color:#9a86fd">Get</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">IAppRepo</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">NumCoinsAtStart</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Value</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">void</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">OnNumCoinsAtStart</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token class-name keyword" style="color:#ffcc99">int</span><span class="token plain"> numCoinsAtStart</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      Context</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Output</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">Output</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">.</span><span class="token constructor-invocation class-name">NumCoinsChanged</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token generic-method function" style="color:#9a86fd">Get</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">IAppRepo</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">NumCoinsCollected</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Value</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> numCoinsAtStart</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Meanwhile, the actual Godot node for the <code>InGameUI</code> binds to the state machine's outputs, updating the UI whenever the number of coins changes.</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Meta</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments keyword" style="color:#ffcc99">typeof</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments type-expression class-name">IAutoNode</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">partial</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">class</span><span class="token plain"> </span><span class="token class-name">InGameUI</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token type-list class-name">Control</span><span class="token type-list punctuation" style="color:#6c6783">,</span><span class="token type-list"> </span><span class="token type-list class-name">IInGameUI</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token comment" style="color:#6c6783">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">void</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">OnResolved</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    InGameUIBinding </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> InGameUILogic</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Bind</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    InGameUIBinding</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Handle</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">InGameUILogic</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">Output</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">NumCoinsChanged</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">output</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">SetCoinsLabel</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          output</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">NumCoinsCollected</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> output</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">NumCoinsAtStart</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    InGameUILogic</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Start</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">void</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">SetCoinsLabel</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token class-name keyword" style="color:#ffcc99">int</span><span class="token plain"> coins</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> </span><span class="token class-name keyword" style="color:#ffcc99">int</span><span class="token plain"> totalCoins</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    CoinsLabel</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Text </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token interpolation-string string" style="color:#ffcc99">$"</span><span class="token interpolation-string interpolation punctuation" style="color:#6c6783">{</span><span class="token interpolation-string interpolation expression language-csharp">coins</span><span class="token interpolation-string interpolation punctuation" style="color:#6c6783">}</span><span class="token interpolation-string string" style="color:#ffcc99">/</span><span class="token interpolation-string interpolation punctuation" style="color:#6c6783">{</span><span class="token interpolation-string interpolation expression language-csharp">totalCoins</span><span class="token interpolation-string interpolation punctuation" style="color:#6c6783">}</span><span class="token interpolation-string string" style="color:#ffcc99">"</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token comment" style="color:#6c6783">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="-pure-game-logic-layer">üé∞ Pure Game Logic Layer<a href="#-pure-game-logic-layer" class="hash-link" aria-label="Direct link to üé∞ Pure Game Logic Layer" title="Direct link to üé∞ Pure Game Logic Layer">‚Äã</a></h4><p>"Pure" game logic encompasses the "domain" of your game. Components in the pure game logic layer are typically repositories, which are usually just plain-old C# classes. Repositories are responsible for implementing the rules that compromise your game's domain.</p><h5 class="anchor anchorWithStickyNavbar_LWe7" id="the-domain-of-chess">The Domain of Chess<a href="#the-domain-of-chess" class="hash-link" aria-label="Direct link to The Domain of Chess" title="Direct link to The Domain of Chess">‚Äã</a></h5><p>In chess, the rook can capture any piece in its path if doing so would not put the king in check. The rook must also stop at the location where the capture occurs. The concept of "capturing" is a rule specific to chess, and thereby exists within the "domain" of chess.</p><p>Because capturing involves more than just a single chess piece, it can't be implemented cleanly in the visual game logic layer. Instead, the state machine for a rook might realize it's being directed to capture a piece, and then call a repository method to attempt the capture. If the rook is allowed to capture the piece, the repository will perform the capture, firing an event that the newly captured piece would already be subscribed to. The captured piece will remove itself from the board, and the repository can return a success indicator to the rook's state machine.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/chess-183449097e1234bf9763685956c76252.png"><img src="/assets/images/chess-183449097e1234bf9763685956c76252.png" alt="Capturing in Chess" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">The rules for capturing pieces falls within the game's domain.</figcaption></figure><h5 class="anchor anchorWithStickyNavbar_LWe7" id="making-repositories">Making Repositories<a href="#making-repositories" class="hash-link" aria-label="Direct link to Making Repositories" title="Direct link to Making Repositories">‚Äã</a></h5><p>In the game demo, we have an <code>AppRepository</code> that allows us to handle the game logic for the entire app. Since collecting coins affects more than just a single visual component and is responsible for how you win the game, we handle coin collection inside the <code>AppRepository</code>.</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token comment" style="color:#6c6783">/// &lt;summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token comment" style="color:#6c6783">/// Pure application game logic repository ‚Äî&nbsp;shared between view-specific logic</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token comment" style="color:#6c6783">/// blocks.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token comment" style="color:#6c6783">/// &lt;/summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">class</span><span class="token plain"> </span><span class="token class-name">AppRepo</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token type-list class-name">IAppRepo</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token comment" style="color:#6c6783">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">void</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">StartCoinCollection</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token class-name">ICoin</span><span class="token plain"> coin</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    _coinsBeingCollected</span><span class="token operator" style="color:#e09142">++</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    _numCoinsCollected</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">OnNext</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">_numCoinsCollected</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Value </span><span class="token operator" style="color:#e09142">+</span><span class="token plain"> </span><span class="token number" style="color:#e09142">1</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    CoinCollected</span><span class="token punctuation" style="color:#6c6783">?.</span><span class="token function" style="color:#9a86fd">Invoke</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">void</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">OnFinishCoinCollection</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token class-name">ICoin</span><span class="token plain"> coin</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    _coinsBeingCollected</span><span class="token operator" style="color:#e09142">--</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token keyword" style="color:#ffcc99">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      _coinsBeingCollected </span><span class="token operator" style="color:#e09142">==</span><span class="token plain"> </span><span class="token number" style="color:#e09142">0</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">&amp;&amp;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      _numCoinsCollected</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Value </span><span class="token operator" style="color:#e09142">&gt;=</span><span class="token plain"> _numCoinsAtStart</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Value</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token function" style="color:#9a86fd">OnGameEnded</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">GameOverReason</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">PlayerWon</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token comment" style="color:#6c6783">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We've omitted quite a lot for the sake of brevity, but you probably get the idea: whenever a coin detects a collision with the player, it sends an event to its state machine, which starts the coin collection animation and tells the <code>AppRepository</code> that a coin is being collected. When the animation finishes, it tells the <code>AppRepository</code> that it's finished being collected.</p><p>The <code>AppRepository</code> tracks the number of coins that were collected and then fires an event to end the game. Other state machines on other visual components are subscribed to the game-over event, handling cleanup or transitioning to other screens, as needed.</p><h5 class="anchor anchorWithStickyNavbar_LWe7" id="how-data-flows-in-a-game">How Data Flows in a Game<a href="#how-data-flows-in-a-game" class="hash-link" aria-label="Direct link to How Data Flows in a Game" title="Direct link to How Data Flows in a Game">‚Äã</a></h5><p>A good state machine, behavior tree, or other state implementation should be able to subscribe to events occurring in repositories, as well as receive events and/or query data from the visual component they belong to.</p><p>You can think of data flowing <em>down into the state</em> from the visual component that owns it, and <em>bubbling upward from game logic repositories</em> that need to broadcast events.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/separating_game_logic-d773fc638f7b0437dc5277667fcd1a41.png"><img src="/assets/images/separating_game_logic-d773fc638f7b0437dc5277667fcd1a41.png" alt="Separating game logic from visualization." style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">Data flows down from the visuals via strongly coupled relationships, and bubbles back upwards via reactive mechanisms that promote loose coupling, like C# events, Observers, or other such utilities.</figcaption></figure><p>If all of this sounds familiar, it's probably because it's a <a href="https://reactivex.io/" target="_blank" rel="noopener noreferrer">reactive</a> (as in ReactiveX, or rx) style of coding. Or maybe you've used an <a href="https://dzone.com/articles/design-patterns-event-bus" target="_blank" rel="noopener noreferrer">event bus</a> ‚Äî another type of loosely-coupled, observable system.</p><blockquote><p>I tend to think of reactive-style code like glue: it's extremely powerful, messy, and gets everywhere ‚Äî so use sparingly! If you've ever tried to explain multiple chained event source transformers that zip elements together to a junior programmer, you know just how tricky it is to wrap your head around. It's also tricky for yourself, 6 months in the future.</p></blockquote><p>For the sake of convenience, I use a little reactive utility called <a href="https://github.com/chickensoft-games/Collections#autoprop" target="_blank" rel="noopener noreferrer"><code>AutoProp</code></a> inspired by C#'s built-in events and observers. It's more or less the same API as a C# observer, but with a few tweaks to be more ergonomic.</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name">IAutoProp</span><span class="token return-type class-name punctuation" style="color:#6c6783">&lt;</span><span class="token return-type class-name keyword" style="color:#ffcc99">bool</span><span class="token return-type class-name punctuation" style="color:#6c6783">&gt;</span><span class="token plain"> MyValue </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> _myValue</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token comment" style="color:#6c6783">// expose read-only version</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">private</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">readonly</span><span class="token plain"> </span><span class="token class-name">AutoProp</span><span class="token class-name punctuation" style="color:#6c6783">&lt;</span><span class="token class-name keyword" style="color:#ffcc99">bool</span><span class="token class-name punctuation" style="color:#6c6783">&gt;</span><span class="token plain"> _myValue </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">AutoProp</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&lt;</span><span class="token constructor-invocation class-name keyword" style="color:#ffcc99">bool</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token boolean" style="color:#ffcc99">false</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>To keep things sane, we can create feature-specific game repositories. These repositories can be provided to any game component's state mechanism, allowing it to subscribe to the events offered by that repository. Since the visual game logic layer exists directly above the pure game logic layer, only state mechanisms will be allowed to interact with and subscribe to repositories.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-data-layer">üíΩ Data Layer<a href="#-data-layer" class="hash-link" aria-label="Direct link to üíΩ Data Layer" title="Direct link to üíΩ Data Layer">‚Äã</a></h3><p>The data layer represents various data clients in your application, like your network client or file client. In many cases, the game engine itself can suffice.</p><p>Because the data layer is the lowest layer of the application, repositories in the domain layer (your pure game logic) usually invoke various methods on the data layer to send and receive what they need through various channels. Like state machines subscribing to repositories, repositories can themselves subscribe to incoming data from the data layers, invoking their own events when something relevant in the game occurs, allowing all the relevant state machines to receive updates, which in turn updates their visual components. It's turtles all the way up.</p><p>I didn't implement a game saving or loading in the game demo, so I don't have an example to show just yet. The next Chickensoft package I'm working on will hopefully help reduce the workload of implementing versioned game save systems, so hang tight.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-dependency-injection">üíâ Dependency Injection<a href="#-dependency-injection" class="hash-link" aria-label="Direct link to üíâ Dependency Injection" title="Direct link to üíâ Dependency Injection">‚Äã</a></h2><p>Once you know about all the things you'll need, you have to figure out how to get it. We know our app is going to consist of visual components, state management mechanisms, repositories, and data clients.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/tree_based_dependencies-7250bda99e3525c675bcd4e26f9331af.png"><img src="/assets/images/tree_based_dependencies-7250bda99e3525c675bcd4e26f9331af.png" alt="Tree-based dependency provisioning" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">Since Godot is a tree-based system, we can make nodes provide values to their descendant nodes.</figcaption></figure><p>In the real world, references to objects will trickle downward through each layer of abstraction until they settle into the right place. We're following the "objects in one layer shouldn't know about any other objects except those in the layer directly below them" rule from layered architecture, but once again, the real world isn't quite so squeaky clean.</p><p>In reality, here's how it actually works.</p><p>A Godot node script can provide a value to its descendants. In our game demo, the <code>Player</code> node script provides its logic block, <code>PlayerLogic</code>, to its descendant nodes, allowing them to bind to its state machine.</p><p>To get this value for the first time, though, each descendant will need to search their ancestors to see if any of them provide the type of value they're looking for.</p><blockquote><p>In all but the deepest trees, doing an ancestor walk is a very quick way to resolve a dependency provider. Deeper trees can re-provide the value to lower sections, reducing search distances.</p></blockquote><p>There's another problem, though. In Godot, the deepest nodes are "readied" up before their ancestors. This means that the dependent nodes are asking their ancestor provider nodes for values that the providers haven't necessarily had a chance to initialize.</p><p>We solve this problem using <a href="https://github.com/chickensoft-games/AutoInject" target="_blank" rel="noopener noreferrer">AutoInject</a>, which itself leverages the <a href="https://github.com/chickensoft-games/Introspection" target="_blank" rel="noopener noreferrer">Introspection</a> source generator. Under the hood, AutoInject temporarily subscribes to providers for the values it needs. Once the providers have indicated all their dependencies are good to go, AutoInject will make sure the dependent nodes have a chance to set themselves up. If providers immediately provide their values as soon as they're ready (and they should), all of this can happen in the same frame, making everything nice and deterministic.</p><p>To provide a value using AutoInject, our Player node simply needs to implement <code>IProvide&lt;T&gt;</code> for all of the value types it wants to provide.</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Meta</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments keyword" style="color:#ffcc99">typeof</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments type-expression class-name">IAutoNode</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">partial</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">class</span><span class="token plain"> </span><span class="token class-name">Player</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token type-list class-name">CharacterBody3D</span><span class="token type-list punctuation" style="color:#6c6783">,</span><span class="token type-list"> </span><span class="token type-list class-name">IPlayer</span><span class="token type-list punctuation" style="color:#6c6783">,</span><span class="token type-list"> </span><span class="token type-list class-name">IProvide</span><span class="token type-list class-name punctuation" style="color:#6c6783">&lt;</span><span class="token type-list class-name">IPlayerLogic</span><span class="token type-list class-name punctuation" style="color:#6c6783">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">override</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">void</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">_Notification</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token class-name keyword" style="color:#ffcc99">int</span><span class="token plain"> what</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">this</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Notify</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">what</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token preprocessor property" style="color:#9a86fd">#</span><span class="token preprocessor property directive keyword" style="color:#ffcc99">region</span><span class="token preprocessor property" style="color:#9a86fd"> Provisions</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token return-type class-name">IPlayerLogic</span><span class="token plain"> IProvide</span><span class="token operator" style="color:#e09142">&lt;</span><span class="token plain">IPlayerLogic</span><span class="token operator" style="color:#e09142">&gt;</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Value</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> PlayerLogic</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token preprocessor property" style="color:#9a86fd">#</span><span class="token preprocessor property directive keyword" style="color:#ffcc99">endregion</span><span class="token preprocessor property" style="color:#9a86fd"> Provisions</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token comment" style="color:#6c6783">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">void</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">OnReady</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    PlayerLogic </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">PlayerLogic</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token comment" style="color:#6c6783">/* ... */</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token function" style="color:#9a86fd">Provide</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token comment" style="color:#6c6783">// Indicate the dependencies we provide are now available.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>A descendant can just as easily access a dependency from an ancestor node by using the <code>[Dependency]</code> attribute on a property.</p><p>The <code>PlayerModel</code> node, which is a descendant of the <code>Player</code> node, binds to the player state machine and triggers visual animations based on the state machine's outputs.</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Meta</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments keyword" style="color:#ffcc99">typeof</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments type-expression class-name">IAutoNode</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">partial</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">class</span><span class="token plain"> </span><span class="token class-name">PlayerModel</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token type-list class-name">Node3D</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">override</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">void</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">_Notification</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token class-name keyword" style="color:#ffcc99">int</span><span class="token plain"> what</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">this</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Notify</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">what</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token preprocessor property" style="color:#9a86fd">#</span><span class="token preprocessor property directive keyword" style="color:#ffcc99">region</span><span class="token preprocessor property" style="color:#9a86fd"> Dependencies</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token plain">Dependency</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name">IPlayerLogic</span><span class="token plain"> PlayerLogic </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token generic-method function" style="color:#9a86fd">DependOn</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">IPlayerLogic</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token preprocessor property" style="color:#9a86fd">#</span><span class="token preprocessor property directive keyword" style="color:#ffcc99">endregion</span><span class="token preprocessor property" style="color:#9a86fd"> Dependencies</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">void</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">OnResolved</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    PlayerBinding </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> PlayerLogic</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Bind</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    PlayerBinding</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Handle</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">PlayerLogic</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">Output</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">Animations</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">Idle</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">output</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> AnimationStateMachine</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Travel</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token string" style="color:#ffcc99">"idle"</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Handle</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">PlayerLogic</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">Output</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">Animations</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">Move</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">output</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> AnimationStateMachine</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Travel</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token string" style="color:#ffcc99">"move"</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Handle</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">PlayerLogic</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">Output</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">Animations</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">Jump</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">output</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> AnimationStateMachine</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Travel</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token string" style="color:#ffcc99">"jump"</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Handle</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">PlayerLogic</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">Output</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">Animations</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">Fall</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">output</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> AnimationStateMachine</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Travel</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token string" style="color:#ffcc99">"fall"</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Handle</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">PlayerLogic</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">Output</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">MoveSpeedChanged</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">output</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> AnimationTree</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Set</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          </span><span class="token string" style="color:#ffcc99">"parameters/main_animations/move/blend_position"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> output</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Speed</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token comment" style="color:#6c6783">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="Ô∏è-simplified-dependencies">üò∂‚Äçüå´Ô∏è Simplified Dependencies<a href="#Ô∏è-simplified-dependencies" class="hash-link" aria-label="Direct link to üò∂‚Äçüå´Ô∏è Simplified Dependencies" title="Direct link to üò∂‚Äçüå´Ô∏è Simplified Dependencies">‚Äã</a></h3><p>Using such a simple dependency system provides a number of advantages.</p><ul><li>Simple to reason about.</li><li>Follows Godot's natural tree-based structure.</li><li>Avoids nullability issues. Objects only exist when needed, where needed. Either the object and its dependents exist, or none of them exist. No more checking from your dependents to see if the thing you need is null or has null values.</li><li>Declarative style of coding, making it clear what's responsible for what.</li></ul><p>Behind the scenes, AutoInject takes care of looking up providers, caching, subscribing to providers while it waits for them to provide values, and invalidating the cache when re-entering the tree. All we have to do is say what we're providing or what we want, and make sure our descendants are placed beneath ancestors that give them the values they need.</p><p>In the game demo, you can just search for <code>[Dependency]</code> to see every value that's looked up from an ancestor node. The visual nodes in the demo make extensive use of AutoInject to lookup repositories. Once dependencies are resolved, the repositories are passed to the state machines for the nodes.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-testing">üßë‚Äçüî¨ Testing<a href="#-testing" class="hash-link" aria-label="Direct link to üßë‚Äçüî¨ Testing" title="Direct link to üßë‚Äçüî¨ Testing">‚Äã</a></h2><p>If a software architecture allows all of the application's individual "units" ‚Äî i.e., network clients, repositories, states, and views ‚Äî to be tested independently of each other, it's probably a decent architecture. After all, testing something in isolation is the definition of a "unit test".</p><p>In unit testing, a "unit" is the smallest possible unit of code that can be tested in isolation. This annoying, recursive definition is important, because the quality of the architecture can determine how big a unit is. In an ideal world, each unit would belong in one ‚Äî and only one ‚Äî layer of abstraction.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/not_so_layered_architecture-4368ee6fffc9045d2141c5c9f820e6b9.png"><img src="/assets/images/not_so_layered_architecture-4368ee6fffc9045d2141c5c9f820e6b9.png" alt="Not-so-layered architecture" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">We've all been there.</figcaption></figure><p>Historically, unit-testing visual components in game engines has been nearly impossible. Even Unity admits that a <code>MonoBehavior</code> <a href="https://blog.unity.com/technology/unit-testing-part-2-unit-testing-monobehaviours" target="_blank" rel="noopener noreferrer">can't really be unit-tested</a>.</p><p>In Godot, things are a little better. You can easily spin up a new instance of a scene, add it to a test scene, and use <a href="https://github.com/chickensoft-games/GoDotTest" target="_blank" rel="noopener noreferrer">GoDotTest</a> with <a href="https://github.com/derkork/godot-test-driver" target="_blank" rel="noopener noreferrer">GodotTestDriver</a> to call the scene script's methods and assert that it manipulates the engine environment as you expect, and then undo anything it changes.</p><p>Most people stop at this point, perfectly happy to be able to write tests for most things in their game. And that's fine, especially if you don't want to measure code coverage.</p><p>If you cannot quench your thirst for testing, and you find yourself wanting to measure code coverage accurately, the approach mentioned above won't quite work. You'll quickly realize that spinning up a scene means any of its child scenes get spun up, too. And if those child scenes have scripts, those get executed. That brings in a ton of other systems that you need to mock or swap in fake objects for, but there's no way to intercept the deserialization of the scene and swap everything out.</p><p>By now, your simple "unit" test has gone supernova, and is crossing so many layers of abstraction that your test has exploded into an integration test. As a result, your test ends up testing everything else in your game, and your code coverage becomes meaningless.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/scene_explosion-021278970cf535231554b8004238174a.png"><img src="/assets/images/scene_explosion-021278970cf535231554b8004238174a.png" alt="The scene explosion problem." style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">Testing a scene in isolation is very hard to do, since they directly deserialize child scenes and their scripts.</figcaption></figure><p>After all, code coverage is only accurate if you test each system in perfect isolation. Otherwise, you're contaminating the results and you won't be able to easily tell which systems you haven't tested yet.</p><p>I can hear you wondering "well, what's the point of unit testing, then? Is it even worth it to test such small 'units' of functionality?"</p><p>Yes, but not because we want to verify behavior. That's just an added bonus.</p><p>Wait, what? The point of unit testing isn't to verify behavior? Correct ‚Äî at least, in my opinion.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-why-write-unit-tests-at-all">üß™ Why Write Unit Tests At All?<a href="#-why-write-unit-tests-at-all" class="hash-link" aria-label="Direct link to üß™ Why Write Unit Tests At All?" title="Direct link to üß™ Why Write Unit Tests At All?">‚Äã</a></h3><p>I feel the same about unit tests as I do about high school teachers insisting we "show our work" in algebra class. It's a total chore, but it builds expertise and it's the right thing to do, even if you can just "solve it all in your head" (you never can when it comes to code).</p><p>Chores are just that. Necessary. We have to keep our houses clean or we end up with a bug infestation. Likewise, we have to keep our code clean or we end up with ‚Äî wait. You get the idea.</p><p>If you, like me, dread cleaning your house, you should recall the age-old rule: if you have to do something you don't like, make it as easy as possible to do. Set yourself up for success. Listen to your favorite music while you clean the house and promise yourself you'll go out to dinner after.</p><p>So here's why I actually think unit tests are important:</p><ul><li><strong>Unit tests are "showing your work."</strong> They ensure every line of code is executed at least once.</li><li><strong>Unit tests enforce consistency and ensure your architecture is followed.</strong> If you're not following the same architecture, it becomes harder to write tests. - Let's be honest: most tests start out as a copy/paste of some other tests, so you want to get this right up front.</li><li><strong>Unit tests are disposable.</strong> If you refactor something heavily, it's probably easier to just delete the tests and start over than it is to refactor the tests. Plus, you'll end up with better tests and it's often faster, anyways. If you're writing code decently well, this will be a non-issue.</li><li><strong>Unit tests act as living documentation.</strong> Your project wouldn't compile if they weren't up-to-date. If a developer needs to know how to use a particular piece of code, they can quickly look at the tests and get everything they need, because all of that code's capabilities will have tests.</li><li><strong>Unit tests verify the state and/or behavior of the test subject.</strong></li></ul><p>The fact that unit tests verify your code does what you say it does is just the icing on top. If code is strongly coupled, it becomes almost impossible to unit test. The mere existence of unit tests proves the code isn't terrible.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/unit_tests-31d71e2c67517d684e0821fe3260f8df.png"><img src="/assets/images/unit_tests-31d71e2c67517d684e0821fe3260f8df.png" alt="Why that one teammate won't shut up about unit tests" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">Now you can be that annoying teammate that won't shut up about unit tests!</figcaption></figure><p><strong>If unit tests feel repetitive, it's because they are.</strong> Depending on the test subject, you might end up testing a bit of behavior and state, which means that some of the tests can end up pretty tightly coupled. Obviously, with some practice or test utility abstractions, you can make them less coupled, but there tend to be plenty of tests that are basically just verifying the implementation of the test subject. And that's fine, because they're disposable. With today's AI-assisted coding, you'll be fine ‚Äî I promise.</p><blockquote><p>If you're just making a prototype of a game to get the gameplay right, you're not going to want to write many unit tests, if any. Unit testing tends to lock-in a lot of code, so don't do it until you're making the actual game.</p></blockquote><p>An optimal architecture allows a game to achieve 100% code coverage through unit tests. There will always be situations where performance-critical code might be so tightly coupled that testing it in isolation is too difficult and a unit crosses more than one layer of abstraction. Fortunately, if everything else in your codebase is modularized enough to be tested in isolation, carving out a little blast radius where the rules are broken is perfectly allowable. It's one of those ‚Äúyou have to know the rules to break the rules‚Äù type of things.</p><p>Assuming you're convinced, let's talk about how it's actually done, now.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-unit-tests-in-practice">üî¨ Unit Tests In Practice<a href="#-unit-tests-in-practice" class="hash-link" aria-label="Direct link to üî¨ Unit Tests In Practice" title="Direct link to üî¨ Unit Tests In Practice">‚Äã</a></h3><p>To be able to test Godot scenes that incorporate other scenes, we need to be able make an instance of a scene without deserializing the actual scene file. Fortunately, Godot allows us to just <code>new</code> up any scene script we want ‚Äî problem solved. Except, not quite. Once we add the script to the test scene to begin testing it, it will crash if it tries to find any children, since it won't have any. The child instances come from the <code>.tscn</code> file that we'd normally deserialize when loading a scene, but since we just created an instance of a script, there won't be any children.</p><p>That's fine. We can just add a little functionality to our script (using a mixin) that simulates a fake node tree and returns fake nodes based on the paths it expects. This works surprisingly well, except we can't return interfaces, making mocking impossible. The reason we can't return interfaces is because Godot nodes don't actually have any corresponding interfaces ‚Äî they're just classes.</p><p>Since there‚Äôs no interfaces, we have to create an actual node for every child. And that gets really tedious really fast, resulting in a ton of test fixtures.</p><p>So, to get around this, I‚Äôve created <a href="https://github.com/chickensoft-games/GodotNodeInterfaces" target="_blank" rel="noopener noreferrer">GodotNodeInterfaces</a>, which generates interfaces and adapters for every type of Godot node. It also provides alternative methods for accessing child nodes as their adapted interface, and works with a fake scene tree system for testing.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/testing_abstractions-888f71e1739a5903bc8f5bb81a0f2b08.png"><img src="/assets/images/testing_abstractions-888f71e1739a5903bc8f5bb81a0f2b08.png" alt="Layers of Abstraction in Testing" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">Some things just can't be automated.</figcaption></figure><p>I haven't done extensive profiling with GodotNodeInterfaces, since I was getting hundreds of frames per second while using it. I imagine there‚Äôs a slight performance impact in cases where the compiler can‚Äôt inline everything.</p><p>Because the alternative child access functions GodotNodeInterfaces provides return wrapped versions of real Godot nodes, there‚Äôs an allocation overhead. Fortunately, the allocation overhead can be mitigated by storing node references at the time your node script is created, getting all the allocations out of the way at once.</p><p>If you‚Äôre still worried about performance, though, take it from one of my personal heroes, <a href="https://twitter.com/munificentbob" target="_blank" rel="noopener noreferrer">Bob</a>:</p><blockquote><p>My experience, though, is that it‚Äôs easier to make a fun game fast than it is to make a fast game fun. One compromise is to keep the code flexible until the design settles down and then tear out some of the abstraction later to improve your performance. ‚Äî <a href="https://gameprogrammingpatterns.com/architecture-performance-and-games.html" target="_blank" rel="noopener noreferrer">Architecture, Performance, and Games</a></p></blockquote><p>See? There‚Äôs always plenty of time to write bad code! Once your game becomes sickeningly clean, stable, and fun to play, you have my blessing to corrupt it for the sake of performance. After all, ‚Äúall magic comes at a price,‚Äù or something like that.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-testing-tips">üíÅ Testing Tips<a href="#-testing-tips" class="hash-link" aria-label="Direct link to üíÅ Testing Tips" title="Direct link to üíÅ Testing Tips">‚Äã</a></h3><p>If you haven't done much testing with C#, you'll probably want to familiarize yourself with the basics, <a href="https://www.codemag.com/Article/2305041/Using-Moq-A-Simple-Guide-to-Mocking-for-.NET" target="_blank" rel="noopener noreferrer">including mocking</a>.</p><p>In this last section, we'll demonstrate how the architecture we've outlined above allows us to test everything relatively easily.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="-understanding-visual-testing">üé® Understanding Visual Testing<a href="#-understanding-visual-testing" class="hash-link" aria-label="Direct link to üé® Understanding Visual Testing" title="Direct link to üé® Understanding Visual Testing">‚Äã</a></h4><p>To test visual components, we have to reason very carefully about them. As mentioned previously, there's two ways to instantiate a Godot node for testing.</p><ol><li><p>Instantiate the visual component's scene script directly. We avoid doing this in unit tests since it would pollute code coverage by executing more than one unit in a unit-test. For integration tests or when we're not measuring code coverage, instantiating scenes directly works easily enough.</p></li><li><p>Create a new instance of a scene script, without deserializing its scene. This breaks child relationships once added to a scene tree, since those children don't exist since we didn't deserialize a scene file. We can get around this by using a fake scene tree system, which is what GodotNodeInterfaces provides.</p></li></ol><p>We will always use approach <code>#2</code>.</p><p>Once we have an instance of a node to test, there's two ways to test it.</p><ol><li><p>We can add the node to the test scene tree, which allows it to manipulate the game engine environment and take up space in the world. For many nodes, we <strong>have</strong> to actually add them to the scene tree during testing to be able to verify their interactions with the engine.</p></li><li><p>Alternatively, we can just call methods on the node without adding them to the scene tree. This works if nothing in the methods manipulates the scene tree or other properties of the node that require it to be in the tree. For many nodes, we can get away with this approach, since it's a bit simpler.</p></li></ol><h4 class="anchor anchorWithStickyNavbar_LWe7" id="-setting-up-testing">üë∑ Setting Up Testing<a href="#-setting-up-testing" class="hash-link" aria-label="Direct link to üë∑ Setting Up Testing" title="Direct link to üë∑ Setting Up Testing">‚Äã</a></h4><p>We'll be using <a href="https://github.com/chickensoft-games/GoDotTest" target="_blank" rel="noopener noreferrer">GoDotTest</a> as our test runner. GoDotTest guarantees a few invariants for us that help us run tests deterministically.</p><ul><li>Tests are always executed one at a time, in the order they appear in the code for a particular test class.</li><li><code>Setup</code> and <code>Cleanup</code> methods can be called before and after each test, and <code>SetupAll</code> and <code>CleanupAll</code> methods can be called before and after running a test suite (i.e., a test class).</li><li>Tests are able to be placed on the test scene.</li><li>Tests can be run from the command-line, for CI/CD purposes.</li><li>Tests are never run in parallel.</li><li>Tests and their setup methods can be asynchronous, or not.</li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="-two-phase-initialization">üß¨ Two-Phase Initialization<a href="#-two-phase-initialization" class="hash-link" aria-label="Direct link to üß¨ Two-Phase Initialization" title="Direct link to üß¨ Two-Phase Initialization">‚Äã</a></h4><p>We frequently need to <strong>separate our script's initialization into two phases</strong>: one phase for <strong>creating the values</strong> that belong to that script, such as its dependencies, state machines, and bindings, and the second for <strong>using those dependencies or bindings</strong>. If we don't separate the initialization from the usage, we won't have a way to inject mock values during a unit test since the values would be created and immediately used afterwards.</p><p>In practice, here's what splitting our initialization into two-phases looks like.</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Meta</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments keyword" style="color:#ffcc99">typeof</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">(</span><span class="token attribute attribute-arguments type-expression class-name">IAutoNode</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token attribute attribute-arguments punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">partial</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">class</span><span class="token plain"> </span><span class="token class-name">InGameUI</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">:</span><span class="token plain"> </span><span class="token type-list class-name">Control</span><span class="token type-list punctuation" style="color:#6c6783">,</span><span class="token type-list"> </span><span class="token type-list class-name">IInGameUI</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">override</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">void</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">_Notification</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token class-name keyword" style="color:#ffcc99">int</span><span class="token plain"> what</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">this</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Notify</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">what</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token preprocessor property" style="color:#9a86fd">#</span><span class="token preprocessor property directive keyword" style="color:#ffcc99">region</span><span class="token preprocessor property" style="color:#9a86fd"> Dependencies</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token plain">Dependency</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name">IAppRepo</span><span class="token plain"> AppRepo </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token generic-method function" style="color:#9a86fd">DependOn</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">IAppRepo</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token preprocessor property" style="color:#9a86fd">#</span><span class="token preprocessor property directive keyword" style="color:#ffcc99">endregion</span><span class="token preprocessor property" style="color:#9a86fd"> Dependencies</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token preprocessor property" style="color:#9a86fd">#</span><span class="token preprocessor property directive keyword" style="color:#ffcc99">region</span><span class="token preprocessor property" style="color:#9a86fd"> Nodes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token plain">Node</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name">ILabel</span><span class="token plain"> CoinsLabel </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">get</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">set</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">default</span><span class="token operator" style="color:#e09142">!</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token preprocessor property" style="color:#9a86fd">#</span><span class="token preprocessor property directive keyword" style="color:#ffcc99">endregion</span><span class="token preprocessor property" style="color:#9a86fd"> Nodes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token preprocessor property" style="color:#9a86fd">#</span><span class="token preprocessor property directive keyword" style="color:#ffcc99">region</span><span class="token preprocessor property" style="color:#9a86fd"> State</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name">IInGameUILogic</span><span class="token plain"> InGameUILogic </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">get</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">set</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">default</span><span class="token operator" style="color:#e09142">!</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name">InGameUILogic</span><span class="token return-type class-name punctuation" style="color:#6c6783">.</span><span class="token return-type class-name">IBinding</span><span class="token plain"> InGameUIBinding </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">get</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">set</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">default</span><span class="token operator" style="color:#e09142">!</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token preprocessor property" style="color:#9a86fd">#</span><span class="token preprocessor property directive keyword" style="color:#ffcc99">endregion</span><span class="token preprocessor property" style="color:#9a86fd"> State</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">void</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">Setup</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    InGameUILogic </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">InGameUILogic</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token keyword" style="color:#ffcc99">this</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> AppRepo</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">void</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">OnResolved</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    InGameUIBinding </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> InGameUILogic</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Bind</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    InGameUIBinding</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">.</span><span class="token generic-method function" style="color:#9a86fd">Handle</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&lt;</span><span class="token generic-method generic class-name">InGameUILogic</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">Output</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">.</span><span class="token generic-method generic class-name">NumCoinsChanged</span><span class="token generic-method generic class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">output</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">SetCoinsLabel</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">          output</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">NumCoinsCollected</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"> output</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">NumCoinsAtStart</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    InGameUILogic</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Start</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Once again, we're looking at the <code>InGameUI</code> view that displays the number of coins the user has collected while in-game. Notice the separate methods, <code>Setup()</code> and <code>OnResolved()</code>. The first method creates the <code>InGameUILogic</code> state machine, while the second binds to the state machine's outputs and starts the state machine.</p><p>Since the script above uses <a href="https://github.com/chickensoft-games/AutoInject" target="_blank" rel="noopener noreferrer">AutoInject</a> to resolve dependencies, we can leverage a lesser-known feature of AutoInject to help with this initialization process. AutoInject normally calls the <code>OnResolved()</code> method on your script once all the providers it found for your script's dependencies indicate they've provided their values, but there's more to it than that.</p><p>If you have a <code>Setup()</code> method on your script, that method will be called after dependencies are resolved, but right before <code>OnResolved()</code> is called ‚Äî if, and only if ‚Äî your script's <code>IsTesting</code> property is set to false. The <code>IsTesting</code> property isn't shown, though ‚Äî it's tucked away in a generated file.</p><p>By utilizing two-phase initialization, we are able to test our game component easily within the scene tree.</p><p>I won't show full tests here, but you can check out the tests for the <a href="https://github.com/chickensoft-games/GameDemo/blob/main/test/src/player/PlayerTest.cs" target="_blank" rel="noopener noreferrer">Player</a> node. It takes advantage of the two-phase initialization by preventing the Player's <code>Setup()</code> method from ever being invoked when running in the actual test scene, ensuring our mocked values get injected instead.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="-faking-the-scene-tree">üå≤ Faking the Scene Tree<a href="#-faking-the-scene-tree" class="hash-link" aria-label="Direct link to üå≤ Faking the Scene Tree" title="Direct link to üå≤ Faking the Scene Tree">‚Äã</a></h4><p>Each scene should have only one script on its root node.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_S0QG"><p>If you find yourself needing to add a script to a non-root node in a Godot scene, don‚Äôt. Instead, save the node branch as its own scene before adding a script to it.</p><p>Likewise, if you you find yourself writing a Godot node script that manipulates its grandchildren, you may run into difficulty testing the script as a unit-test with a fake node tree. For best results, add a script to the child and ask it to manipulate its own children from your script. The general rule of thumb is "no script should manipulate nodes deeper than its children."</p></div></div><p>Ensuring each scene only has one script on its root node allows you to make use of the fake scene tree system provided by <a href="https://github.com/chickensoft-games/GodotNodeInterfaces" target="_blank" rel="noopener noreferrer">GodotNodeInterfaces</a> to easily test your scene. By referencing nodes as interfaces and automatically hooking them up with the <a href="https://github.com/chickensoft-games/AutoInject" target="_blank" rel="noopener noreferrer"><code>IAutoConnect</code></a> mixin, we can easily test our scene in isolation without spinning up the entire subtree.</p><p>In the example below, taken from the game demo's <a href="https://github.com/chickensoft-games/GameDemo/blob/main/test/src/coin/CoinTest.cs#L47-L50" target="_blank" rel="noopener noreferrer">unit tests for the spinning gold coins</a>, we setup our tests by creating mock versions of the values the coin needs and then call the <code>FakeNodeTree</code> to instruct our coin to use the mock objects for nodes at the provided paths instead of trying to connect to real children nodes.</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token attribute class-name">Setup</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token keyword" style="color:#ffcc99">public</span><span class="token plain"> </span><span class="token return-type class-name keyword" style="color:#ffcc99">void</span><span class="token plain"> </span><span class="token function" style="color:#9a86fd">Setup</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    _appRepo </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">Mock</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&lt;</span><span class="token constructor-invocation class-name">IAppRepo</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    _animPlayer </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">Mock</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&lt;</span><span class="token constructor-invocation class-name">IAnimationPlayer</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    _coinModel </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">Mock</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&lt;</span><span class="token constructor-invocation class-name">INode3D</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    _logic </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">Mock</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&lt;</span><span class="token constructor-invocation class-name">ICoinLogic</span><span class="token constructor-invocation class-name punctuation" style="color:#6c6783">&gt;</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    _binding </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> CoinLogic</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">CreateFakeBinding</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    _logic</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Setup</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">logic </span><span class="token operator" style="color:#e09142">=&gt;</span><span class="token plain"> logic</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Bind</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">Returns</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">_binding</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    _coin </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token keyword" style="color:#ffcc99">new</span><span class="token plain"> </span><span class="token constructor-invocation class-name">Coin</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      IsTesting </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ffcc99">true</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      AnimationPlayer </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> _animPlayer</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Object</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      CoinModel </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> _coinModel</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Object</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      CoinLogic </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> _logic</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Object</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      CoinBinding </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> _binding</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    _coin</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">FakeDependency</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token plain">_appRepo</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Object</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    _coin</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token function" style="color:#9a86fd">FakeNodeTree</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token keyword" style="color:#ffcc99">new</span><span class="token punctuation" style="color:#6c6783">(</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token string" style="color:#ffcc99">"%AnimationPlayer"</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> _animPlayer</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Object</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token punctuation" style="color:#6c6783">[</span><span class="token string" style="color:#ffcc99">"%CoinModel"</span><span class="token punctuation" style="color:#6c6783">]</span><span class="token plain"> </span><span class="token operator" style="color:#e09142">=</span><span class="token plain"> _coinModel</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">Object</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">)</span><span class="token punctuation" style="color:#6c6783">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="-mocking-dependencies-provided-with-autoinject">ü•∏ Mocking Dependencies Provided with AutoInject<a href="#-mocking-dependencies-provided-with-autoinject" class="hash-link" aria-label="Direct link to ü•∏ Mocking Dependencies Provided with AutoInject" title="Direct link to ü•∏ Mocking Dependencies Provided with AutoInject">‚Äã</a></h4><p>In the example above, we also used the <code>FakeDependency</code> method generated with AutoInject. Faking a dependency prevents the dependent node from searching the tree for providers ‚Äî&nbsp;which wouldn't be present in a test scenario where you're just testing a script by itself. Instead, the dependent node we're testing will just use the provided value when it looks up a dependency of that type, allowing us to easily mock dependencies.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-file-structure-and-feature-based-architecture">üóÇ File Structure and Feature-Based Architecture<a href="#-file-structure-and-feature-based-architecture" class="hash-link" aria-label="Direct link to üóÇ File Structure and Feature-Based Architecture" title="Direct link to üóÇ File Structure and Feature-Based Architecture">‚Äã</a></h2><p>Files should be organized in a way that benefits the artists and developers contributing to the codebase. Allow me to suggest feature-based organization here.</p><p>In feature-based organization, files are organized by feature, with any files that get shared between features in some sort of shared directory, typically called something like <code>common</code>.</p><p>In the game demo, we define features pretty simply. The player runs around collecting coins, jumping on mushrooms, and interacting with a physical environment. So, a mushroom is a feature, so is a coin, etc. You can define features however you want, but you probably want to check out the section "Thinking in Tokens" in Chapter 17 (page 482) of <em>Game Architecture and Design: A New Edition</em> by Rollings and Morris.</p><p>In feature-based architecture, you really want to avoid strongly coupling your features together. If you can keep them loosely coupled, you can add and remove them with ease.</p><p>Take a look at how the files are implemented for the Coin feature:</p><div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îú‚îÄ‚îÄ src</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îú‚îÄ‚îÄ coin</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îú‚îÄ‚îÄ Coin.cs</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îú‚îÄ‚îÄ Coin.tscn</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îú‚îÄ‚îÄ CollectorDetector.tscn</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îú‚îÄ‚îÄ audio</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îú‚îÄ‚îÄ coin_collected.mp3</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îî‚îÄ‚îÄ coin_collected.mp3.import</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îú‚îÄ‚îÄ state</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îú‚îÄ‚îÄ CoinLogic.Input.cs</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îú‚îÄ‚îÄ CoinLogic.Output.cs</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îú‚îÄ‚îÄ CoinLogic.State.cs</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îú‚îÄ‚îÄ CoinLogic.cs</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îú‚îÄ‚îÄ CoinLogic.g.puml</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îî‚îÄ‚îÄ states</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp;     ‚îú‚îÄ‚îÄ CoinLogic.State.Collecting.cs</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp;     ‚îî‚îÄ‚îÄ CoinLogic.State.Idle.cs</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îî‚îÄ‚îÄ visuals</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp;     ‚îú‚îÄ‚îÄ coin_model.glb</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp;     ‚îú‚îÄ‚îÄ coin_model.glb.import</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp;     ‚îú‚îÄ‚îÄ coin_normal.tres</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp;     ‚îú‚îÄ‚îÄ coin_roughness.tres</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp;     ‚îú‚îÄ‚îÄ coin_texture.tres</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp;     ‚îî‚îÄ‚îÄ teleport_3d.gdshader</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Everything the coin needs is located inside the <code>coin</code> folder. Even the states for the state machine are located in the <code>state/states</code> subfolder. All the other features are organized in the same way, too, making it easy for a developer to jump in and fix something, even if she hasn't been working on that feature. Artists can also quickly intuit where they might need to drop some updated visuals, too.</p><p>I often see people suggest to keep separate folders for each type of file, like <code>scripts</code>, <code>scenes</code>, <code>textures</code>, etc. My little brain finds this organizational pattern difficult since related files are split across multiple places and it makes it harder to remember to go and rename the corresponding files in top-level directories elsewhere whenever you decide to rename something. You also have to know how to identify all the related files, too, which becomes a memory exercise in and of itself.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-preventing-strong-coupling-in-features">ü™¢ Preventing Strong Coupling in Features<a href="#-preventing-strong-coupling-in-features" class="hash-link" aria-label="Direct link to ü™¢ Preventing Strong Coupling in Features" title="Direct link to ü™¢ Preventing Strong Coupling in Features">‚Äã</a></h3><p>To keep my features from being strongly coupled to each other, I made them interact with each other via interfaces. For example, the coin can be collected by anything that implements <code>ICoinCollector</code>. The coin doesn't care what it is, it just knows that it can be collected by anything that implements that interface. In the game, it's just the player.</p><p>To facilitate this, I simply created a folder in my <code>src</code> directory that contained interfaces used across features. I could have put these in a common directory, but I decided to have a <code>traits</code> directory for this sort of thing.</p><div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îú‚îÄ‚îÄ src</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îú‚îÄ‚îÄ traits</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îú‚îÄ‚îÄ ICoinCollector</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">cs</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îú‚îÄ‚îÄ IKillable</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">cs</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îÇ&nbsp;&nbsp; ‚îÇ&nbsp;&nbsp; ‚îî‚îÄ‚îÄ IPushEnabled</span><span class="token punctuation" style="color:#6c6783">.</span><span class="token plain">cs</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>No doubt, you can find further organizational patterns that improve on this. When you do, please pop into our Discord and share them with me ^-^.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-file-structure-for-tests">üèõ File Structure for Tests<a href="#-file-structure-for-tests" class="hash-link" aria-label="Direct link to üèõ File Structure for Tests" title="Direct link to üèõ File Structure for Tests">‚Äã</a></h3><p>The unit tests for everything in the game demo are 1:1 mirror of everything in the source directory that needs tests, with the added <code>Test</code> suffix added to each file.</p><div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token plain">‚îî‚îÄ‚îÄ test</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    ‚îî‚îÄ‚îÄ src</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        ‚îú‚îÄ‚îÄ coin</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        ‚îÇ&nbsp;&nbsp; ‚îú‚îÄ‚îÄ CoinTest.cs</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        ‚îÇ&nbsp;&nbsp; ‚îî‚îÄ‚îÄ state</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        ‚îÇ&nbsp;&nbsp;     ‚îú‚îÄ‚îÄ CoinLogicTest.cs</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        ‚îÇ&nbsp;&nbsp;     ‚îî‚îÄ‚îÄ states</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        ‚îÇ&nbsp;&nbsp;         ‚îú‚îÄ‚îÄ CoinLogic.State.CollectingTest.cs</span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">        ‚îÇ&nbsp;&nbsp;         ‚îî‚îÄ‚îÄ CoinLogic.State.IdleTest.cs</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-conclusion">ü•∞ Conclusion<a href="#-conclusion" class="hash-link" aria-label="Direct link to ü•∞ Conclusion" title="Direct link to ü•∞ Conclusion">‚Äã</a></h2><p>Thank you for reading my (excessively long) article on game architecture. There's no way I could dive into everything into as much detail as I wanted, so if you have questions, please feel free to reach out to me. If you find ways of working that are easier, better, and more enjoyable, please don't keep them to yourself. I'd love to assimilate your knowledge!</p><section style="margin-bottom:var(--ifm-leading)"><div class="inviteContainer_H3cR"><div class="discordServer_Be5H"><h3 class="discordInviteText_xFKC">You have been invited to join a server</h3><div class="discordInviteBody_jtVf"><div><img src="/img/chickensoft/chickensoft_logo.svg" class="serverImage_snrK"></div><div class="discordInviteDetails_UNwE"><h3 class="discordInviteName_OuUx">Chickensoft</h3><div class="discordInviteCounts_wTwU"><i class="discordInviteStatusIcon_ySkV discordInviteOnlineIcon_e0ks"></i><strong class="discordInviteCount_qEVM"><span id="discordNumOnline">#</span> <!-- -->Online</strong><i class="discordInviteStatusIcon_ySkV discordInviteOfflineIcon_R82S"></i><strong class="discordInviteCount_qEVM"><span id="discordNumMembers">#</span> <!-- -->Members</strong></div></div></div><div class="discordButtonContainer_oTIm"><a class="button button--primary button--lg discordInviteJoinButton_VJ9M" href="https://discord.gg/MjA6HUzzAE">Join</a></div></div></div></section>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Can Godot Deliver?]]></title>
            <link>https://chickensoft.games/blog/godot-delivers</link>
            <guid>https://chickensoft.games/blog/godot-delivers</guid>
            <pubDate>Thu, 14 Sep 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[While Unity continues to break the trust of its users, Godot is promising to be the free and open "game engine you've been waiting for." But can it deliver?]]></description>
            <content:encoded><![CDATA[<figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/header-b950556bacd588c8205d9b96ab054906.jpg"><img src="/assets/images/header-b950556bacd588c8205d9b96ab054906.jpg" alt="While Unity continues to break the trust of its users, Godot is promising to be the free and open 'game engine you've been waiting for.' But can it deliver?" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center"></figcaption></figure><p>The game engine company Unity has once again gained notoriety for offending its users. This time, they've announced <a href="https://www.forbes.com/sites/paultassi/2023/09/13/the-entire-gaming-industry-unites-against-unitys-baffling-pricing-change/?sh=3f403fa5679b" target="_blank" rel="noopener noreferrer">a $0.20 per install fee</a> for games that surpass $200,000 in revenue. Of course, how they determine what constitutes a valid install is <a href="https://twitter.com/unity/status/1701689241456021607" target="_blank" rel="noopener noreferrer">not something they're willing to share</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-loved-by-all">üíî Loved by all?<a href="#-loved-by-all" class="hash-link" aria-label="Direct link to üíî Loved by all?" title="Direct link to üíî Loved by all?">‚Äã</a></h2><p>Unity's recent cash grab is not all that unexpected, either: this is just the latest transgression in a string of unpopular decisions. In case you missed it, here's what the world's most-popular game engine has been up to:</p><ul><li><a href="https://www.marketwatch.com/story/unity-software-loses-5-billion-in-market-cap-after-apples-changes-lead-to-self-inflicted-wound-11652291876" target="_blank" rel="noopener noreferrer">Lost 5 billion in market cap</a> after Apple's ad tracking changes.</li><li><a href="https://www.techspot.com/news/95143-unity-laying-off-hundreds-employees-shares-continue-slide.html" target="_blank" rel="noopener noreferrer">Laid off a chunk of its workforce</a>.</li><li>Tried to <a href="https://forum.unity.com/threads/unity-answers-shutdown-canceled.1293360/" target="_blank" rel="noopener noreferrer">remove its own forums</a>, but ended up backpedaling after enraging the community.</li><li>Merged with a <a href="https://news.ycombinator.com/item?id=32081051" target="_blank" rel="noopener noreferrer">known adware company</a>.</li><li>Canceled their own in-house game project, Gigaya, citing that it <a href="https://forum.unity.com/threads/introducing-gigaya-unitys-upcoming-sample-game.1257135/page-2#post-8278305" target="_blank" rel="noopener noreferrer">"would have required a thorough cleanup and optimizations in its current stage."</a>.</li><li>Charging $0.20 per installation after $200,000 in revenue.</li></ul><p>And that's just what's happened in the last year and a half.</p><p>Personally, I have no idea why the company that dominates the vast majority of the game engine market wants to play the fiddle while they burn it all down. I guess we can't all have normal pastimes.</p><p>Some have speculated that the Unity leadership is playing 4D chess and will roll-back the changes, leaving in place royalties or higher prices which seem more palatable by comparison. Or maybe they only care about enterprise clients now, or want everyone to litter their games with ads. Either way, no one knows for sure. And honestly, it wouldn't matter ‚Äî once the fence of trust is broken, developers will start meandering over into greener pastures.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-whats-godot-been-doing">üò¥ What's Godot Been Doing?<a href="#-whats-godot-been-doing" class="hash-link" aria-label="Direct link to üò¥ What's Godot Been Doing?" title="Direct link to üò¥ What's Godot Been Doing?">‚Äã</a></h2><p>Godot, due to its size and popularity over the years, has become somewhat of the de-facto choice for a game engine outside Unity or Unreal. It doesn't matter though, because many studios haven't ever given it a serious thought. You'd be hard pressed to find a developer job using Godot.</p><p>I suspect that is changing. While everyone has been chugging along using proprietary tools, the Godot team have been hard at work. They've released a major new version, Godot 4, which drastically improved the codebase, paving the way for development of the missing features needed to make AAA games. Now that the foundation has been laid, it's just a matter of time before the work gets done.</p><p>C# support has improved drastically, too. Godot 4 shifted the runtime from Mono to the .NET SDK, opening the door for tighter integration and faster development cycles. In fact, the latest releases of Godot 4 are testing Android platform support for C#, with iOS and Web support planned to follow when <a href="https://github.com/godotengine/godot/issues/70796#issuecomment-1618006609" target="_blank" rel="noopener noreferrer">.NET ships the correct infrastructure needed</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-godots-promise">üíñ Godot's Promise<a href="#-godots-promise" class="hash-link" aria-label="Direct link to üíñ Godot's Promise" title="Direct link to üíñ Godot's Promise">‚Äã</a></h2><p>Godot promises to be the "free, open source engine that you've been waiting for." And if you look at what the creator, Juan Linietsky, has been saying over the years, you'll find an idealistic promise of a game engine that's <a href="https://x.com/reduzio/status/1701712402687934957?s=20" target="_blank" rel="noopener noreferrer">fully free and open</a> ‚Äî a world where you don't have to worry who's going to try and take your game's profits from you.</p><p>He's also promising <a href="https://x.com/reduzio/status/1701872429016949135?s=20" target="_blank" rel="noopener noreferrer">to take care of Unity users who defect to Godot</a> while <a href="https://x.com/reduzio/status/1701700832830587116?s=20" target="_blank" rel="noopener noreferrer">continuing improvements to the 3D system</a>.</p><p>Meanwhile, when I reached out, the executive director of the Godot team told me they are hoping to hire someone full-time to work just on the Godot C# integration. The only thing holding them back is <a href="https://fund.godotengine.org/" target="_blank" rel="noopener noreferrer">funding</a>.</p><p>I can't speak for anyone else, but I believe in the Godot team. With C# alone, they've fixed countless integration bugs, including at least one or two that I've personally filed. And that's just the part of the engine that I've been paying attention to. Godot has had contributions from over 2,000 people, and the team manages to triage countless fixes and pull requests on a shoestring budget compared to the competition.</p><p>The Godot team continually performs feats that are nothing short of magical at a fraction of the expense.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-challenge-accepted">‚úÖ Challenge Accepted<a href="#-challenge-accepted" class="hash-link" aria-label="Direct link to ‚úÖ Challenge Accepted" title="Direct link to ‚úÖ Challenge Accepted">‚Äã</a></h2><p>Whether or not Unity intended to, I think they've awoken a sleeping giant. Godot almost seemed ambivalent to Unity before ‚Äî but now they're promising to take care of the users that Unity has left behind.</p><p>So, if I was a big studio with millions of dollars to toss around, I'd put it into Godot. Free software can't be stopped.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[GDScript vs C# in Godot 4]]></title>
            <link>https://chickensoft.games/blog/gdscript-vs-csharp</link>
            <guid>https://chickensoft.games/blog/gdscript-vs-csharp</guid>
            <pubDate>Wed, 26 Apr 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Deep-dive into the advantages and disadvantages of GDScript and C#, as well as tips on how to choose one ‚Äî or use them both!]]></description>
            <content:encoded><![CDATA[<figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/header-21c88cc459ceb56203dc02f13843129f.jpg"><img src="/assets/images/header-21c88cc459ceb56203dc02f13843129f.jpg" alt="Godot allows you to use two incredible languages to build games, right out of the box. But how do you know which one to use?" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center"></figcaption></figure><p>Almost every day, someone asks "Should I use GDScript or C# to make my Godot game?"</p><p>A lot of amazing advice has been given out on the Godot Reddit, the forums, various Discord servers, and just about anywhere people are talking about Godot ‚Äî so let's write it up, once and for all!</p><p>In this article, we‚Äôll take a deep dive into the advantages and disadvantages of GDScript and C# in Godot 4.x, as well as tips on how to choose one ‚Äî or use them both!</p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p>In case you don't have time to read all this, here's why you might pick GDScript:</p><ul><li>‚úÖ You're new to coding or you're a casual hobbyist.</li><li>‚úÖ You're an expert who doesn't mind dynamic types.</li><li>‚úÖ You want seamless engine integration and native extension support.</li><li>‚úÖ Performance isn't a major concern (it usually isn't for game scripts).</li><li>‚úÖ No fighting with tooling. Write your code inside the engine itself!</li></ul><p>On the other hand, here's some reasons why you might choose C#:</p><ul><li>‚úÖ You have experience with managed languages such as Java, Go, or Dart.</li><li>‚úÖ You already know C#, perhaps from using Unity previously or writing enterprise applications.</li><li>‚úÖ You prefer static typing.</li><li>‚úÖ You prefer curly braces over whitespace-delimited syntax.</li><li>‚úÖ You need access to mature developer tooling: linting, custom analyzers, and source generation.</li><li>‚úÖ You want additional performance without resorting to a systems language like C++.</li><li>‚úÖ You need access to the vast library of .NET packages.</li><li>‚ö†Ô∏è You don't need to export to the web ‚Äî&nbsp;yet. You can <a href="https://github.com/godotengine/godot/issues/70796#issuecomment-2558573995" target="_blank" rel="noopener noreferrer">track the progress here</a>.</li><li>‚ùå You don't need to integrate with any GDExtensions. Currently, Godot does not generate C# bindings for GDExtensions, meaning you cannot call a GDExtension from C#. You can work around this by calling into GDScript from C# if you are willing to incur a slight performance penalty.</li></ul></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-gdscript">ü§ñ GDScript<a href="#-gdscript" class="hash-link" aria-label="Direct link to ü§ñ GDScript" title="Direct link to ü§ñ GDScript">‚Äã</a></h2><p>As you likely know, Godot provides its own high-level, dynamically typed programming language called GDScript. While GDScript often gets compared to Python, I find the syntax to be even friendlier, with <a href="https://godotengine.org/article/gdscript-progress-report-feature-complete-40/#typed-arrays" target="_blank" rel="noopener noreferrer">optional type hints</a> that are also reminiscent of TypeScript or Swift.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/gdscript-831b1ed3fbd1b289c088668ab59af206.jpg"><img src="/assets/images/gdscript-831b1ed3fbd1b289c088668ab59af206.jpg" alt="GDScript code inside the Godot Engine editor." style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">The Godot Engine will provide this script as a starting point for all <code>CharacterBody3D</code> nodes.</figcaption></figure><p>For quick prototypes and experiments, I will often just throw together a quick script using GDScript (or hack away on someone else's) until I get what I want. In almost every case, it is simply easier and faster to use GDScript.</p><p>If you happen to be handy with C++ or Rust, you can create a <a href="https://docs.godotengine.org/en/stable/tutorials/scripting/gdextension/what_is_gdextension.html" target="_blank" rel="noopener noreferrer">GDExtension</a> for just about anything you can't do in GDScript (or that would be too slow to do in GDScript). Godot will generate bindings for extensions, allowing you to call your extension code from GDScript with no additional work. Pretty magical!</p><p>To sweeten the deal further, <a href="https://gdscript.com/articles/godot-4-gdscript/" target="_blank" rel="noopener noreferrer">Godot 4 has drastically improved GDScript</a>: it's <a href="https://godotengine.org/article/gdscript-progress-report-typed-instructions/#how-faster-is-it" target="_blank" rel="noopener noreferrer">considerably faster</a>, can <a href="https://godotengine.org/article/dev-snapshot-godot-4-0-beta-6/" target="_blank" rel="noopener noreferrer">handle circular/cyclic dependencies</a>, and supports <a href="https://docs.godotengine.org/en/stable/tutorials/scripting/gdscript/gdscript_basics.html#lambda-functions" target="_blank" rel="noopener noreferrer">lambda functions</a>. On top of all that, just about every tutorial or video you watch regarding Godot uses GDScript.</p><p>If you're not sold yet, there probably isn't anything else I can say to get you to use it.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="Ô∏è-gdscript-pros">‚òÄÔ∏è GDScript Pros<a href="#Ô∏è-gdscript-pros" class="hash-link" aria-label="Direct link to ‚òÄÔ∏è GDScript Pros" title="Direct link to ‚òÄÔ∏è GDScript Pros">‚Äã</a></h3><ul><li>üöÄ Incredibly easy to learn and well supported.</li><li>ü§ù Many large, friendly communities that provide hands-on support.</li><li>üìö Tons of tutorials and videos.</li><li>ü•≥ Supports every platform Godot supports.</li><li>‚ú® Always up-to-date with the latest Godot features.</li><li>üîå Perfect native extension integration.</li><li>ü™õ Tooling support ‚Äî you can write GDScript directly inside the Godot Engine's editor, or use the <a href="https://marketplace.visualstudio.com/items?itemName=geequlim.godot-tools" target="_blank" rel="noopener noreferrer">official VSCode extension</a>. You can even get a <a href="https://marketplace.visualstudio.com/items?itemName=Razoric.gdscript-toolkit-formatter" target="_blank" rel="noopener noreferrer">VSCode extension for formatting</a> your GDScript files, too.</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-gdscript-cons">üåß GDScript Cons<a href="#-gdscript-cons" class="hash-link" aria-label="Direct link to üåß GDScript Cons" title="Direct link to üåß GDScript Cons">‚Äã</a></h3><p>So what's the catch with GDScript? Not much, really, but I'll list a few considerations to be aware of here:</p><ul><li>üí® Not necessarily as performant as C#. There is a performance penalty when calling into the Godot engine from C# due to marshalling, but C# itself tends to execute considerably faster than GDScript.</li><li>üîí Any code written in GDScript is completely specific to the Godot engine. This is usually not a problem for game scripts (since they are not very portable by nature), but it's worth mentioning.</li><li>‚¨úÔ∏è Whitespace-delimited syntax. If you can't stand Python or just strongly prefer curly braces, no amount of GDScript will ever soothe your soul. Likewise, if you love whitespace-delimited syntax, you'll feel right at home.</li><li>‚ö°Ô∏è Not statically typed. While you can specify type hints to help with error-checking, they are optional at best. For some, this is an advantage. For others, the lack of enforced static typing presents a headache.</li></ul><p>For the majority of game developers I've spoken to, none of those are typically deal-breakers. GDScript has a cult following for a reason: it's <em>really</em>, <em>really</em> great. Now that you know its strengths and weaknesses, you can feel confident choosing it.</p><p>Still not convinced? Let's talk about C#.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="Ô∏è‚É£-c">#Ô∏è‚É£ C<!-- -->#<a href="#Ô∏è‚É£-c" class="hash-link" aria-label="Direct link to Ô∏è‚É£-c" title="Direct link to Ô∏è‚É£-c">‚Äã</a></h2><p>While not as popular as GDScript, <a href="https://godotengine.org/article/whats-new-in-csharp-for-godot-4-0/" target="_blank" rel="noopener noreferrer">C# support in Godot has come a long ways</a>. Out of the approximately 5,000 surveyed users, <a href="https://docs.google.com/forms/d/e/1FAIpQLSe-OIpxXqou9cDnPXEAjxzpICbf8_YZB3jUizdECXRydtB8cA/viewanalytics" target="_blank" rel="noopener noreferrer">only about 13%</a> said they were using C# to build Godot games.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/csharp-29bbb32ea6cfd0a1c9e629f6f9b12c93.jpg"><img src="/assets/images/csharp-29bbb32ea6cfd0a1c9e629f6f9b12c93.jpg" alt="C# script for a Godot node." style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">C# code for an editor tool that helps visualize a <code>RayCast3D</code>.</figcaption></figure><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-c-cons">üåß C# Cons<a href="#-c-cons" class="hash-link" aria-label="Direct link to üåß C# Cons" title="Direct link to üåß C# Cons">‚Äã</a></h3><p>Before we get too far, it's worth reiterating a couple of points:</p><ul><li>‚ùå Godot can't export C# games for iOS or web.</li><li>‚ùå You cannot call GDExtensions directly from C#.</li></ul><p>If either of those are an immediate must-have for your project, you should <strong>not</strong> use C#. Unless you are optimistic and believe those shortcomings will be addressed by the time your project requires them, you should use GDScript or a third party language integration instead.</p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p>C# is incredibly powerful and allows you to tap into the massive .NET ecosystem of packages and tools, but it comes at a cost. If you're up for an adventure, don't mind a challenge, and can live with the drawbacks mentioned above, C# might be an excellent fit for your project.</p></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="Ô∏è-c-pros">‚òÄÔ∏è C# Pros<a href="#Ô∏è-c-pros" class="hash-link" aria-label="Direct link to ‚òÄÔ∏è C# Pros" title="Direct link to ‚òÄÔ∏è C# Pros">‚Äã</a></h3><p>Because C# is a general-purpose programming language that first appeared 23 years ago, it is hard to fully extol its virtues. In the interest of time, I'll list a few positives within the context of Godot game development:</p><ul><li>üöÄ C# is a well-established language with the full weight of Microsoft behind it. If you've ever used Java or Dart, you'll also feel right at home.</li><li>üõ† Incredible tooling support. Want to create a custom analyzer with an automatic fix? A source generator? A template project? You can do that.</li><li>üßë‚Äçüíª Choice of IDE's: You can use <a href="https://visualstudio.microsoft.com/" target="_blank" rel="noopener noreferrer">Visual Studio</a>, <a href="https://www.jetbrains.com/rider/" target="_blank" rel="noopener noreferrer">JetBrains Rider</a>, or <a href="https://code.visualstudio.com/" target="_blank" rel="noopener noreferrer">Visual Studio Code</a>.</li><li>üì¶ The entire .NET package ecosystem. If there's a nuget package that solves your problem, you can probably use it.</li><li>ü§ù There's an extremely helpful C# channel in the official <a href="https://discord.gg/4JBkykG" target="_blank" rel="noopener noreferrer">Godot Discord</a>.</li><li>üê§ We have a Chickensoft Discord server dedicated to supporting the Godot C# community. If you run into questions or just want to talk, feel free to stop by and say hello!</li></ul><div class="inviteContainer_H3cR"><div class="discordServer_Be5H"><h3 class="discordInviteText_xFKC">You have been invited to join a server</h3><div class="discordInviteBody_jtVf"><div><img src="/img/chickensoft/chickensoft_logo.svg" class="serverImage_snrK"></div><div class="discordInviteDetails_UNwE"><h3 class="discordInviteName_OuUx">Chickensoft</h3><div class="discordInviteCounts_wTwU"><i class="discordInviteStatusIcon_ySkV discordInviteOnlineIcon_e0ks"></i><strong class="discordInviteCount_qEVM"><span id="discordNumOnline">#</span> <!-- -->Online</strong><i class="discordInviteStatusIcon_ySkV discordInviteOfflineIcon_R82S"></i><strong class="discordInviteCount_qEVM"><span id="discordNumMembers">#</span> <!-- -->Members</strong></div></div></div><div class="discordButtonContainer_oTIm"><a class="button button--primary button--lg discordInviteJoinButton_VJ9M" href="https://discord.gg/MjA6HUzzAE">Join</a></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="-free-stuff">üéü Free Stuff<a href="#-free-stuff" class="hash-link" aria-label="Direct link to üéü Free Stuff" title="Direct link to üéü Free Stuff">‚Äã</a></h3><p>While there aren't many Godot addons created with C#, <a href="/">Chickensoft</a> provides a number of well-tested packages to help you get started. Each project began as a piece of my own personal game project before being broken into separate packages to share with the community. Each project is fully tested and has 100% code coverage (for my own peace of mind).</p><p>Want to quickly create a Godot game with basic CI/CD and unit testing already setup? Use our <a href="https://github.com/chickensoft-games/GodotGame" target="_blank" rel="noopener noreferrer"><code>dotnet new</code> template</a> for creating a game. We have <a href="https://github.com/chickensoft-games/GodotPackage" target="_blank" rel="noopener noreferrer">a package template</a> for creating nuget packages for use with Godot, too.</p><p>Need to inject code into lifecycle methods in your scripts automatically? We have a <a href="https://github.com/chickensoft-games/SuperNodes" target="_blank" rel="noopener noreferrer">source generator</a> for that. How about automatic, <a href="https://github.com/chickensoft-games/AutoInject" target="_blank" rel="noopener noreferrer">node-based dependency injection</a>?</p><p>We even have our own command line tool, <a href="https://github.com/chickensoft-games/GodotEnv" target="_blank" rel="noopener noreferrer">GodotEnv</a>, that will automatically manage Godot addons for your project based on an <code>addons.json</code> file and let you symlink addons locally while they're in development. No more git submodules for addons!</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/packages-3c75742dc012cf97c2da1cc1da8d9f4c.jpg"><img src="/assets/images/packages-3c75742dc012cf97c2da1cc1da8d9f4c.jpg" alt="Chickensoft's package offerings" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center">Chickensoft's package offerings as of April 2023.</figcaption></figure><p>If you'd like to use Godot from a GitHub actions workflow, you can use <a href="https://github.com/chickensoft-games/setup-godot" target="_blank" rel="noopener noreferrer">setup-godot</a> to run Godot directly on a macOS, Windows, or Linux runner.</p><p>We also have packages for <a href="https://github.com/chickensoft-games/GoDotTest" target="_blank" rel="noopener noreferrer">running tests inside Godot</a>, creating basic <a href="https://github.com/chickensoft-games/GoDotNet" target="_blank" rel="noopener noreferrer">state machines</a> in C#, <a href="https://github.com/chickensoft-games/GoDotLog" target="_blank" rel="noopener noreferrer">logging</a>, and a handful of other things.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_S0QG"><p>Chickensoft is an open source organization ‚Äî all of our offerings are <em>free</em>. We welcome contributions and feedback from the community!</p></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-afraid-of-commitment">üòÖ Afraid of Commitment?<a href="#-afraid-of-commitment" class="hash-link" aria-label="Direct link to üòÖ Afraid of Commitment?" title="Direct link to üòÖ Afraid of Commitment?">‚Äã</a></h2><p>Since you can mix and match C# and GDScript in the same project, you only have to choose which language you want to use for the <em>majority</em> of your project.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_S0QG"><p>Since most of the existing Godot addons are written with GDScript, it's unlikely you'd need to call into C# from GDScript if you picked GDScript for your scripting language.</p></div></div><p>If you happened to have chosen C# as your primary scripting language, you may need to be able to call into GDScript occasionally from C# since it is impractical to rewrite every addon you might need in C#. While this probably isn't as efficient as keeping everything in one language, it can really help in a pinch.</p><p>So, if you hate committing to a single language, why not have both<sup id="fnref-1-1b5a27"><a href="#fn-1-1b5a27" class="footnote-ref">1</a></sup>? The Godot documentation discusses <a href="https://docs.godotengine.org/en/stable/tutorials/scripting/cross_language_scripting.html" target="_blank" rel="noopener noreferrer">how to bridge between C# and GDScript</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-wrapping-up">üéÅ Wrapping Up<a href="#-wrapping-up" class="hash-link" aria-label="Direct link to üéÅ Wrapping Up" title="Direct link to üéÅ Wrapping Up">‚Äã</a></h2><p>Even though Chickensoft is dedicated to the C# Godot community, C# isn't necessarily the correct choice for every Godot game. For most people, GDScript is probably the best choice.</p><p>I like to think that if you need (or want) to use C#, you already know that deep down inside.</p><p>Ultimately, if you decide to embark on an adventure and use C# for your next Godot game, we're happy to lend a hand and cheer you on in the <a href="https://discord.gg/gSjaPgMmYW" target="_blank" rel="noopener noreferrer">Chickensoft Discord</a>. Either way, we wish you the best of luck and we hope to hear from you! üòÄ</p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p>If you're interested in what I'm up to, you are more than welcome to <a href="https://mastodon.online/@jolexxa" target="_blank" rel="noopener noreferrer">follow me on Mastodon</a> or <a href="https://discordapp.com/users/jolexxa#4292" target="_blank" rel="noopener noreferrer">reach out to me on Discord</a>.</p></div></div><div class="footnotes"><hr><ol><li id="fn-1-1b5a27">Practically speaking, there are very good reasons to keep the majority of your codebase in a single language: consistency, ease of refactoring, lowering the barrier to ramp up contributors, etc.<a href="#fnref-1-1b5a27" class="footnote-backref">‚Ü©</a></li></ol></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Godot and C#: A Viable Unity Alternative]]></title>
            <link>https://chickensoft.games/blog/godot-unity-alternative</link>
            <guid>https://chickensoft.games/blog/godot-unity-alternative</guid>
            <pubDate>Sun, 27 Nov 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Godot had a really good year. So did C# support.]]></description>
            <content:encoded><![CDATA[<figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/header-82df242b0df47d6257b66b16f0b15d65.jpg"><img src="/assets/images/header-82df242b0df47d6257b66b16f0b15d65.jpg" alt="SatiRogue by @lewiji on GitHub" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center"><a href="https://github.com/lewiji/SatiRogue" target="_blank" rel="noopener noreferrer">SatiRogue</a> by <a href="https://twitter.com/TetrisMcKenna" target="_blank" rel="noopener noreferrer">@TetrisMcKenna</a></figcaption></figure><p>Godot is a viable alternative to Unity ‚Äî not just for early adopters, but for game developers and artists across the entire skill spectrum.</p><p>The engine provides a significantly better development experience (via text-based resources) and a snappy, responsive user interface. We'll spend the rest of the blog defending that statement and addressing common concerns about Godot.</p><p>Over the last few months, I've heard dozens of questions from interested users about Godot, the C# support it provides, and the future of the engine. It's important to note that I am in no way officially affiliated with the Godot Engine organization. I have, however, spoken with some of the core engine developers and contributors and <strong>I'd like to put the arguments against Godot and C# to rest, once and for all.</strong></p><p>There's a lot to cover, and it's all good news ‚Äî so let's dive in!</p><blockquote><p>Unrelated: this blog has officially moved away from Medium!<sup id="fnref-1-61f224"><a href="#fn-1-61f224" class="footnote-ref">1</a></sup></p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-godots-big-year">üéá Godot's Big Year<a href="#-godots-big-year" class="hash-link" aria-label="Direct link to üéá Godot's Big Year" title="Direct link to üéá Godot's Big Year">‚Äã</a></h2><p>If you haven't been watching too closely, you might have missed some of the news! Godot 4 is now in beta, and it's shipping some impressive new features:</p><ul><li>Vulkan renderer</li><li>Signed distance, field-based global illumination (SDFGI) for large open worlds</li><li>GPU lightmapping</li><li>Custom sky shaders</li><li>Automatically generated LOD (level-of-detail) meshes</li><li>.NET 6 support</li><li>Revamped shader language</li><li>Circular dependencies support for GDScript</li><li>...<a href="https://godotengine.org/article/dev-snapshot-godot-4-0-beta-1#rendering" target="_blank" rel="noopener noreferrer">and countless other changes</a></li></ul><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/aniela-b284b7bef2218e4dc87b4c0cafedafac.jpg"><img src="/assets/images/aniela-b284b7bef2218e4dc87b4c0cafedafac.jpg" alt="Aniela ‚Äî a lighting study made in Godot by @cybereality on Twitter" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center"><a href="https://cybereality.itch.io/aniela" target="_blank" rel="noopener noreferrer">Aniela ‚Äî a lighting study made in Godot</a> by <a href="https://twitter.com/cybereality" target="_blank" rel="noopener noreferrer">@cybereality</a> demonstrating Godot 4's new SDFGI features.</figcaption></figure><p>To top it all off, C# support has been completely overhauled by migrating away from mono and integrating support for .NET 6 directly. We'll come back to that in a bit.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="overwhelming-support">Overwhelming Support<a href="#overwhelming-support" class="hash-link" aria-label="Direct link to Overwhelming Support" title="Direct link to Overwhelming Support">‚Äã</a></h3><p>Godot continues to receive an overwhelming amount of support from the community. The creator of Godot, <a href="https://twitter.com/reduzio" target="_blank" rel="noopener noreferrer">Juan Linietsky</a>, describes how Godot suffers from the best possible problem:</p><blockquote><p>we have too many people who are doing things really really efficiently and really well."<sup id="fnref-2-61f224"><a href="#fn-2-61f224" class="footnote-ref">2</a></sup></p></blockquote><p>Essentially, the sheer number of contributors (1,800+ on GitHub) almost guarantees that any specific feature is being worked on at any given moment.</p><p>On <a href="https://www.patreon.com/godotengine/posts" target="_blank" rel="noopener noreferrer">Patreon</a>, Godot now receives over <strong><code>$15,000 USD</code></strong> of donations <em>per month</em>. That's an increase of <code>$2,000 USD</code> per month since I last checked on it in the summer.</p><p>The Godot subreddit, <a href="https://www.reddit.com/r/godot/" target="_blank" rel="noopener noreferrer">r/godot</a>, now has over <strong>101,000 members</strong>, an <strong>increase of at least 5,000 users</strong> since the summer (probably in large part to <a href="/blog/indie-game-godot#unrest-in-the-indie-c-game-dev-world">Unity's missteps</a>). The official <a href="https://discord.gg/4JBkykG" target="_blank" rel="noopener noreferrer">Godot Discord</a> now has over <strong>50,000 users</strong>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="Ô∏è-addressing-your-concerns">üíÅ‚Äç‚ôÄÔ∏è Addressing Your Concerns<a href="#Ô∏è-addressing-your-concerns" class="hash-link" aria-label="Direct link to üíÅ‚Äç‚ôÄÔ∏è Addressing Your Concerns" title="Direct link to üíÅ‚Äç‚ôÄÔ∏è Addressing Your Concerns">‚Äã</a></h2><p>On Reddit (and occasionally elsewhere), interested users will ask if C# is "ready" or a "first-class" citizen in Godot. The answer is simple: <strong>yes</strong>.</p><p>If you don't believe me, read on. We'll respond to each of the common arguments against Godot and its support for C#.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="wheres-the-asset-store">Where's the asset store?<a href="#wheres-the-asset-store" class="hash-link" aria-label="Direct link to Where's the asset store?" title="Direct link to Where's the asset store?">‚Äã</a></h3><p>When I tell people that Godot is a viable Unity alternative, this is usually the first counterargument I hear, and for good reason. Godot doesn't have a monetization system for assets...<em>yet</em>.</p><p>Of course, Godot does have an official <a href="https://godotengine.org/asset-library/asset" target="_blank" rel="noopener noreferrer">Asset Library</a> with over 1,500 assets, but they're all free. üôÅ</p><p>Most of us would normally be thrilled about free assets, but when you're an artist or developer who relies on selling your assets to support yourself, giving away your products is a no-go. It's only fair that you should be able to make a living doing what you're good at.</p><p>Monetization, as <a href="https://www.reddit.com/r/godot/comments/o5pam9/comment/h2o1u5w/?utm_source=share&amp;utm_medium=web2x&amp;context=3" target="_blank" rel="noopener noreferrer">someone pointed out on Reddit</a>, requires a lot of bureaucratic effort. Collecting payments and being responsible for payment handling is a gigantic chore.</p><p>In 2021, the founder of Godot ‚Äî&nbsp;Juan Linietsky ‚Äî&nbsp;<a href="https://twitter.com/reduzio/status/1395380550983196673" target="_blank" rel="noopener noreferrer">confirmed a paid asset marketplace was on the way</a>.</p><p>The Godot team recently announced the formation of the non-profit <a href="https://godotengine.org/article/godots-graduation-godot-moves-to-a-new-foundation" target="_blank" rel="noopener noreferrer">Godot Foundation</a>, citing a paid asset marketplace as one of the primary motivations:</p><blockquote><p>As Godot keeps growing, so do our needs. Godot's size merits the flexibility of having its own organization and the opportunity to explore broader funding sources.</p><p>Examples of this are crowdfunding campaigns (like Blender or Krita do), the highly requested ability for users to sell assets on an asset library (and have a share going to the Godot Foundation), selling merchandise, and other types of funding.</p></blockquote><p>While that doesn't solve the problem today, you can probably get pretty far with the 1,500+ free assets that already exist.</p><p>For some users, having access to a multitude of assets is non-negotiable. Those users will not use Godot until its asset library is a thriving, paid marketplace. For most developers, however, I believe the boost in developer productivity Godot provides over Unity <em>et al.</em> more than makes up for any reduction in assets.</p><p>For example: if you're creating your own art, or purchasing art and models from artists, you're probably writing all your own custom code anyways. Why not do it in Godot? The editor won't <a href="https://www.youtube.com/watch?v=7PpkAhVZMDc" target="_blank" rel="noopener noreferrer">hang for 2 minutes straight</a> whenever it decides to scan your assets, unlike in other engines, <em>cough cough</em>.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-about-c">What About C#?<a href="#what-about-c" class="hash-link" aria-label="Direct link to What About C#?" title="Direct link to What About C#?">‚Äã</a></h3><p>People often ask "is C# a first class citizen?" when looking into Godot and C#. I believe the question became popular when Godot first introduced C#. Like all new features, C# support was initially incomplete and poorly documented, but solidified over time. These days, the <a href="https://docs.godotengine.org/en/stable/index.html" target="_blank" rel="noopener noreferrer">Godot Docs</a> provide almost every code example in both C# and GDScript, and C# support in Godot 3 (LTS) is incredibly robust.</p><p>If you are looking for C# API docs, <a href="https://twitter.com/pauljoannon" target="_blank" rel="noopener noreferrer">paulloz</a> maintains a <a href="https://paulloz.github.io/godot-csharp-api/" target="_blank" rel="noopener noreferrer">C# version of the Godot API docs</a>.</p><p>Just to reiterate, <strong>Godot supports two first-party programming languages: GDScript and C#</strong>. All other language bindings are unofficial, third party projects.</p><p>When asked if the new <code>GDExtension</code> support in Godot would replace the need for first-party C# support, <a href="https://github.com/neikeq" target="_blank" rel="noopener noreferrer">neikeq</a> (one of the core Godot C# contributors), explained that C# support would continue to be built-in because it would be difficult (if even possible) <a href="https://discord.com/channels/862108653488963604/1039016978528088074/1039212956438773843" target="_blank" rel="noopener noreferrer">to load more than one .NET assembly through a native extension</a>.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="future-of-c-support">Future of C# Support<a href="#future-of-c-support" class="hash-link" aria-label="Direct link to Future of C# Support" title="Direct link to Future of C# Support">‚Äã</a></h4><p>I asked <a href="https://github.com/neikeq" target="_blank" rel="noopener noreferrer">neikeq</a> a couple of questions about C# in Godot via private message in Discord, and with their permission I am posting some of the interview here (lightly edited for clarity):</p><blockquote><p><strong>me</strong>: A lot of people are on the fence about Godot because they're not sure C# support is planned long term, or maybe they've been burned by the lack of documentation in the past. What do you want them to know?</p><p><strong>neikeq</strong>:
They shouldn't worry about C# support in the long term. There was a lot of concern about that this year because initially C# wasn't included with the Godot 4 alpha releases, but now it's already there and soon it will be unified as a single version of Godot.</p><p>One of the most important factors for the future of C# support is that starting with Godot 4, it's much easier to maintain. There is still room for improvement (for example, changing/adding a type for marshalling takes a bit more work right now). But the amount of work we took off our shoulders is huge. That's time that can be spent on other parts like addressing issues.</p><p>Hopefully there will be less confusion about some things as well. Previous marshalling errors that would be printed at runtime are now compiler errors.</p><p><strong>me</strong>: Is the maintenance effort easier because of the new source generators, or other changes that were made?</p><p><strong>neikeq</strong>: We no longer build the Mono runtime ourselves, which was especially painful on platforms like wasm, iOS and even Android sometimes. As well as having to maintain build code for some of those platforms and ensuring that it works (like AOT for iOS). That's all offloaded to MSBuild with the official .NET releases. Granted we don't have mobile and wasm support yet but when the time comes, it will be easier to implement. The new hosting + pure C# + source generators is also easier to maintain than our previous approach with the Mono embedding APIs (although marshalling needs to be improved in this regard as I mentioned).</p><p><strong>me</strong>: Any closing words to those who were worried C# support was going away?</p><p><strong>neikeq</strong>: <strong><em>We don't have any intention of removing C# support because a lot of people in the industry communicate to us that C# support is a big factor in adopting the engine.</em></strong></p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="a-bigger-c-ecosystem">A Bigger C# Ecosystem<a href="#a-bigger-c-ecosystem" class="hash-link" aria-label="Direct link to A Bigger C# Ecosystem" title="Direct link to A Bigger C# Ecosystem">‚Äã</a></h3><p>Still skeptical about taking the plunge on an open source game engine? Allow me to sweeten the deal by showcasing some awesome C# projects.</p><p>Our feature image for this article is from <a href="https://github.com/lewiji/SatiRogue" target="_blank" rel="noopener noreferrer">SatiRogue</a>, a "turn-based dungeon-crawler rogue-like RPG, made with Godot 3.x C# + RelEcs" by <a href="https://twitter.com/TetrisMcKenna" target="_blank" rel="noopener noreferrer">TetrisMcKenna</a>. The source code is freely available on GitHub under the MIT license.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/satirogue-712f8ec1d11969977f45d3915d5b2d2f.jpg"><img src="/assets/images/satirogue-712f8ec1d11969977f45d3915d5b2d2f.jpg" alt="SatiRogue" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center"></figcaption></figure><section style="margin-bottom:var(--ifm-leading)"><a href="https://github.com/lewiji/SatiRogue" class="ghCard_SADR"><header class="header_EL4w"><div class="ghLogo_Dvj7"><svg width="24" height="24" viewBox="0 0 19 19" version="1.1" id="svg3" xmlns="http://www.w3.org/2000/svg"><path fill="currentColor" id="path2" d="m 9.46,0.502 c -4.93,0 -8.928,3.997 -8.928,8.929 0,3.944 2.558,7.291 6.106,8.472 0.447,0.081 0.609,-0.194 0.609,-0.431 C 7.247,17.26 7.24,16.699 7.235,15.954 4.752,16.493 4.228,14.757 4.228,14.757 3.822,13.725 3.236,13.451 3.236,13.451 c -0.81,-0.554 0.062,-0.543 0.062,-0.543 0.896,0.063 1.367,0.92 1.367,0.92 0.797,1.365 2.09,0.971 2.599,0.742 C 7.345,13.993 7.576,13.599 7.831,13.376 5.848,13.151 3.764,12.385 3.764,8.964 3.764,7.989 4.112,7.192 4.683,6.568 4.591,6.342 4.284,5.434 4.77,4.205 c 0,0 0.75,-0.24 2.455,0.915 0.712,-0.198 1.477,-0.297 2.236,-0.3 0.758,0.003 1.522,0.102 2.235,0.3 1.704,-1.155 2.453,-0.915 2.453,-0.915 0.487,1.229 0.181,2.137 0.089,2.363 0.572,0.624 0.918,1.421 0.918,2.396 0,3.43 -2.088,4.184 -4.077,4.405 0.32,0.276 0.606,0.821 0.606,1.654 0,1.194 -0.011,2.157 -0.011,2.449 0,0.239 0.161,0.517 0.614,0.43 3.545,-1.183 6.101,-4.528 6.101,-8.471 0,-4.932 -3.998,-8.929 -8.929,-8.929 z"></path></svg></div><div class="headerTitle__RVn"><h2>lewiji<!-- -->/</h2><h1>SatiRogue</h1></div><div class="headerLogo_j3df"><img width="auto" height="auto"></div></header><summary class="description_nH2g"></summary><footer class="footer_DLm1"><div class="footerItem_ahyA"><svg width="21" height="24" role="img" version="1.1" viewBox="0 0 14 16"><path fill="currentColor" fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">0</span><span class="label_phh9">Stars</span></div></div><div class="footerItem_ahyA"><svg width="15" height="24" role="img" version="1.1" viewBox="0 0 10 16"><path fill="currentColor" fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">0</span><span class="label_phh9">Forks</span></div></div><div class="footerItemLanguages_BkNk"><span class="langColor_kTSd" style="background-color:gray"></span><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X"></span></div></div></footer></a></section><p>Here's a few other awesome projects written in C#:</p><section style="margin-bottom:var(--ifm-leading)"><a href="https://github.com/Carnagion/GDSerializer" class="ghCard_SADR"><header class="header_EL4w"><div class="ghLogo_Dvj7"><svg width="24" height="24" viewBox="0 0 19 19" version="1.1" id="svg3" xmlns="http://www.w3.org/2000/svg"><path fill="currentColor" id="path2" d="m 9.46,0.502 c -4.93,0 -8.928,3.997 -8.928,8.929 0,3.944 2.558,7.291 6.106,8.472 0.447,0.081 0.609,-0.194 0.609,-0.431 C 7.247,17.26 7.24,16.699 7.235,15.954 4.752,16.493 4.228,14.757 4.228,14.757 3.822,13.725 3.236,13.451 3.236,13.451 c -0.81,-0.554 0.062,-0.543 0.062,-0.543 0.896,0.063 1.367,0.92 1.367,0.92 0.797,1.365 2.09,0.971 2.599,0.742 C 7.345,13.993 7.576,13.599 7.831,13.376 5.848,13.151 3.764,12.385 3.764,8.964 3.764,7.989 4.112,7.192 4.683,6.568 4.591,6.342 4.284,5.434 4.77,4.205 c 0,0 0.75,-0.24 2.455,0.915 0.712,-0.198 1.477,-0.297 2.236,-0.3 0.758,0.003 1.522,0.102 2.235,0.3 1.704,-1.155 2.453,-0.915 2.453,-0.915 0.487,1.229 0.181,2.137 0.089,2.363 0.572,0.624 0.918,1.421 0.918,2.396 0,3.43 -2.088,4.184 -4.077,4.405 0.32,0.276 0.606,0.821 0.606,1.654 0,1.194 -0.011,2.157 -0.011,2.449 0,0.239 0.161,0.517 0.614,0.43 3.545,-1.183 6.101,-4.528 6.101,-8.471 0,-4.932 -3.998,-8.929 -8.929,-8.929 z"></path></svg></div><div class="headerTitle__RVn"><h2>Carnagion<!-- -->/</h2><h1>GDSerializer</h1></div><div class="headerLogo_j3df"><img width="auto" height="auto"></div></header><summary class="description_nH2g"></summary><footer class="footer_DLm1"><div class="footerItem_ahyA"><svg width="21" height="24" role="img" version="1.1" viewBox="0 0 14 16"><path fill="currentColor" fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">0</span><span class="label_phh9">Stars</span></div></div><div class="footerItem_ahyA"><svg width="15" height="24" role="img" version="1.1" viewBox="0 0 10 16"><path fill="currentColor" fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">0</span><span class="label_phh9">Forks</span></div></div><div class="footerItemLanguages_BkNk"><span class="langColor_kTSd" style="background-color:gray"></span><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X"></span></div></div></footer></a></section><section style="margin-bottom:var(--ifm-leading)"><a href="https://github.com/derkork/godot-test-driver" class="ghCard_SADR"><header class="header_EL4w"><div class="ghLogo_Dvj7"><svg width="24" height="24" viewBox="0 0 19 19" version="1.1" id="svg3" xmlns="http://www.w3.org/2000/svg"><path fill="currentColor" id="path2" d="m 9.46,0.502 c -4.93,0 -8.928,3.997 -8.928,8.929 0,3.944 2.558,7.291 6.106,8.472 0.447,0.081 0.609,-0.194 0.609,-0.431 C 7.247,17.26 7.24,16.699 7.235,15.954 4.752,16.493 4.228,14.757 4.228,14.757 3.822,13.725 3.236,13.451 3.236,13.451 c -0.81,-0.554 0.062,-0.543 0.062,-0.543 0.896,0.063 1.367,0.92 1.367,0.92 0.797,1.365 2.09,0.971 2.599,0.742 C 7.345,13.993 7.576,13.599 7.831,13.376 5.848,13.151 3.764,12.385 3.764,8.964 3.764,7.989 4.112,7.192 4.683,6.568 4.591,6.342 4.284,5.434 4.77,4.205 c 0,0 0.75,-0.24 2.455,0.915 0.712,-0.198 1.477,-0.297 2.236,-0.3 0.758,0.003 1.522,0.102 2.235,0.3 1.704,-1.155 2.453,-0.915 2.453,-0.915 0.487,1.229 0.181,2.137 0.089,2.363 0.572,0.624 0.918,1.421 0.918,2.396 0,3.43 -2.088,4.184 -4.077,4.405 0.32,0.276 0.606,0.821 0.606,1.654 0,1.194 -0.011,2.157 -0.011,2.449 0,0.239 0.161,0.517 0.614,0.43 3.545,-1.183 6.101,-4.528 6.101,-8.471 0,-4.932 -3.998,-8.929 -8.929,-8.929 z"></path></svg></div><div class="headerTitle__RVn"><h2>derkork<!-- -->/</h2><h1>godot-test-driver</h1></div><div class="headerLogo_j3df"><img width="auto" height="auto"></div></header><summary class="description_nH2g"></summary><footer class="footer_DLm1"><div class="footerItem_ahyA"><svg width="21" height="24" role="img" version="1.1" viewBox="0 0 14 16"><path fill="currentColor" fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">0</span><span class="label_phh9">Stars</span></div></div><div class="footerItem_ahyA"><svg width="15" height="24" role="img" version="1.1" viewBox="0 0 10 16"><path fill="currentColor" fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">0</span><span class="label_phh9">Forks</span></div></div><div class="footerItemLanguages_BkNk"><span class="langColor_kTSd" style="background-color:gray"></span><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X"></span></div></div></footer></a></section><section style="margin-bottom:var(--ifm-leading)"><a href="https://github.com/Byteron/RelEcsGodot" class="ghCard_SADR"><header class="header_EL4w"><div class="ghLogo_Dvj7"><svg width="24" height="24" viewBox="0 0 19 19" version="1.1" id="svg3" xmlns="http://www.w3.org/2000/svg"><path fill="currentColor" id="path2" d="m 9.46,0.502 c -4.93,0 -8.928,3.997 -8.928,8.929 0,3.944 2.558,7.291 6.106,8.472 0.447,0.081 0.609,-0.194 0.609,-0.431 C 7.247,17.26 7.24,16.699 7.235,15.954 4.752,16.493 4.228,14.757 4.228,14.757 3.822,13.725 3.236,13.451 3.236,13.451 c -0.81,-0.554 0.062,-0.543 0.062,-0.543 0.896,0.063 1.367,0.92 1.367,0.92 0.797,1.365 2.09,0.971 2.599,0.742 C 7.345,13.993 7.576,13.599 7.831,13.376 5.848,13.151 3.764,12.385 3.764,8.964 3.764,7.989 4.112,7.192 4.683,6.568 4.591,6.342 4.284,5.434 4.77,4.205 c 0,0 0.75,-0.24 2.455,0.915 0.712,-0.198 1.477,-0.297 2.236,-0.3 0.758,0.003 1.522,0.102 2.235,0.3 1.704,-1.155 2.453,-0.915 2.453,-0.915 0.487,1.229 0.181,2.137 0.089,2.363 0.572,0.624 0.918,1.421 0.918,2.396 0,3.43 -2.088,4.184 -4.077,4.405 0.32,0.276 0.606,0.821 0.606,1.654 0,1.194 -0.011,2.157 -0.011,2.449 0,0.239 0.161,0.517 0.614,0.43 3.545,-1.183 6.101,-4.528 6.101,-8.471 0,-4.932 -3.998,-8.929 -8.929,-8.929 z"></path></svg></div><div class="headerTitle__RVn"><h2>Byteron<!-- -->/</h2><h1>RelEcsGodot</h1></div><div class="headerLogo_j3df"><img width="auto" height="auto"></div></header><summary class="description_nH2g"></summary><footer class="footer_DLm1"><div class="footerItem_ahyA"><svg width="21" height="24" role="img" version="1.1" viewBox="0 0 14 16"><path fill="currentColor" fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">0</span><span class="label_phh9">Stars</span></div></div><div class="footerItem_ahyA"><svg width="15" height="24" role="img" version="1.1" viewBox="0 0 10 16"><path fill="currentColor" fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">0</span><span class="label_phh9">Forks</span></div></div><div class="footerItemLanguages_BkNk"><span class="langColor_kTSd" style="background-color:gray"></span><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X"></span></div></div></footer></a></section><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-free-stuff-from-chickensoft">üê§ Free Stuff from Chickensoft<a href="#-free-stuff-from-chickensoft" class="hash-link" aria-label="Direct link to üê§ Free Stuff from Chickensoft" title="Direct link to üê§ Free Stuff from Chickensoft">‚Äã</a></h2><p>Chickensoft had a good first year: what originally started as a C#-focused fan club for Godot has blossomed into a small community of enthusiastic package authors and game developers. Our community members have helped answer technical questions about Godot and C#, shared a number of open source packages, and filed multiple bug reports on the Godot engine (some of which have already been fixed!).</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ready-for-godot-4">Ready for Godot 4<a href="#ready-for-godot-4" class="hash-link" aria-label="Direct link to Ready for Godot 4" title="Direct link to Ready for Godot 4">‚Äã</a></h3><p>I'm pleased to announce that <strong>all of the Chickensoft packages have been officially updated for Godot 4!</strong></p><p>By adding a few nuget <code>&lt;PackageReference&gt;</code> tags to your <code>.csproj</code> file, you can get <a href="https://github.com/chickensoft-games/go_dot_dep" target="_blank" rel="noopener noreferrer">node-based dependency provisioning</a>, <a href="https://github.com/chickensoft-games/go_dot_log" target="_blank" rel="noopener noreferrer">logging</a>, <a href="https://github.com/chickensoft-games/go_dot_test" target="_blank" rel="noopener noreferrer">automated testing</a>, and <a href="https://github.com/chickensoft-games/go_dot_net" target="_blank" rel="noopener noreferrer">state machines</a> up and running with Godot 4, for free!</p><blockquote><p>All of the Chickensoft packages were dogfooded, meaning I built them because I was trying to solve the same problems every time I created a new game project. I never did finish a game, but at least I have some tools. Maybe next time...</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="announcing-godotenv">Announcing GodotEnv<a href="#announcing-godotenv" class="hash-link" aria-label="Direct link to Announcing GodotEnv" title="Direct link to Announcing GodotEnv">‚Äã</a></h3><p><a href="https://github.com/chickensoft-games/GodotEnv" target="_blank" rel="noopener noreferrer">GodotEnv</a> is a command line tool to help manage Godot addons and quickly create new Godot projects from a template.</p><figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/img/chickensoft/godot_env.png"><img src="/img/chickensoft/godot_env.png" alt="GodotEnv CLI" style="width:200px"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center"></figcaption></figure><section style="margin-bottom:var(--ifm-leading)"><a href="https://github.com/chickensoft-games/GodotEnv" class="ghCard_SADR"><header class="header_EL4w"><div class="ghLogo_Dvj7"><svg width="24" height="24" viewBox="0 0 19 19" version="1.1" id="svg3" xmlns="http://www.w3.org/2000/svg"><path fill="currentColor" id="path2" d="m 9.46,0.502 c -4.93,0 -8.928,3.997 -8.928,8.929 0,3.944 2.558,7.291 6.106,8.472 0.447,0.081 0.609,-0.194 0.609,-0.431 C 7.247,17.26 7.24,16.699 7.235,15.954 4.752,16.493 4.228,14.757 4.228,14.757 3.822,13.725 3.236,13.451 3.236,13.451 c -0.81,-0.554 0.062,-0.543 0.062,-0.543 0.896,0.063 1.367,0.92 1.367,0.92 0.797,1.365 2.09,0.971 2.599,0.742 C 7.345,13.993 7.576,13.599 7.831,13.376 5.848,13.151 3.764,12.385 3.764,8.964 3.764,7.989 4.112,7.192 4.683,6.568 4.591,6.342 4.284,5.434 4.77,4.205 c 0,0 0.75,-0.24 2.455,0.915 0.712,-0.198 1.477,-0.297 2.236,-0.3 0.758,0.003 1.522,0.102 2.235,0.3 1.704,-1.155 2.453,-0.915 2.453,-0.915 0.487,1.229 0.181,2.137 0.089,2.363 0.572,0.624 0.918,1.421 0.918,2.396 0,3.43 -2.088,4.184 -4.077,4.405 0.32,0.276 0.606,0.821 0.606,1.654 0,1.194 -0.011,2.157 -0.011,2.449 0,0.239 0.161,0.517 0.614,0.43 3.545,-1.183 6.101,-4.528 6.101,-8.471 0,-4.932 -3.998,-8.929 -8.929,-8.929 z"></path></svg></div><div class="headerTitle__RVn"><h2>chickensoft-games<!-- -->/</h2><h1>GodotEnv</h1></div><div class="headerLogo_j3df"><img src="/img/chickensoft/godot_env.png" width="auto" height="auto"></div></header><summary class="description_nH2g">Manage Godot versions and addons from the command line on Windows, macOS, and Linux.</summary><footer class="footer_DLm1"><div class="footerItem_ahyA"><svg width="21" height="24" role="img" version="1.1" viewBox="0 0 14 16"><path fill="currentColor" fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">378</span><span class="label_phh9">Stars</span></div></div><div class="footerItem_ahyA"><svg width="15" height="24" role="img" version="1.1" viewBox="0 0 10 16"><path fill="currentColor" fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">20</span><span class="label_phh9">Forks</span></div></div><div class="footerItemLanguages_BkNk"><span class="langColor_kTSd" style="background-color:#178600"></span><div class="symbolAndLabel_ZGFn"><span class="symbol_q0_X">C#</span></div></div></footer></a></section><p>While learning Godot, I kept running into the same few headaches over and over. When trying to make my code reusable across game projects, I realized there was no easy way to keep my addons up to date while I was still developing them. Likewise, whenever I created a new sandbox project, I had to copy a dozen or so files into the new project every time.</p><p>GodotEnv's addon management system allows you to declare dependencies in their own file (to prevent versioning headaches with git submodules), while template generation enables you to quickly create new projects without having to copy over all the files you need each time.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="addon-management-simplified">Addon Management, Simplified<a href="#addon-management-simplified" class="hash-link" aria-label="Direct link to Addon Management, Simplified" title="Direct link to Addon Management, Simplified">‚Äã</a></h4><p>Godot addons are simply git repositories with an <code>addons/your_addon_name</code> folder inside them. The contents of that folder (scenes, scripts, art assets, etc) will be copied to a project folder's <code>addons/your_addon_name</code> when a user installs your addon. Because addons are a flat folder structure, people often think to use git submodules for addons in their project repositories. I initially tried git submodules and found it was too difficult to keep everything up-to-date across all of my projects that were using the addons.</p><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p>When using C# with Godot, you have two mechanisms for reusing code: addons and nuget packages.</p><p>Importing nuget packages is as simple as adding them to your Godot project's <code>.csproj</code> file. Unfortunately, you can't really import scenes or other assets from nuget packages. They're only good for reusing code.</p><p>Addons, on the other hand, allow you to reuse <em>anything</em>.</p></div></div><p>If git submodules also sound too painful to you, GodotEnv allows you to declare what addons your project needs in an <code>addons.json</code> file so it can install them for you.</p><p>GodotEnv also lets you install addons by copying or symlinking to local folders.</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token string-property property" style="color:#9a86fd">"path"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"addons"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token string-property property" style="color:#9a86fd">"cache"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">".addons"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token string-property property" style="color:#9a86fd">"addons"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token string-property property" style="color:#9a86fd">"godot_dialogue_manager"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token string-property property" style="color:#9a86fd">"url"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"https://github.com/nathanhoad/godot_dialogue_manager"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token string-property property" style="color:#9a86fd">"source"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"remote"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token string-property property" style="color:#9a86fd">"checkout"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"main"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token string-property property" style="color:#9a86fd">"subfolder"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"addons/dialogue_manager"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token string-property property" style="color:#9a86fd">"my_local_addon_repo"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token string-property property" style="color:#9a86fd">"url"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"../my_addons/my_local_addon_repo"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token string-property property" style="color:#9a86fd">"source"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"local"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token string-property property" style="color:#9a86fd">"my_symlinked_addon"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#6c6783">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token string-property property" style="color:#9a86fd">"url"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"/drive/path/to/addon"</span><span class="token punctuation" style="color:#6c6783">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">      </span><span class="token string-property property" style="color:#9a86fd">"source"</span><span class="token operator" style="color:#e09142">:</span><span class="token plain"> </span><span class="token string" style="color:#ffcc99">"symlink"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">    </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain">  </span><span class="token punctuation" style="color:#6c6783">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9a86fd"><span class="token plain"></span><span class="token punctuation" style="color:#6c6783">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then, all you have to do is run the following:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-background-color:#2a2734;--prism-color:#9a86fd"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9a86fd"><span class="token plain">godotenv addons </span><span class="token function" style="color:#9a86fd">install</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="-conclusion">üé¨ Conclusion<a href="#-conclusion" class="hash-link" aria-label="Direct link to üé¨ Conclusion" title="Direct link to üé¨ Conclusion">‚Äã</a></h2><p>The Godot ecosystem provides an <a href="https://godotengine.org/asset-library/asset" target="_blank" rel="noopener noreferrer">asset library</a>, <a href="https://godotwildjam.com" target="_blank" rel="noopener noreferrer">monthly game jams</a>, and numerous <a href="https://godotengine.org/community/user-groups" target="_blank" rel="noopener noreferrer">developer communities</a>. If you're using C# with Godot, you can use just about anything on <a href="https://www.nuget.org" target="_blank" rel="noopener noreferrer">nuget</a> in your project, unlocking the entire C# ecosystem <em>in addition to everything Godot has to offer</em>. Whether you're still planning your project or putting the finishing touches on it, there's an entire ecosystem in place to support you. Godot apps can be released on every major platform, and multiple companies can provide support for developers who wish to publish their games <a href="https://godotengine.org/article/godot-consoles-all-you-need-know" target="_blank" rel="noopener noreferrer">on consoles</a>.</p><p>Making Godot games with C# is an incredible experience, and it's only getting better. If you're looking to start (or continue) your game development journey, you are more than welcome to be a part of our open source community here at Chickensoft.</p><blockquote><p>If you're already making games with Godot and C# and want your project featured in a blog, let's get in touch!</p></blockquote><div class="inviteContainer_H3cR"><div class="discordServer_Be5H"><h3 class="discordInviteText_xFKC">You have been invited to join a server</h3><div class="discordInviteBody_jtVf"><div><img src="/img/chickensoft/chickensoft_logo.svg" class="serverImage_snrK"></div><div class="discordInviteDetails_UNwE"><h3 class="discordInviteName_OuUx">Chickensoft</h3><div class="discordInviteCounts_wTwU"><i class="discordInviteStatusIcon_ySkV discordInviteOnlineIcon_e0ks"></i><strong class="discordInviteCount_qEVM"><span id="discordNumOnline">#</span> <!-- -->Online</strong><i class="discordInviteStatusIcon_ySkV discordInviteOfflineIcon_R82S"></i><strong class="discordInviteCount_qEVM"><span id="discordNumMembers">#</span> <!-- -->Members</strong></div></div></div><div class="discordButtonContainer_oTIm"><a class="button button--primary button--lg discordInviteJoinButton_VJ9M" href="https://discord.gg/MjA6HUzzAE">Join</a></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="footnotes">Footnotes<a href="#footnotes" class="hash-link" aria-label="Direct link to Footnotes" title="Direct link to Footnotes">‚Äã</a></h3><div class="footnotes"><hr><ol><li id="fn-1-61f224">Hosting the blog on a website instead of on Medium allows me to integrate custom widgets: it's a big win all around. If you like this website, <a href="https://github.com/chickensoft-games/chickensoft_site" target="_blank" rel="noopener noreferrer">feel free to fork it</a>. Besides, hacker news readers (who have been the most engaged audience so far) tend to dislike Medium because of the reading limit. If you're reading this from hacker news (or anywhere else), welcome!<a href="#fnref-1-61f224" class="footnote-backref">‚Ü©</a></li><li id="fn-2-61f224">Tune into around 00:48:00 of <a href="https://uk-podcasts.co.uk/podcast/building-the-open-metaverse/the-role-of-open-source-game-engines-godot-and-o3d" target="_blank" rel="noopener noreferrer">The Role of Open Source Game Engines: Godot and O3DE</a> on the Podcast <a href="https://cesium.com/open-metaverse-podcast/" target="_blank" rel="noopener noreferrer">Building the Open Metaverse</a><a href="#fnref-2-61f224" class="footnote-backref">‚Ü©</a></li></ol></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[It‚Äôs time to make that indie C# game in Godot.]]></title>
            <link>https://chickensoft.games/blog/indie-game-godot</link>
            <guid>https://chickensoft.games/blog/indie-game-godot</guid>
            <pubDate>Sun, 03 Jul 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Wondering if you should take the plunge and use Godot with C#? Read this!]]></description>
            <content:encoded><![CDATA[<figure style="margin:0px 0px var(--ifm-leading);text-align:center"><a href="/assets/images/header-f612967710a6cfcd3e020547b589dd68.jpg"><img src="/assets/images/header-f612967710a6cfcd3e020547b589dd68.jpg" alt="Godot's Third Person Shooter Demo" style="width:100%"></a><figcaption style="font-size:0.8rem;font-style:italic;text-align:center"><a href="https://github.com/godotengine/tps-demo" target="_blank" rel="noopener noreferrer">Third Person Shooter Demo</a> by the <a href="https://godotengine.org" target="_blank" rel="noopener noreferrer">Godot Engine</a></figcaption></figure><p>You've always dreamed of making that C# game, but engines have always made it too difficult ‚Äî until now.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="unrest-in-the-indie-c-game-dev-world">Unrest in the indie C# game dev world<a href="#unrest-in-the-indie-c-game-dev-world" class="hash-link" aria-label="Direct link to Unrest in the indie C# game dev world" title="Direct link to Unrest in the indie C# game dev world">‚Äã</a></h2><p>For some time, C# has been a popular choice for game developers, originally gaining popularity with Microsoft‚Äôs XNA framework before being further popularized by tools like Monogame, Unity, and Godot.</p><p>Unity, often considered the de facto engine of choice for C# game development, has been in the news a lot lately for <a href="https://www.techspot.com/news/95143-unity-laying-off-hundreds-employees-shares-continue-slide.html" target="_blank" rel="noopener noreferrer">laying off a chunk of its workforce</a>, <a href="https://forum.unity.com/threads/unity-answers-shutdown-canceled.1293360/" target="_blank" rel="noopener noreferrer">threatening to remove its forums</a>, <a href="https://www.marketwatch.com/story/unity-software-loses-5-billion-in-market-cap-after-apples-changes-lead-to-self-inflicted-wound-11652291876" target="_blank" rel="noopener noreferrer">shedding $5 billion in market cap</a>, and <a href="https://news.ycombinator.com/item?id=32081051" target="_blank" rel="noopener noreferrer">merging with a known adware company</a>, IronSource. <a href="https://www.reddit.com/r/Unity3D/comments/vp1kv7/unity_employees_mad_and_stressed_out_amidst/" target="_blank" rel="noopener noreferrer">Reddit comments</a> are full of loyal Unity users starting to question if Unity has forgotten them, with comments ranging from "maybe I should learn Unreal‚Ä¶" to "this is why you don‚Äôt go public."</p><p>Just to be clear, I don‚Äôt take pleasure in being critical of Unity, and I think it‚Äôs a shame all those Unity employees are losing their jobs. At first glance, Unity is so laughably ahead of Godot in sheer number of features supported that it seems comical to compare the two. One is an industry behemoth and the world‚Äôs most popular game engine, while the other is a free, 30 megabyte program developed by passionate developers in their free time.</p><p>Unity can <em>technically</em> do much more than Godot, at least on paper. In practice, Unity requires 3rd party tools for tweens, timers, and networking, all of which Godot includes out-of-the-box. Still, I‚Äôd argue that <em>it doesn‚Äôt actually matter</em> for the vast majority of us indie game developers. The rest of this blog only exists to convince you of that argument.</p><p>Do you want to make the world‚Äôs best-looking game with the latest, buggy technologies, or do you want to <em>actually have fun</em> making games? If you said yes to the last part of that question, I‚Äôd like to invite you to try <a href="https://godotengine.org/" target="_blank" rel="noopener noreferrer">Godot</a>. If you‚Äôve already tried Godot a while back and gave up, I‚Äôd like to ask you to give Godot another chance. It might be better now than you realize.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="unity-isnt-fun-anymore">Unity isn‚Äôt fun anymore<a href="#unity-isnt-fun-anymore" class="hash-link" aria-label="Direct link to Unity isn‚Äôt fun anymore" title="Direct link to Unity isn‚Äôt fun anymore">‚Äã</a></h2><p>It‚Äôs no secret that <a href="https://www.youtube.com/watch?v=7PpkAhVZMDc" target="_blank" rel="noopener noreferrer">Unity is painful to use</a>: it‚Äôs slow to open, and it often pauses to re-scan the entire project while you‚Äôre trying to work. If you‚Äôre trying to use source control with a few other people, you have to work even harder to get everything to play nice with Unity‚Äôs unique file formats. By modern standards, Unity development can feel a bit backwards at times.</p><p>When you open Godot, it opens almost instantaneously. The UI is just the right size, and all of the controls are easily accessible in a few simple panes you can rearrange to your liking.</p><p>In Godot, everything is composed of nodes. No prefabs, game components, or other abstractions to learn. Just nodes. A scene is just a tree of nodes, saved as a plain text file in a familiar configuration format that you can easily read in a text editor. Need to quickly edit a scene to fix a reference to a file that was renamed or moved outside of Godot? Just open it up in your code editor and fix the path. When you switch back to the Godot editor, it will reload the project before you can blink. There‚Äôs no difficulty with source control, either: everything just works because everything‚Äôs text.</p><p>Godot also gives you full control of your <code>.csproj</code> file, allowing you to setup dependencies and configure MSBuild as much as you want. Want to use code generators? You can do that. Custom Roslyn analyzers? Go for it. Your own nuget packages? Check.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="its-actually-fun-to-use-godot">It's actually fun to use Godot<a href="#its-actually-fun-to-use-godot" class="hash-link" aria-label="Direct link to It's actually fun to use Godot" title="Direct link to It's actually fun to use Godot">‚Äã</a></h2><p>Godot doesn‚Äôt fight you when you‚Äôre building scenes. Making a scene feels a lot like creating a class using <a href="https://en.wikipedia.org/wiki/Object_composition" target="_blank" rel="noopener noreferrer">composition</a>, and scenes can even <a href="https://github.com/godotengine/godot-docs/issues/5529" target="_blank" rel="noopener noreferrer">inherit</a> from other scenes (using another scene as the the root node of a scene allows you to inherit from it and override its properties in the editor and in code), allowing you to express patterns you‚Äôre intimately familiar with from object-oriented programming.</p><p>Wasn‚Äôt "having fun" the whole point of making a game in C#, anyways? Using a managed language was supposed to make creating games easier, not harder. <em>Don‚Äôt worry about all the bits and bytes, C# will take care of it for you.</em> Sadly, we lost that along the way when for-profit game engine companies decided to prioritize the monetization of their tools over the happiness of their users. It isn‚Äôt that way with Godot: making C# games is fun again.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="but-what-about-unitys-asset-store">But what about Unity's asset store?<a href="#but-what-about-unitys-asset-store" class="hash-link" aria-label="Direct link to But what about Unity's asset store?" title="Direct link to But what about Unity's asset store?">‚Äã</a></h2><p>"Alright, I want to switch to Godot," you say, "but I need those high quality paid assets from the Unity Asset Store since I‚Äôm not an artist/musician/expert coder/etc."</p><p>Unfortunately, the paid asset store is the biggest sacrifice you‚Äôll have to make. While it can‚Äôt always compare to Unity‚Äôs paid offerings, the <a href="https://godotengine.org/asset-library/asset" target="_blank" rel="noopener noreferrer">Godot Asset Library</a> offers 1300+ creations <em>for free</em>. Have you seen <a href="https://github.com/godotengine/awesome-godot" target="_blank" rel="noopener noreferrer">all of the awesome stuff</a> people have made in Godot?</p><blockquote><p>It‚Äôs possible that <a href="https://github.com/godotengine/godot-asset-library/issues/126" target="_blank" rel="noopener noreferrer">donations or payments will be coming to the Godot Asset Library</a>, allowing creators to be rewarded for their work, but I haven‚Äôt heard anything conclusive just yet. If it does, expect a lot more high-quality assets in the near future.</p></blockquote><p>Most people would probably agree that being retired with a terrible disease that affects your quality of life is a lot worse than being retired in good health. So why would you keep using a game engine that‚Äôs making you miserable? Making games is supposed to be <em>fun</em>!</p><p>If it‚Äôs just the Unity Asset Store holding you back, there‚Äôs probably nothing I can say to convince you to give Godot a chance. But if you‚Äôre resourceful and don‚Äôt mind a little extra work, and/or you‚Äôre willing to port your scripts over and import your 3D models into Godot, you might be pleasantly surprised by what you‚Äôre missing.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="youre-the-star-of-the-show">You‚Äôre the star of the show<a href="#youre-the-star-of-the-show" class="hash-link" aria-label="Direct link to You‚Äôre the star of the show" title="Direct link to You‚Äôre the star of the show">‚Äã</a></h2><p>Godot prioritizes developer experience. I don‚Äôt think that‚Äôs explicitly written in the docs, and I‚Äôve never heard anyone else say it, but that‚Äôs how I feel when I use Godot. Sure, it has fewer features than the dominating game engines, but the ‚Äúfew‚Äù features it does have are so polished and well thought-out that it‚Äôs a joy to use. When I use Godot, I feel special. Godot‚Äôs docs are thorough, well-written, and explanatory. If you‚Äôre really stuck, you can look through it‚Äôs source code (I‚Äôve actually done that a few times and figured things out). Everything just works (generally), right out of the box!</p><p>Did you know that killer features like Godot 4‚Äôs <code>NavigationServer</code> (with local object avoidance) <a href="https://godotengine.org/article/release-candidate-godot-3-5-rc-5" target="_blank" rel="noopener noreferrer">are now available</a> as of 3.5? You can even compute navigation meshes at runtime. The Godot developers prove their commitment to you by back-porting some of the most valuable features that were developed for 4.0. They‚Äôre doing that because <em>you ‚Äî the game developer</em> ‚Äî are the focal point of their universe.</p><p>The Godot team is not seeking commercial success. It‚Äôs the same strategy that worked for Blender: make the best possible program <em>for the people</em>. They couldn‚Äôt make it any clearer: the Godot team wants you to have a good time making games!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ill-wait-until-the-next-version">"I‚Äôll wait until the next version."<a href="#ill-wait-until-the-next-version" class="hash-link" aria-label="Direct link to &quot;I‚Äôll wait until the next version.&quot;" title="Direct link to &quot;I‚Äôll wait until the next version.&quot;">‚Äã</a></h2><p>A lot of people are holding out for Godot 4.0. Either they‚Äôre procrastinating, or they sincerely believe Godot can‚Äôt do what they want it to do. That might be true for a big team making the next big thing, but for most of us indie devs ‚Äî really? You can‚Äôt start work on <em>anything</em> yet just because Godot doesn‚Äôt have LOD? I have a hard time believing that.</p><p>Long-time Unity users probably know the feeling of waking up to find out that a feature they really enjoyed (or relied on) was getting axed because Unity wanted to monetize something differently instead of <em>just making the developers happy.</em></p><p>Chances are, by the time you succeed in pushing the limits of Godot, a new version will have been released that can do even more.</p><p>We‚Äôre not waiting on Godot anymore, and neither should you. It‚Äôs time for you to be happy.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="c-in-godot-where-were-at-in-2022">C# in Godot: where we‚Äôre at in 2022<a href="#c-in-godot-where-were-at-in-2022" class="hash-link" aria-label="Direct link to C# in Godot: where we‚Äôre at in 2022" title="Direct link to C# in Godot: where we‚Äôre at in 2022">‚Äã</a></h2><p>C# support in Godot has come a long ways since it was first introduced years ago. Godot allows you to use C# 10, which makes for an incredible developer experience (Unity doesn‚Äôt even fully support C# 9).</p><p>While the C# Godot community is fairly small (about <a href="https://docs.google.com/forms/d/e/1FAIpQLSe-OIpxXqou9cDnPXEAjxzpICbf8_YZB3jUizdECXRydtB8cA/viewanalytics" target="_blank" rel="noopener noreferrer">14% of the approximately 5,000</a> users who responded to the Godot Community Poll 2022 are using C#), we‚Äôve been able to create <a href="https://github.com/chickensoft-games/GodotEnv" target="_blank" rel="noopener noreferrer">addon managers</a>, <a href="https://github.com/chickensoft-games/go_dot_test" target="_blank" rel="noopener noreferrer">test frameworks</a>, <a href="https://github.com/Carnagion/GDSerializer" target="_blank" rel="noopener noreferrer">serializers</a>, <a href="https://github.com/Carnagion/Modot" target="_blank" rel="noopener noreferrer">mod loaders</a>, <a href="https://github.com/chickensoft-games/go_dot_log" target="_blank" rel="noopener noreferrer">logging</a>, <a href="https://github.com/chickensoft-games/go_dot_net" target="_blank" rel="noopener noreferrer">node-based dependency managers</a>, <a href="https://github.com/chickensoft-games/GameTemplate" target="_blank" rel="noopener noreferrer">Steam integrations</a>, and so much more.</p><p>On Reddit, <a href="https://www.reddit.com/r/godot/" target="_blank" rel="noopener noreferrer">r/Godot</a> has 90,000+ members. The <a href="https://discord.gg/4JBkykG" target="_blank" rel="noopener noreferrer">official discord</a> has well over 45,000. With thousands more joining all the time, you‚Äôd be in good company. <a href="https://godotes.com/q1-2022/" target="_blank" rel="noopener noreferrer">Tons of games on Steam</a> are released using Godot. <a href="https://www.patreon.com/godotengine/posts" target="_blank" rel="noopener noreferrer">On Patreon</a>, Godot is bringing in over $15,000 a month.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="c-in-godot">C# in Godot<a href="#c-in-godot" class="hash-link" aria-label="Direct link to C# in Godot" title="Direct link to C# in Godot">‚Äã</a></h2><p>Setting up a complex Godot project with C# can be a bit tricky, especially if you‚Äôre not familiar with the strange hell that is MSBuild. In spite of it all, the community has helped me accomplish everything I‚Äôve ever wanted to do.</p><blockquote><p>I‚Äôve spent a lot of time documenting how to setup C# projects in Godot, especially since a lot of the people wanting to use C# with Godot are fairly new to it. If you want some examples and documentation for how to setup and structure your project, I highly encourage you to check out some of the GitHub repositories for my organization, <a href="https://github.com/chickensoft-games" target="_blank" rel="noopener noreferrer">Chickensoft</a>. Or you can pop into our <a href="https://discord.gg/MjA6HUzzAE" target="_blank" rel="noopener noreferrer">Discord</a> server and we‚Äôll be happy to help!</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="but-what-about-testing">But what about testing?<a href="#but-what-about-testing" class="hash-link" aria-label="Direct link to But what about testing?" title="Direct link to But what about testing?">‚Äã</a></h3><p>If you‚Äôre a test-driven development occultist (or just enthusiastic about testing), you might be wondering how to write tests for your C# Godot game. For a while, that was very difficult, unless you were using XUnit with <a href="https://www.jetbrains.com/rider/" target="_blank" rel="noopener noreferrer">Rider</a> (which has its own challenges).</p><p>Testing is no longer difficult to setup. There are multiple libraries for writing tests for C# Godot code, including Chickensoft's official <a href="https://github.com/chickensoft-games/go_dot_test" target="_blank" rel="noopener noreferrer">test framework, go_dot_test</a> that lets you debug tests from VSCode, collect coverage, and run tests from the command line.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="whats-missing-in-the-godot-c-ecosystem">What‚Äôs missing in the Godot C# ecosystem?<a href="#whats-missing-in-the-godot-c-ecosystem" class="hash-link" aria-label="Direct link to What‚Äôs missing in the Godot C# ecosystem?" title="Direct link to What‚Äôs missing in the Godot C# ecosystem?">‚Äã</a></h3><p>While Godot‚Äôs C# support is truly incredible, the ecosystem is fairly light on utilities, particularly networking frameworks and deep editor integrations for C#. There‚Äôs also no single, direct equivalent to tools like <a href="https://assetstore.unity.com/packages/tools/utilities/odin-inspector-and-serializer-89041" target="_blank" rel="noopener noreferrer">Odin</a> for Unity. If you‚Äôre up for the challenge of being an early adopter and lie awake at night thinking about open source software, you could be the one to create the next big, useful tool for the Godot C# world.</p><p>While Godot has incredible, easy-to-use RPC networking support built into the current 3.x versions, it doesn‚Äôt have the ability to swap out transports to use something like Steamworks or other messaging protocols under the hood, at least from what I understand. <a href="https://godotengine.org/article/multiplayer-changes-godot-4-0-report-3" target="_blank" rel="noopener noreferrer">That might be coming in 4.0</a>.</p><p>Even so, we're currently building our own networking library in C# for Godot, loosely inspired by <a href="https://github.com/vis2k/Mirror" target="_blank" rel="noopener noreferrer">Mirror</a> and <a href="https://github.com/Unity-Technologies/com.unity.netcode.gameobjects" target="_blank" rel="noopener noreferrer">Netcode for GameObjects</a> that circumvents Godot‚Äôs networking entirely, for those who might want a more custom approach to networking or need to support certain transports. I‚Äôll take all the help I can get, too, because I am way out of my depth on this one!</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-else-should-i-know-about-c-in-godot">What else should I know about C# in Godot?<a href="#what-else-should-i-know-about-c-in-godot" class="hash-link" aria-label="Direct link to What else should I know about C# in Godot?" title="Direct link to What else should I know about C# in Godot?">‚Äã</a></h3><p>Like other engines, Godot marshals types back and forth between its C++ and C# layers. Not all types can convert into one of Godot‚Äôs types, but it isn‚Äôt as big of a problem as you might think. For most game logic, you can create classes, records, and structs the way you normally would, and everything will work fine in the C# layer.</p><p>If you need to pass a type to a Godot subsystem, or to a node that‚Äôs using GDScript, you‚Äôll want to make sure any custom objects involved are C# classes that extend <code>Godot.Object</code> (or <code>Godot.Reference</code>), since that‚Äôs the only way Godot can serialize and track values correctly (the c++ layer uses reference counting, not garbage collection). You can also use C#‚Äôs events, which are strongly typed, but if you need to interface with node events, you should use Godot‚Äôs signal system. In general, I tend to prefer vanilla C# features over Godot types to avoid marshaling penalties and to leverage C#‚Äôs strong typing. When I need to interface with Godot nodes, GDScript, or anything that expects Godot types, I adopt Godot‚Äôs way of doing things. So far, that has worked out really well for me, and I think it will for you, too.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-about-asynchrony">What about asynchrony?<a href="#what-about-asynchrony" class="hash-link" aria-label="Direct link to What about asynchrony?" title="Direct link to What about asynchrony?">‚Äã</a></h3><p>Using <code>async</code> and <code>await</code> with C#‚Äôs Task can be a bit of a headache with Godot, especially if you don‚Äôt realize that that most ways of executing an async Task in C# starts a new thread (or recycles one from the task thread pool). In general, I recommend avoiding asynchrony where possible, unless you have a good way of keeping it self-contained and use it only where absolutely necessary, such as for loading systems or in integration tests (where you need to <code>await</code> across frames). If you can‚Äôt escape asynchrony, you can always use C# events to interface with the rest of your synchronous code to keep things simple.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="c-constructors-and-godot">C# constructors and Godot<a href="#c-constructors-and-godot" class="hash-link" aria-label="Direct link to C# constructors and Godot" title="Direct link to C# constructors and Godot">‚Äã</a></h3><p>Because of the way Godot spins up classes, you should avoid creating values in your Godot Node‚Äôs constructor and instead initialize values when Godot calls your node‚Äôs <code>_Ready</code> method. If you try to do it too early, you introduce a lot of instability in your game. Since C# doesn‚Äôt have a <code>late</code> modifier (Dart) or <code>lazy</code> (Kotlin), you can simply initialize values to <code>null</code> (or <code>null!</code> if you‚Äôre using null-aware code) and finish initializing your fields in <code>_Ready</code>.</p><p>I know that‚Äôs a little technical, but knowing those few things should save you a few headaches. It certainly would have helped us!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="open-source-always-wins">Open source always wins<a href="#open-source-always-wins" class="hash-link" aria-label="Direct link to Open source always wins" title="Direct link to Open source always wins">‚Äã</a></h2><p>Godot may not ever be the dominating game engine, but we believe an open source game engine will dominate the field someday, given enough time. Godot prioritizes developers, and when developers win, everyone else eventually wins, too.</p><p>So what are you waiting on? It‚Äôs certainly not Godot. Make that indie C# game you‚Äôve been dreaming about! We‚Äôll always be in <a href="https://discord.gg/MjA6HUzzAE" target="_blank" rel="noopener noreferrer">Discord</a> to help! Visit <a href="https://github.com/chickensoft-games" target="_blank" rel="noopener noreferrer">Chickensoft</a> on Github!</p><div class="inviteContainer_H3cR"><div class="discordServer_Be5H"><h3 class="discordInviteText_xFKC">You have been invited to join a server</h3><div class="discordInviteBody_jtVf"><div><img src="/img/chickensoft/chickensoft_logo.svg" class="serverImage_snrK"></div><div class="discordInviteDetails_UNwE"><h3 class="discordInviteName_OuUx">Chickensoft</h3><div class="discordInviteCounts_wTwU"><i class="discordInviteStatusIcon_ySkV discordInviteOnlineIcon_e0ks"></i><strong class="discordInviteCount_qEVM"><span id="discordNumOnline">#</span> <!-- -->Online</strong><i class="discordInviteStatusIcon_ySkV discordInviteOfflineIcon_R82S"></i><strong class="discordInviteCount_qEVM"><span id="discordNumMembers">#</span> <!-- -->Members</strong></div></div></div><div class="discordButtonContainer_oTIm"><a class="button button--primary button--lg discordInviteJoinButton_VJ9M" href="https://discord.gg/MjA6HUzzAE">Join</a></div></div></div>]]></content:encoded>
        </item>
    </channel>
</rss>